{
  "AbstractFactory": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "BancoInternacional",
        "archivos": {
          "model": {
            "Colombia.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.BancoOperaciones;\r\n\r\npublic class Colombia implements BancoOperaciones{\r\n\tpublic double Monto;\r\n    public String DocumentoCliente;\r\n    public double InteresCalculado;\r\n    public String numeroTarjetaGenerado;\r\n    public boolean Aprobada;\r\n\r\n\t@Override\r\n\tpublic String ejecutarCalculadorIntereses(double monto) {\r\n\t\tthis.Monto = monto;\r\n\t\tInteresCalculado = this.Monto * 0.3;\r\n\t    return \"Interés calculado: $\" + InteresCalculado;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String validarTarjetaCredito(String documento) {\r\n\t\tthis.DocumentoCliente = documento;\r\n\t\t\r\n\t\tthis.numeroTarjetaGenerado = \"TC-\" + DocumentoCliente.substring(0, 3).toUpperCase() + \"-\" + (int)(Math.random() * 10000);\r\n        this.Aprobada = true;\r\n        return \"Tarjeta de crédito Colombiana emitida exitosamente: \" + numeroTarjetaGenerado;\r\n        \r\n\t}\r\n\r\n}\r\n",
            "USA.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.BancoOperaciones;\r\n\r\npublic class USA implements BancoOperaciones {\r\n\r\n\tpublic double Monto;\r\n    public String DocumentoCliente;\r\n    public double InteresCalculado;\r\n    public String numeroTarjetaGenerado;\r\n    public boolean Aprobada;\r\n\t\r\n\r\n\t@Override\r\n\tpublic String ejecutarCalculadorIntereses(double monto) {\r\n\t\tthis.Monto = monto;\r\n\t\tInteresCalculado = this.Monto * 0.5;\r\n\t    return \"Interés calculado: $\" + InteresCalculado;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String validarTarjetaCredito(String documento) {\r\n\t\tthis.DocumentoCliente=documento;\r\n\t\tthis.numeroTarjetaGenerado = \"TC-\" + DocumentoCliente.substring(0, 3).toUpperCase() + \"-\" + (int)(Math.random() * 10000);\r\n        this.Aprobada = true;\r\n        return \"American credit card successfully issued: \" + numeroTarjetaGenerado;\r\n\t}\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic double leerDatoDecimal(String mensaje) {\r\n\t\tdouble dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextDouble();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t    System.out.print(mensaje);\r\n\t    if (sc.hasNextLine()) {\r\n\t        sc.nextLine();\r\n\t    }\r\n\t    dato = sc.nextLine();\r\n\t    return dato;\r\n\t}\r\n\r\n}"
          },
          "controller": {
            "AplBancoInternacional.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplBancoInternacional {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.BancoFactory;\r\nimport co.edu.udistrital.model.fabricaAbstracta.BancoOperaciones;\r\nimport co.edu.udistrital.model.fabricaConcreta.ColombiaConcreto;\r\nimport co.edu.udistrital.model.fabricaConcreta.USAConcreto;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class Controller {\r\nprivate VistaConsola vista;\r\n\t\r\n    public Controller() {\r\n    \tvista = new VistaConsola();\r\n\t}\r\n    \r\n    public void run() {\r\n    \tint op = 0;\r\n        do{\r\n            op=menu();\r\n            switch(op){\r\n                case 1:\r\n                    pais(new ColombiaConcreto());\r\n                    break;\r\n                case 2:\r\n                    pais(new USAConcreto());\r\n                    break;\r\n                case 3:\r\n                    vista.mostrarInformacion(\"Cerrando Programa\");\r\n                    System.exit(0);\r\n                default :\r\n                \t vista.mostrarInformacion(\".....Opcion invalida....\");\r\n            }\r\n            vista.mostrarInformacion(\"\");\r\n        }while(op!=4);\r\n    }\r\n    \r\n    public void pais(BancoFactory operaciones) {\r\n        BancoOperaciones operacion = operaciones.crearOperacion();\r\n\r\n        int opcionOperacion;\r\n        do {\r\n        \topcionOperacion = menuOperaciones();\r\n        \tswitch (opcionOperacion) {\r\n            \tcase 1:\r\n            \t\tdouble monto = vista.leerDatoDecimal(\"Ingrese el monto para calcular intereses:\");\r\n            \t\tString resultadoInteres = operacion.ejecutarCalculadorIntereses(monto);\r\n            \t\tvista.mostrarInformacion(resultadoInteres);\r\n            \t\tbreak;\r\n            \tcase 2:\r\n            \t\tString documento = \"\";\r\n            \t\tdo {\r\n            \t\t\tdocumento = vista.leerTexto(\"Ingrese el documento del cliente:\");\r\n            \t\t\tif (documento.length() < 3) {\r\n            \t\t\t\tvista.mostrarInformacion(\"Documento inválido. Debe tener al menos 3 caracteres.\");\r\n            \t\t\t}\r\n            \t\t} while (documento.length() < 3);\r\n            \t\tString resultadoTarjeta = operacion.validarTarjetaCredito(documento);\r\n            \t\tvista.mostrarInformacion(resultadoTarjeta);\r\n            \t\tbreak;\r\n            \tcase 3:\r\n            \t\tvista.mostrarInformacion(\"Volviendo al menú principal...\");\r\n\t                break;\r\n            \tdefault:\r\n            \t\tvista.mostrarInformacion(\"Opción inválida en operaciones.\");\r\n        \t}\r\n        }while (opcionOperacion != 3);\r\n    }\r\n    \r\n    public int  menu(){\r\n        String menu2 = \r\n                \"MENU DE OPCIONES\\n\"\r\n                + \"1.   Ejecutar procesos de Colombia. \\n\"\r\n                + \"2.   Ejecutar procesos de USA. \\n\"\r\n                + \"3.   Cerrar programa. \\n\\n\"\r\n                + \"Seleccion opcion...\";\r\n        return vista.leerDatoEntero(menu2);\r\n    }\r\n    \r\n    public int menuOperaciones() {\r\n        String menu = \r\n                \"¿Qué operación desea realizar?\\n\"\r\n                + \"1. Calcular intereses\\n\"\r\n                + \"2. Emitir tarjeta de credito\\n\"\r\n                + \"3. Volver al menu principal\\n\\n\"\r\n                + \"Seleccione opción...\";\r\n        return vista.leerDatoEntero(menu);\r\n    }\r\n    \r\n}"
          }
        }
      },
      {
        "nombre": "Ecommerce",
        "archivos": {
          "model": {
            "TiendaAlimentos.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.EcommerceProducto;\r\n\r\npublic class TiendaAlimentos implements EcommerceProducto{\r\n\r\n\t@Override\r\n\tpublic String mostrarCatalogo() {\r\n\t\treturn  \"Mostrando catálogo de alimentos: \"+\"\\n\"+\"-mini donas\"+\"\\n\"+ \"-cupcakes\"+\"\\n\"+ \"-fresas con chocolate\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String ejecutarPago() {\r\n\t\treturn \"Procesando pago por banco digital para alimentos.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String validarEnvio() {\r\n\t\treturn \"Enviando alimentos con transporte refigerado.\\n\";\r\n\t}\r\n\r\n}\r\n",
            "TiendaRopa.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.EcommerceProducto;\r\n\r\npublic class TiendaRopa implements EcommerceProducto{\r\n\r\n\t@Override\r\n\tpublic String mostrarCatalogo() {\r\n\t\treturn \"Mostrando catálogo de ropa: \"+\"\\n\"+\"-chaquetas\"+\"\\n\"+ \"-faldas\"+\"\\n\"+ \"-jeans\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String ejecutarPago() {\r\n\t\treturn \"Procesando pago contra entrega para ropa.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String validarEnvio() {\r\n\t\treturn \"Enviando ropa en paquete estándar.\\n\";\r\n\t}\r\n\r\n}\r\n",
            "TiendaTecnologia.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.EcommerceProducto;\r\n\r\npublic class TiendaTecnologia implements EcommerceProducto{\r\n\r\n\t@Override\r\n\tpublic String mostrarCatalogo() {\r\n\t\treturn \"Mostrando catálogo de ropa: \"+\"\\n\"+\"-celulares\"+\"\\n\"+ \"-laptops\"+\"\\n\"+ \"-TVs\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String ejecutarPago() {\r\n\t\treturn \"Procesando pago con tarjeta de crédito o transferencia.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String validarEnvio() {\r\n\t\treturn \"Enviando tecnología con seguro y guía de seguimiento.\\n\";\r\n\t}\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\r\n}"
          },
          "controller": {
            "AplEcommerce.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplEcommerce {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.VistaConsola;\r\nimport co.edu.udistrital.model.fabricaAbstracta.*;\r\nimport co.edu.udistrital.model.fabricaConcreta.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n\tpublic Controller() {\r\n\t\tvista = new VistaConsola();\r\n\t}\r\n\t\r\n\tpublic void run() {\r\n\t\tint op=0;\r\n\t\tdo {\r\n\t\t\top=menu();\r\n\t\t\tswitch(op) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\ttienda(new TiendaAlimentosConcreta());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\ttienda(new TiendaRopaConcreta());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\ttienda(new TiendaTecnologiaConcreta());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tvista.mostrarInformacion(\"Cerrando Programa\");\r\n                    System.exit(0);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvista.mostrarInformacion(\".....Opcion invalida....\");\r\n\t\t\t}\r\n\t\t\tvista.mostrarInformacion(\"\");\r\n\t\t}while(op!=5);\r\n\t}\r\n\t\r\n\tpublic void tienda(EcommerceFactory productos) {\r\n\t\tEcommerceProducto producto = productos.crearProducto();\r\n\t\t\r\n\t\tint opcionOperacion;\r\n\t    do {\r\n\t        opcionOperacion = menuOperaciones();\r\n\t        switch (opcionOperacion) {\r\n\t            case 1:\r\n\t                vista.mostrarInformacion(producto.mostrarCatalogo());\r\n\t                break;\r\n\t            case 2:\r\n\t                vista.mostrarInformacion(producto.ejecutarPago());\r\n\t                break;\r\n\t            case 3:\r\n\t                vista.mostrarInformacion(producto.validarEnvio());\r\n\t                break;\r\n\t            case 4:\r\n\t                vista.mostrarInformacion(\"Volviendo al menú principal...\");\r\n\t                break;\r\n\t            default:\r\n\t                vista.mostrarInformacion(\"Opción inválida en operaciones.\");\r\n\t        }\r\n\t    } while (opcionOperacion != 4);\r\n\t\t\r\n\t\t\r\n\t}\r\n\tpublic int  menu(){\r\n        String menu2 = \r\n                \"MENU DE OPCIONES\\n\"\r\n                + \"1.   Ir a la tienda de alimentos. \\n\"\r\n                + \"2.   Ir a la tienda de ropa. \\n\"\r\n                + \"3.   Ir a la tienda de tecnologia. \\n\"\r\n                + \"4.   Salir. \\n\\n\"\r\n                + \"Seleccion opcion...\";\r\n        return vista.leerDatoEntero(menu2);\r\n    }\r\n\t\r\n\tpublic int menuOperaciones() {\r\n        String menu = \r\n                \"¿Qué operación desea realizar? \\n\"\r\n                + \"1. Ver el catalogo de la tienda. \\n\"\r\n                + \"2. Ejecutar el pago del pedido. \\n\"\r\n                + \"3. Hacer el envio del pedido. \\n\"\r\n                + \"4. Volver al menu principar. \\n\\n\"\r\n                + \"Seleccione opción...\";\r\n        return vista.leerDatoEntero(menu);\r\n    }\r\n\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "FabricaAutos",
        "archivos": {
          "model": {
            "AutoElectrico.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.FabricaPartes;\r\n\r\npublic class AutoElectrico implements FabricaPartes{\r\n\r\n\t@Override\r\n\tpublic String crearMotor() {\r\n\t\treturn \"Ensamblando motor eléctrico.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String crearBateria() {\r\n\t\treturn \"Cargando batería de litio.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String crearSistemaControl() {\r\n\t\treturn \"Calibrando sistema de control electrónico.\\n\";\r\n\t}\r\n\r\n}\r\n",
            "AutoGasolina.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.FabricaPartes;\r\n\r\npublic class AutoGasolina implements FabricaPartes{\r\n\r\n\t@Override\r\n\tpublic String crearMotor() {\r\n\t\treturn \"Ensamblando motor de combustión interna.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String crearBateria() {\r\n\t\treturn \"Verificando batería de arranque.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String crearSistemaControl() {\r\n\t\treturn \"Calibrando sistema de control mecánico.\\n\";\r\n\t}\r\n\r\n}\r\n",
            "AutoHibrido.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.FabricaPartes;\r\n\r\npublic class AutoHibrido implements FabricaPartes{\r\n\r\n\t@Override\r\n\tpublic String crearMotor() {\r\n\t\treturn \"Ensamblando motor híbrido (eléctrico + combustión).\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String crearBateria() {\r\n\t\treturn \"Cargando batería híbrida.\\n\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String crearSistemaControl() {\r\n\t\treturn \"Calibrando sistema de control híbrido.\\n\";\r\n\t}\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\r\n}\r\n"
          },
          "controller": {
            "AplFabrica.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplFabrica {\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.fabricaAbstracta.*;\r\nimport co.edu.udistrital.model.fabricaConcreta.*;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n\tpublic Controller() {\r\n\t\tvista = new VistaConsola();\r\n\t}\r\n\t\r\n\tpublic void run() {\r\n\t\tint op=0;\r\n\t\tdo {\r\n\t\t\top=menu();\r\n\t\t\tswitch(op) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tauto(new AutoElectricoConcreta());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tauto(new AutoGasolinaConcreta());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tauto(new AutoHibridoConcreta());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tvista.mostrarInformacion(\"Cerrando Programa\");\r\n                    System.exit(0);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvista.mostrarInformacion(\".....Opcion invalida....\");\r\n\t\t\t}\r\n\t\t\tvista.mostrarInformacion(\"\");\r\n\t\t}while(op!=5);\r\n\t}\r\n\t\r\n\tpublic void auto(FabricaFactory partes) {\r\n\t\tFabricaPartes parte = partes.crearPartes();\r\n\t\t\r\n\t\tint opcionOperacion;\r\n\t    do {\r\n\t        opcionOperacion = menuOperaciones();\r\n\t        switch (opcionOperacion) {\r\n\t            case 1:\r\n\t                vista.mostrarInformacion(parte.crearBateria());\r\n\t                break;\r\n\t            case 2:\r\n\t                vista.mostrarInformacion(parte.crearMotor());\r\n\t                break;\r\n\t            case 3:\r\n\t                vista.mostrarInformacion(parte.crearSistemaControl());\r\n\t                break;\r\n\t            case 4:\r\n\t                vista.mostrarInformacion(\"Volviendo al menú principal...\");\r\n\t                break;\r\n\t            default:\r\n\t                vista.mostrarInformacion(\"Opción inválida en operaciones.\");\r\n\t        }\r\n\t    } while (opcionOperacion != 4);\r\n\t\t\r\n\t\t\r\n\t}\r\n\tpublic int  menu(){\r\n        String menu2 = \r\n                \"MENU DE OPCIONES\\n\"\r\n                + \"1.   Crear auto electrico. \\n\"\r\n                + \"2.   Crear auto gasolina. \\n\"\r\n                + \"3.   Crear auto hibrido. \\n\"\r\n                + \"4.   Salir. \\n\\n\"\r\n                + \"Seleccion opcion...\";\r\n        return vista.leerDatoEntero(menu2);\r\n    }\r\n\t\r\n\tpublic int menuOperaciones() {\r\n        String menu = \r\n                \"¿Qué operación desea realizar? \\n\"\r\n                + \"1. Crear bateria. \\n\"\r\n                + \"2. Crear motor. \\n\"\r\n                + \"3. Crear sistema de control. \\n\"\r\n                + \"4. Volver al menu principar. \\n\\n\"\r\n                + \"Seleccione opción...\";\r\n        return vista.leerDatoEntero(menu);\r\n    }\r\n\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Adapter": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "GestiónDeTemperaturas",
        "archivos": {
          "model": {
            "AdaptadorFahrenheit.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdaptadorFahrenheit implements SensorTemperatura {\r\n    private SensorFahrenheitExterno sensor;\r\n\r\n    public AdaptadorFahrenheit(SensorFahrenheitExterno sensor) {\r\n        this.sensor = sensor;\r\n    }\r\n\r\n    @Override\r\n    public double leerTemperatura() {\r\n        return (sensor.getFahrenheit() - 32) * 5.0 / 9.0;\r\n    }\r\n}",
            "AdaptadorKelvin.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdaptadorKelvin implements SensorTemperatura {\r\n    private SensorKelvinExterno sensor;\r\n\r\n    public AdaptadorKelvin(SensorKelvinExterno sensor) {\r\n        this.sensor = sensor;\r\n    }\r\n\r\n    @Override\r\n    public double leerTemperatura() {\r\n        return sensor.getKelvin() - 273.15;\r\n    }\r\n}",
            "SensorCelsius.java": "package co.edu.udistrital.model;\r\n\r\npublic class SensorCelsius implements SensorTemperatura {\r\n    @Override\r\n    public double leerTemperatura() {\r\n        return 22.5;\r\n    }\r\n}",
            "SensorFahrenheitExterno.java": "package co.edu.udistrital.model;\r\n\r\npublic class SensorFahrenheitExterno {\r\n\tpublic double getFahrenheit() {\r\n        return 75.2; \r\n    }\r\n}\r\n",
            "SensorKelvinExterno.java": "package co.edu.udistrital.model;\r\n\r\npublic class SensorKelvinExterno {\r\n\tpublic double getKelvin() {\r\n        return 295.15;\r\n    }\r\n}\r\n",
            "SensorTemperatura.java": "package co.edu.udistrital.model;\r\n\r\npublic interface SensorTemperatura {\r\n\tdouble leerTemperatura();\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarTemperatura(String nombre, double valor) {\r\n        System.out.printf(\"Sensor %s: %.2f °C%n\", nombre, valor);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller controller = new Controller();\r\n        controller.ejecutarLecturas();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutarLecturas() {\r\n        SensorTemperatura sensor1 = new SensorCelsius();\r\n        SensorTemperatura sensor2 = new AdaptadorFahrenheit(new SensorFahrenheitExterno());\r\n        SensorTemperatura sensor3 = new AdaptadorKelvin(new SensorKelvinExterno());\r\n\r\n        vista.mostrarTemperatura(\"Celsius Interno\", sensor1.leerTemperatura());\r\n        vista.mostrarTemperatura(\"Fahrenheit Externo\", sensor2.leerTemperatura());\r\n        vista.mostrarTemperatura(\"Kelvin Externo\", sensor3.leerTemperatura());\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "IntegraciónDeImpresoras",
        "archivos": {
          "model": {
            "AdaptadorBrother.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdaptadorBrother implements Impresora {\r\n    private ImpresoraBrotherAPI brother;\r\n\r\n    public AdaptadorBrother(ImpresoraBrotherAPI brother) {\r\n        this.brother = brother;\r\n    }\r\n\r\n    @Override\r\n    public String imprimir(String contenido) {\r\n        byte[] datos = contenido.getBytes();\r\n        brother.startJob(datos);\r\n        return \"Brother imprimió el documento.\";\r\n    }\r\n}\r\n",
            "AdaptadorHP.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdaptadorHP implements Impresora {\r\n    private ImpresoraHPExterna hp;\r\n\r\n    public AdaptadorHP(ImpresoraHPExterna hp) {\r\n        this.hp = hp;\r\n    }\r\n\r\n    @Override\r\n    public String imprimir(String contenido) {\r\n        boolean exito = hp.send(contenido, 1);\r\n        return exito ? \"HP imprimió correctamente.\" : \"Fallo en impresión con HP.\";\r\n    }\r\n}",
            "Impresora.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Impresora {\r\n\tString imprimir(String contenido);\r\n}\r\n",
            "ImpresoraBrotherAPI.java": "package co.edu.udistrital.model;\r\n\r\npublic class ImpresoraBrotherAPI {\r\n\tpublic void startJob(byte[] bytes) {\r\n        System.out.println(\"Brother recibió \" + bytes.length + \" bytes para imprimir.\");\r\n    }\r\n}\r\n",
            "ImpresoraCanon.java": "package co.edu.udistrital.model;\r\n\r\npublic class ImpresoraCanon implements Impresora {\r\n\r\n    @Override\r\n    public String imprimir(String contenido) {\r\n        return \"Canon imprimió: \" + contenido;\r\n    }\r\n}\r\n",
            "ImpresoraHPExterna.java": "package co.edu.udistrital.model;\r\n\r\npublic class ImpresoraHPExterna {\r\n\tpublic boolean send(String data, int copies) {\r\n        System.out.println(\"HP externa recibió \" + copies + \" copia(s).\");\r\n        return true;\r\n    }\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarResultado(String nombre, String resultado) {\r\n        System.out.println(\"[Vista] \" + nombre + \": \" + resultado);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller controller = new Controller();\r\n        controller.enviarDocumentos();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void enviarDocumentos() {\r\n        Impresora canon = new ImpresoraCanon();\r\n        Impresora hp = new AdaptadorHP(new ImpresoraHPExterna());\r\n        Impresora brother = new AdaptadorBrother(new ImpresoraBrotherAPI());\r\n\r\n        vista.mostrarResultado(\"Canon\", canon.imprimir(\"Reporte mensual\"));\r\n        vista.mostrarResultado(\"HP\", hp.imprimir(\"Factura #456\"));\r\n        vista.mostrarResultado(\"Brother\", brother.imprimir(\"Resumen de actividad\"));\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ReproducciónDeMusica",
        "archivos": {
          "model": {
            "AdaptadorOGG.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdaptadorOGG implements FuenteAudio {\r\n    private FuenteOGGVintage ogg;\r\n\r\n    public AdaptadorOGG(FuenteOGGVintage ogg) {\r\n        this.ogg = ogg;\r\n    }\r\n\r\n    @Override\r\n    public String reproducir(String archivo) {\r\n        return ogg.loadAndPlay(archivo);\r\n    }\r\n}\r\n",
            "AdaptadorStreaming.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdaptadorStreaming implements FuenteAudio {\r\n    private FuenteStreamingAPI stream;\r\n\r\n    public AdaptadorStreaming(FuenteStreamingAPI stream) {\r\n        this.stream = stream;\r\n    }\r\n\r\n    @Override\r\n    public String reproducir(String archivo) {\r\n        byte[] datos = archivo.getBytes(); // simulación\r\n        stream.streamFile(datos);\r\n        return \"Reproducción por streaming: \" + archivo;\r\n    }\r\n}\r\n\r\n",
            "AdaptadorWAV.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdaptadorWAV implements FuenteAudio {\r\n    private FuenteWAVExterna wav;\r\n\r\n    public AdaptadorWAV(FuenteWAVExterna wav) {\r\n        this.wav = wav;\r\n    }\r\n\r\n    @Override\r\n    public String reproducir(String archivo) {\r\n        wav.start(archivo);\r\n        return \"WAV externo adaptado: \" + archivo;\r\n    }\r\n}",
            "FuenteAudio.java": "package co.edu.udistrital.model;\r\n\r\npublic interface FuenteAudio {\r\n\tString reproducir(String archivo);\r\n}\r\n",
            "FuenteOGGVintage.java": "package co.edu.udistrital.model;\r\n\r\npublic class FuenteOGGVintage {\r\n\tpublic String loadAndPlay(String name) {\r\n        return \"OGG vintage playing: \" + name;\r\n    }\r\n}\r\n",
            "FuenteStreamingAPI.java": "package co.edu.udistrital.model;\r\n\r\npublic class FuenteStreamingAPI {\r\n\tpublic void streamFile(byte[] bytes) {\r\n        System.out.println(\"Reproduciendo desde streaming de \" + bytes.length + \" bytes.\");\r\n    }\r\n\r\n}\r\n",
            "FuenteWAVExterna.java": "package co.edu.udistrital.model;\r\n\r\npublic class FuenteWAVExterna {\r\n\tpublic void start(String file) {\r\n        System.out.println(\"WAV externo reproduciendo: \" + file);\r\n    }\r\n}\r\n",
            "ReproductorMP3.java": "package co.edu.udistrital.model;\r\n\r\npublic class ReproductorMP3 implements FuenteAudio {\r\n    @Override\r\n    public String reproducir(String archivo) {\r\n        return \"Reproduciendo MP3: \" + archivo;\r\n    }\r\n}"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarReproduccion(String nombre, String mensaje) {\r\n        System.out.println(nombre + \": \" + mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.reproducirCanciones();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void reproducirCanciones() {\r\n        FuenteAudio mp3 = new ReproductorMP3();\r\n        FuenteAudio wav = new AdaptadorWAV(new FuenteWAVExterna());\r\n        FuenteAudio ogg = new AdaptadorOGG(new FuenteOGGVintage());\r\n        FuenteAudio stream = new AdaptadorStreaming(new FuenteStreamingAPI());\r\n\r\n        vista.mostrarReproduccion(\"MP3\", mp3.reproducir(\"cancion1.mp3\"));\r\n        vista.mostrarReproduccion(\"WAV\", wav.reproducir(\"melodia.wav\"));\r\n        vista.mostrarReproduccion(\"OGG\", ogg.reproducir(\"pista.ogg\"));\r\n        vista.mostrarReproduccion(\"Streaming\", stream.reproducir(\"live_track\"));\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Bridge": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "AlertasEnVehículos",
        "archivos": {
          "model": {},
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"¡ALERTA! \" + mensaje + \"\\n\");\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n        Controller control = new Controller();\r\n        control.ejecutarAlertas();\r\n    }\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.implementador.*;\r\nimport co.edu.udistrital.model.abstraccion.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutarAlertas() {\r\n        AlertaVehicular alerta1 = new AlertaSeguridad(new CanalPantalla());\r\n        AlertaVehicular alerta2 = new AlertaMantenimiento(new CanalAppMovil());\r\n        AlertaVehicular alerta3 = new AlertaClimatica(new CanalVoz());\r\n\r\n        vista.mostrar(alerta1.emitir());\r\n        vista.mostrar(alerta2.emitir());\r\n        vista.mostrar(alerta3.emitir());\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ControlIluminación",
        "archivos": {
          "model": {},
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tpublic void mostrarMensaje(String msg) {\r\n        System.out.println(msg);\r\n    }\r\n\r\n    public void mostrarSimulacion(String[] mensajes) {\r\n        for (String msg : mensajes) {\r\n            mostrarMensaje(msg);\r\n        }\r\n    }\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n        Controller control = new Controller();\r\n        control.iniciarSistema();\r\n    }\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.implementador.*;\r\nimport co.edu.udistrital.model.abstraccion.*;\r\n\r\npublic class Controller {\r\n\t\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void iniciarSistema() {\r\n        TipoLuz led = new LuzLED(80);\r\n        TipoLuz solar = new LuzSolar(true);\r\n        TipoLuz fluorescente = new LuzFluorescente(true);\r\n\r\n        ZonaControl interior = new ZonaInterior(led);\r\n        ZonaControl exterior = new ZonaExterior(fluorescente);\r\n        ZonaControl jardin = new ZonaJardin(solar);\r\n\r\n        String[] encendidos = {\r\n            interior.encenderZona(),\r\n            exterior.encenderZona(),\r\n            jardin.encenderZona()\r\n        };\r\n\r\n        vista.mostrarMensaje(\"-----Simulación de encendido:-----\");\r\n        vista.mostrarSimulacion(encendidos);\r\n\r\n        String[] apagados = {\r\n            interior.apagarZona(),\r\n            exterior.apagarZona(),\r\n            jardin.apagarZona()\r\n        };\r\n\r\n        vista.mostrarMensaje(\"\\n\"+\"-----Simulación de apagado:-----\");\r\n        vista.mostrarSimulacion(apagados);\r\n    }\r\n\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ReporteCursos",
        "archivos": {
          "model": {},
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(mensaje + \"\\n\");\r\n    }\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n        Controller control = new Controller();\r\n        control.iniciar();\r\n    }\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.implementador.*;\r\nimport co.edu.udistrital.model.abstraccion.*;\r\n\r\npublic class Controller {\r\n\t\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void iniciar() {\r\n        ReporteCurso reporteNotasPDF = new ReporteNotas(new ExportarPDF());\r\n        ReporteCurso reporteAsistenciaHTML = new ReporteAsistencia(new ExportarHTML());\r\n        ReporteCurso reporteParticipacionCSV = new ReporteParticipacion(new ExportarCSV());\r\n\r\n        vista.mostrar(reporteNotasPDF.generarReporte());\r\n        vista.mostrar(reporteAsistenciaHTML.generarReporte());\r\n        vista.mostrar(reporteParticipacionCSV.generarReporte());\r\n    }\r\n\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Builder": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "ConfiguracionVehiculo",
        "archivos": {
          "model": {
            "Vehiculo.java": "package co.edu.udistrital.model;\r\n\r\npublic class Vehiculo {\r\n\t\r\n\tprivate String motor;\r\n    private String color;\r\n    private String llantas;\r\n    private String accesorios;\r\n\r\n\r\n    public void setMotor(String motor) {\r\n        this.motor = motor;\r\n    }\r\n\r\n    public void setColor(String color) {\r\n        this.color = color;\r\n    }\r\n\r\n    public void setLlantas(String llantas) {\r\n        this.llantas = llantas;\r\n    }\r\n\r\n    public void setAccesorios(String accesorios) {\r\n        this.accesorios = accesorios;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"===== VEHÍCULO =====\\n\"\r\n        \t\t+ \"Motor: \" + motor \r\n        \t\t+ \"\\nColor: \" + color \r\n        \t\t+ \"\\nllantas: \" + llantas \r\n        \t\t+ \"\\nAccesorios: \" + accesorios;\r\n    }\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\r\nprivate Scanner sc;\t\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.controller.*;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.model.concretoCreador.*;\r\nimport co.edu.udistrital.model.creador.*;\r\nimport co.edu.udistrital.model.director.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();   \r\n    }\r\n\r\n    public void run() {\r\n        int opcion;\r\n        VehiculoBuilder builder = new VehiculoConcretoBuilder();\r\n        VehiculoDirector director = new VehiculoDirector(builder);\r\n        \r\n        Vehiculo vehiculo = null;\r\n\r\n        do {\r\n            opcion = menuPrincipal();\r\n            switch (opcion) {\r\n                case 1:\r\n                \tdirector.construirVehiculo();\r\n                    vehiculo = builder.obtenerVehiculo();\r\n                    vista.mostrarInformacion(\"Vehículo construido con éxito.\\n\");\r\n                    break;\r\n                case 2:\r\n                    if (vehiculo != null) {\r\n                        vista.mostrarInformacion(\"=== Vehículo Configurado ===\");\r\n                        vista.mostrarInformacion(vehiculo.toString());\r\n                    } else {\r\n                        vista.mostrarInformacion(\"Primero debe construir el vehículo.\\n\");\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    vista.mostrarInformacion(\"Saliendo del configurador de vehículos...\");\r\n                    break;\r\n                default:\r\n                    vista.mostrarInformacion(\"Opción inválida. Intente de nuevo.\\n\");\r\n            }\r\n        } while (opcion != 3);\r\n    }\r\n\r\n    private int menuPrincipal() {\r\n        String menu = \"\"\"\r\n                === CONFIGURADOR DE VEHÍCULOS ===\r\n                1. Construir vehículo predeterminado\r\n                2. Mostrar vehículo\r\n                3. Salir\r\n                Seleccione una opción: \"\"\";\r\n        return vista.leerDatoEntero(menu);\r\n    }\r\n\r\n\r\n}"
          }
        }
      },
      {
        "nombre": "CreaciónPerfil",
        "archivos": {
          "model": {
            "Perfil.java": "package co.edu.udistrital.model;\r\n\r\npublic class Perfil {\r\n\t\r\n\tprivate String nombre;\r\n    private String biografia;\r\n    private String intereses;\r\n    private String privacidad;\r\n\r\n    public void setNombre(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n\r\n    public void setBiografia(String biografia) {\r\n        this.biografia = biografia;\r\n    }\r\n\r\n    public void setIntereses(String intereses) {\r\n        this.intereses = intereses;\r\n    }\r\n\r\n    public void setPrivacidad(String privacidad) {\r\n        this.privacidad = privacidad;\r\n    }\r\n    \r\n    @Override\r\n    public String toString() {\r\n\t\treturn \"=== PERFIL DE USUARIO ===\\n\"\r\n\t\t\t\t+ \"Nombre: \" + nombre \r\n\t\t\t\t+ \"\\nBiografía: \" + biografia \r\n\t\t\t\t+ \"\\nIntereses: \" + intereses\r\n\t\t\t\t+ \"\\nPrivacidad: \" + privacidad;\t\t\r\n    \t\r\n    }\r\n\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\t\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\tsc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextLine();\r\n\t    return dato;\r\n\t}\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.Perfil;\r\nimport co.edu.udistrital.view.VistaConsola;\r\nimport co.edu.udistrital.model.concretoCredor.*;\r\nimport co.edu.udistrital.model.creador.*;\r\nimport co.edu.udistrital.model.director.*;\r\n\r\npublic class Controller {\r\n\t\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void run() {\r\n        int opcion;\r\n        PerfilBuilder builder = new PerfilConcretoBuilder();\r\n        PerfilDirector director = new PerfilDirector(builder);\r\n\r\n        Perfil perfil = null;\r\n\r\n        do {\r\n            opcion = menuPrincipal();\r\n            switch (opcion) {\r\n                case 1:\r\n                    String nombre = vista.leerTexto(\"Nombre del usuario: \");\r\n                    String bio = vista.leerTexto(\"Biografía: \");\r\n                    String intereses = vista.leerTexto(\"Intereses (separados por coma): \");\r\n                    String privacidad = vista.leerTexto(\"Nivel de privacidad (Público/Privado/Amigos): \");\r\n\r\n                    director.construirPerfil(nombre, bio, intereses, privacidad);\r\n                    perfil = director.obtenerPerfil();\r\n\r\n                    vista.mostrarInformacion(\"Perfil creado con éxito.\");\r\n                    break;\r\n                case 2:\r\n                    if (perfil != null) {\r\n                        vista.mostrarInformacion(perfil.toString());\r\n                    } else {\r\n                        vista.mostrarInformacion(\"Aún no se ha creado ningún perfil.\");\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    vista.mostrarInformacion(\"Saliendo del sistema de perfiles...\");\r\n                    break;\r\n                default:\r\n                    vista.mostrarInformacion(\"Opción inválida.\");\r\n            }\r\n        } while (opcion != 3);\r\n    }\r\n\r\n    private int menuPrincipal() {\r\n        String menu = \"\"\"\r\n                === SISTEMA DE PERFILES ===\r\n                1. Crear nuevo perfil\r\n                2. Mostrar perfil\r\n                3. Salir\r\n                Seleccione una opción:\r\n                \"\"\";\r\n        return vista.leerDatoEntero(menu);\r\n    }\r\n\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ReportePedidos",
        "archivos": {
          "model": {
            "Pedido.java": "package co.edu.udistrital.model;\r\n\r\npublic class Pedido {\r\n\t\r\n\tprivate String cliente;\r\n    private String productos;\r\n    private double total;\r\n    private String observaciones;\r\n\r\n    public void setCliente(String cliente) {\r\n        this.cliente = cliente;\r\n    }\r\n\r\n    public void setProductos(String productos) {\r\n        this.productos = productos;\r\n    }\r\n\r\n    public void setTotal(double total) {\r\n        this.total = total;\r\n    }\r\n\r\n    public void setObservaciones(String observaciones) {\r\n        this.observaciones = observaciones;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n\t\treturn \"=== REPORTE DE PEDIDO ===\\n\"\r\n\t\t\t\t+ \"Cliente: \" + cliente\r\n\t            + \"\\nProductos: \" + productos\r\n\t            + \"\\nTotal: $\" + total\r\n\t            + \"\\nObservaciones: \" + observaciones;\r\n    }\r\n    \r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\t\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\tsc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic double leerDatoDecimal(String mensaje) {\r\n\t\tdouble dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextDouble();\r\n\t\tsc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextLine();\r\n\t    return dato;\r\n\t}\r\n\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\t\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.model.concretoCreador.*;\r\nimport co.edu.udistrital.model.creador.*;\r\nimport co.edu.udistrital.model.director.*;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void run() {\r\n        int opcion;\r\n        PedidoBuilder builder = new PedidoConcretoBuilder();\r\n        PedidoDirector director = new PedidoDirector(builder);\r\n        \r\n        Pedido pedido = null;\r\n        \r\n        do {\r\n            opcion = menu();\r\n            switch (opcion) {\r\n                case 1:\r\n                \tString cliente = vista.leerTexto(\"Nombre del cliente: \");\r\n                \tString productos = vista.leerTexto(\"Productos (ej: hamburguesa, papas, bebida): \");\r\n                \tdouble total = vista.leerDatoDecimal(\"Total del pedido ($): \");\r\n                \tString observaciones = vista.leerTexto(\"Observaciones: \");\r\n                \tdirector.construirPedido(cliente, productos, total, observaciones);\r\n                \tpedido = director.obtenerPedido();\r\n                \t\r\n                \tvista.mostrarInformacion(\"Pedido creado con éxito.\");\r\n                \tbreak;\r\n                case 2:\r\n                \tif (pedido == null) {\r\n                        vista.mostrarInformacion(\"Debe crear un pedido primero.\");\r\n                    } else {\r\n                        vista.mostrarInformacion(pedido.toString());\r\n                    }\r\n                \tbreak;\r\n                case 3:\r\n                \tvista.mostrarInformacion(\"Saliendo del sistema de pedidos...\");\r\n                \tbreak;\r\n                default: \r\n                \tvista.mostrarInformacion(\"Opción inválida.\");\r\n            }\r\n        } while (opcion != 3);\r\n    }\r\n\r\n    private int menu() {\r\n        String texto = \"\"\"\r\n                === SISTEMA DE PEDIDOS ===\r\n                1. Crear nuevo pedido\r\n                2. Mostrar reporte del pedido\r\n                3. Salir\r\n                Seleccione una opción: \"\"\";\r\n        return vista.leerDatoEntero(texto);\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "ChainOfResponsibility": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "AprobaciónSolicitudesUniversidad",
        "archivos": {
          "model": {
            "Coordinador.java": "package co.edu.udistrital.model;\r\n\r\npublic class Coordinador implements ManejadorSolicitud {\r\n    private ManejadorSolicitud siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(ManejadorSolicitud m) {\r\n        this.siguiente = m;\r\n    }\r\n\r\n    @Override\r\n    public String procesar(Solicitud s) {\r\n        if (s.getTipo().equalsIgnoreCase(\"cambio asignatura\")) {\r\n            return \"✅ Coordinador aprobó solicitud: \" + s.getDescripcion();\r\n        } else if (siguiente != null) {\r\n            return \"🔁 Coordinador reenvió al siguiente.\\n\" + siguiente.procesar(s);\r\n        } else {\r\n            return \"❌ Solicitud no pudo ser procesada.\";\r\n        }\r\n    }\r\n}\r\n\r\n",
            "Decano.java": "package co.edu.udistrital.model;\r\n\r\npublic class Decano implements ManejadorSolicitud {\r\n    private ManejadorSolicitud siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(ManejadorSolicitud m) {\r\n        this.siguiente = m;\r\n    }\r\n\r\n    @Override\r\n    public String procesar(Solicitud s) {\r\n        if (s.getTipo().equalsIgnoreCase(\"aplazamiento\")) {\r\n            return \"✅ Decano aprobó solicitud: \" + s.getDescripcion();\r\n        } else if (siguiente != null) {\r\n            return \"🔁 Decano reenvió al siguiente.\\n\" + siguiente.procesar(s);\r\n        } else {\r\n            return \"❌ Solicitud no pudo ser procesada.\";\r\n        }\r\n    }\r\n}\r\n",
            "ManejadorSolicitud.java": "package co.edu.udistrital.model;\r\n\r\npublic interface ManejadorSolicitud {\r\n    void setSiguiente(ManejadorSolicitud m);\r\n    String procesar(Solicitud s);\r\n}\r\n",
            "Rector.java": "package co.edu.udistrital.model;\r\n\r\npublic class Rector implements ManejadorSolicitud {\r\n    private ManejadorSolicitud siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(ManejadorSolicitud m) {\r\n        this.siguiente = m;\r\n    }\r\n\r\n    @Override\r\n    public String procesar(Solicitud s) {\r\n        if (s.getTipo().equalsIgnoreCase(\"beca especial\")) {\r\n            return \"✅ Rector aprobó solicitud: \" + s.getDescripcion();\r\n        } else {\r\n            return \"❌ Rector no pudo procesar la solicitud: \" + s.getDescripcion();\r\n        }\r\n    }\r\n}\r\n\r\n",
            "Solicitud.java": "package co.edu.udistrital.model;\r\n\r\npublic class Solicitud {\r\n    private String tipo;\r\n    private String descripcion;\r\n\r\n    public Solicitud(String tipo, String descripcion) {\r\n        this.tipo = tipo;\r\n        this.descripcion = descripcion;\r\n    }\r\n\r\n    public String getTipo() {\r\n        return tipo;\r\n    }\r\n\r\n    public String getDescripcion() {\r\n        return descripcion;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"---Sistema de Solicitudes---\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        ManejadorSolicitud coordinador = new Coordinador();\r\n        ManejadorSolicitud decano = new Decano();\r\n        ManejadorSolicitud rector = new Rector();\r\n\r\n        coordinador.setSiguiente(decano);\r\n        decano.setSiguiente(rector);\r\n\r\n        Solicitud solicitud1 = new Solicitud(\"cambio asignatura\", \"Cambio de Física a Química.\");\r\n        Solicitud solicitud2 = new Solicitud(\"aplazamiento\", \"Aplazamiento por salud.\");\r\n        Solicitud solicitud3 = new Solicitud(\"beca especial\", \"Beca por excelencia académica.\");\r\n        Solicitud solicitud4 = new Solicitud(\"reintegro\", \"Reingreso después de sanción.\");\r\n\r\n        vista.mostrar(coordinador.procesar(solicitud1));\r\n        vista.mostrar(coordinador.procesar(solicitud2));\r\n        vista.mostrar(coordinador.procesar(solicitud3));\r\n        vista.mostrar(coordinador.procesar(solicitud4));\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "SoporteTécnicoAutomatizado",
        "archivos": {
          "model": {
            "BotGeneral.java": "package co.edu.udistrital.model;\r\n\r\npublic class BotGeneral implements ManejadorSoporte {\r\n    private ManejadorSoporte siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(ManejadorSoporte m) {\r\n        this.siguiente = m;\r\n    }\r\n\r\n    @Override\r\n    public String responder(Pregunta p) {\r\n        if (p.getContenido().toLowerCase().contains(\"horario\") ||\r\n            p.getContenido().toLowerCase().contains(\"precio\")) {\r\n            return \"🤖 Bot General: Puede consultar los horarios y precios en la sección 'Información'.\";\r\n        } else if (siguiente != null) {\r\n            return \"Bot General no puede responder. Pasando...\\n\" + siguiente.responder(p);\r\n        } else {\r\n            return \"❌ Nadie pudo responder a su pregunta.\";\r\n        }\r\n    }\r\n}\r\n",
            "BotHumano.java": "package co.edu.udistrital.model;\r\n\r\npublic class BotHumano implements ManejadorSoporte {\r\n    private ManejadorSoporte siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(ManejadorSoporte m) {\r\n        this.siguiente = m;\r\n    }\r\n\r\n    @Override\r\n    public String responder(Pregunta p) {\r\n        if (p.getContenido().toLowerCase().contains(\"devolución\") ||\r\n            p.getContenido().toLowerCase().contains(\"reclamo\")) {\r\n            return \"👤 Agente Humano: Su solicitud será revisada por un representante.\";\r\n        } else {\r\n            return \"❌ Su pregunta no puede ser respondida automáticamente. Contacte soporte.\";\r\n        }\r\n    }\r\n}\r\n",
            "BotTecnico.java": "package co.edu.udistrital.model;\r\n\r\npublic class BotTecnico implements ManejadorSoporte {\r\n    private ManejadorSoporte siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(ManejadorSoporte m) {\r\n        this.siguiente = m;\r\n    }\r\n\r\n    @Override\r\n    public String responder(Pregunta p) {\r\n        if (p.getContenido().toLowerCase().contains(\"error\") ||\r\n            p.getContenido().toLowerCase().contains(\"no funciona\")) {\r\n            return \"🛠️ Bot Técnico: Reinicie la aplicación y asegúrese de tener conexión.\";\r\n        } else if (siguiente != null) {\r\n            return \"Bot Técnico no puede responder. Pasando...\\n\" + siguiente.responder(p);\r\n        } else {\r\n            return \"❌ Nadie pudo responder a su pregunta.\";\r\n        }\r\n    }\r\n}\r\n\r\n",
            "ManejadorSoporte.java": "package co.edu.udistrital.model;\r\n\r\npublic interface ManejadorSoporte {\r\n\tvoid setSiguiente(ManejadorSoporte m);\r\n    String responder(Pregunta p);\r\n}\r\n",
            "Pregunta.java": "package co.edu.udistrital.model;\r\n\r\npublic class Pregunta {\r\n    private String contenido;\r\n\r\n    public Pregunta(String contenido) {\r\n        this.contenido = contenido;\r\n    }\r\n\r\n    public String getContenido() {\r\n        return contenido;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"----Chat Soporte-----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        ManejadorSoporte botGeneral = new BotGeneral();\r\n        ManejadorSoporte botTecnico = new BotTecnico();\r\n        ManejadorSoporte botHumano = new BotHumano();\r\n\r\n        // Configurar la cadena\r\n        botGeneral.setSiguiente(botTecnico);\r\n        botTecnico.setSiguiente(botHumano);\r\n\r\n        Pregunta p1 = new Pregunta(\"¿Cuál es el horario de atención?\");\r\n        Pregunta p2 = new Pregunta(\"Mi app no funciona\");\r\n        Pregunta p3 = new Pregunta(\"Quiero hacer una devolución\");\r\n        Pregunta p4 = new Pregunta(\"¿Qué opinan de la vida extraterrestre?\");\r\n\r\n        vista.mostrar(\"Consulta 1:\");\r\n        vista.mostrar(botGeneral.responder(p1));\r\n\r\n        vista.mostrar(\"Consulta 2:\");\r\n        vista.mostrar(botGeneral.responder(p2));\r\n\r\n        vista.mostrar(\"Consulta 3:\");\r\n        vista.mostrar(botGeneral.responder(p3));\r\n\r\n        vista.mostrar(\"Consulta 4:\");\r\n        vista.mostrar(botGeneral.responder(p4));\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ValidaciónFormulariosEnLínea",
        "archivos": {
          "model": {
            "Formulario.java": "package co.edu.udistrital.model;\r\n\r\npublic class Formulario {\r\n    private String nombre;\r\n    private String correo;\r\n    private String contrasena;\r\n\r\n    public Formulario(String nombre, String correo, String contrasena) {\r\n        this.nombre = nombre;\r\n        this.correo = correo;\r\n        this.contrasena = contrasena;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    public String getCorreo() {\r\n        return correo;\r\n    }\r\n\r\n    public String getContrasena() {\r\n        return contrasena;\r\n    }\r\n}\r\n",
            "Validador.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Validador {\r\n    void setSiguiente(Validador v);\r\n    String validar(Formulario f);\r\n}\r\n",
            "ValidadorContrasena.java": "package co.edu.udistrital.model;\r\n\r\npublic class ValidadorContrasena implements Validador {\r\n    private Validador siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(Validador v) {\r\n        this.siguiente = v;\r\n    }\r\n\r\n    @Override\r\n    public String validar(Formulario f) {\r\n        if (f.getContrasena() == null || f.getContrasena().length() < 6) {\r\n            return \"❌ Contraseña demasiado corta.\";\r\n        } else if (siguiente != null) {\r\n            return siguiente.validar(f);\r\n        } else {\r\n            return \"✅ Validación completada.\";\r\n        }\r\n    }\r\n}\r\n\r\n",
            "ValidadorCorreo.java": "package co.edu.udistrital.model;\r\n\r\npublic class ValidadorCorreo implements Validador {\r\n    private Validador siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(Validador v) {\r\n        this.siguiente = v;\r\n    }\r\n\r\n    @Override\r\n    public String validar(Formulario f) {\r\n        if (f.getCorreo() == null || !f.getCorreo().contains(\"@\")) {\r\n            return \"❌ Correo inválido.\";\r\n        } else if (siguiente != null) {\r\n            return siguiente.validar(f);\r\n        } else {\r\n            return \"✅ Validación completada.\";\r\n        }\r\n    }\r\n}\r\n\r\n",
            "ValidadorNombre.java": "package co.edu.udistrital.model;\r\n\r\npublic class ValidadorNombre implements Validador {\r\n    private Validador siguiente;\r\n\r\n    @Override\r\n    public void setSiguiente(Validador v) {\r\n        this.siguiente = v;\r\n    }\r\n\r\n    @Override\r\n    public String validar(Formulario f) {\r\n        if (f.getNombre() == null || f.getNombre().length() < 3) {\r\n            return \"❌ Nombre inválido (mínimo 3 caracteres).\";\r\n        } else if (siguiente != null) {\r\n            return siguiente.validar(f);\r\n        } else {\r\n            return \"✅ Validación completada.\";\r\n        }\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"-----Validación de Formulario----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        // Crear validadores\r\n        Validador vNombre = new ValidadorNombre();\r\n        Validador vCorreo = new ValidadorCorreo();\r\n        Validador vContrasena = new ValidadorContrasena();\r\n\r\n        // Establecer cadena\r\n        vNombre.setSiguiente(vCorreo);\r\n        vCorreo.setSiguiente(vContrasena);\r\n\r\n        // Formularios de prueba\r\n        Formulario f1 = new Formulario(\"Ana\", \"ana@email.com\", \"123456\");\r\n        Formulario f2 = new Formulario(\"Jo\", \"joemail.com\", \"123\");\r\n        Formulario f3 = new Formulario(\"Pedro\", \"pedro@\", \"abc\");\r\n\r\n        vista.mostrar(\"📝 Validando Formulario 1:\");\r\n        vista.mostrar(vNombre.validar(f1));\r\n\r\n        vista.mostrar(\"📝 Validando Formulario 2:\");\r\n        vista.mostrar(vNombre.validar(f2));\r\n\r\n        vista.mostrar(\"📝 Validando Formulario 3:\");\r\n        vista.mostrar(vNombre.validar(f3));\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Command": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "GestiónDePedidos",
        "archivos": {
          "model": {
            "Barista.java": "package co.edu.udistrital.model;\r\n\r\npublic class Barista {\r\n    public String prepararCafe() {\r\n        return \"☕ Se preparó un café.\";\r\n    }\r\n\r\n    public String prepararTe() {\r\n        return \"🍵 Se preparó un té.\";\r\n    }\r\n\r\n    public String entregarCuenta() {\r\n        return \"🧾 Se entregó la cuenta.\";\r\n    }\r\n}\r\n\r\n",
            "Comando.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Comando {\r\n\tString ejecutar();\r\n}\r\n",
            "EntregarCuentaCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class EntregarCuentaCommand implements Comando {\r\n    private Barista barista;\r\n\r\n    public EntregarCuentaCommand(Barista barista) {\r\n        this.barista = barista;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return barista.entregarCuenta();\r\n    }\r\n}\r\n",
            "PrepararCafeCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class PrepararCafeCommand implements Comando {\r\n    private Barista barista;\r\n\r\n    public PrepararCafeCommand(Barista barista) {\r\n        this.barista = barista;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return barista.prepararCafe();\r\n    }\r\n}\r\n\r\n",
            "PrepararTeCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class PrepararTeCommand implements Comando {\r\n    private Barista barista;\r\n\r\n    public PrepararTeCommand(Barista barista) {\r\n        this.barista = barista;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return barista.prepararTe();\r\n    }\r\n}\r\n\r\n",
            "TerminalPedido.java": "package co.edu.udistrital.model;\r\n\r\npublic class TerminalPedido {\r\n    private Comando comando;\r\n\r\n    public void setComando(Comando comando) {\r\n        this.comando = comando;\r\n    }\r\n\r\n    public String ejecutarComando() {\r\n        if (comando != null) {\r\n            return comando.ejecutar();\r\n        }\r\n        return \"No hay comando asignado.\";\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"[Cafetería]\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Barista barista = new Barista();\r\n\r\n        Comando cafe = new PrepararCafeCommand(barista);\r\n        Comando te = new PrepararTeCommand(barista);\r\n        Comando cuenta = new EntregarCuentaCommand(barista);\r\n\r\n        TerminalPedido terminal = new TerminalPedido();\r\n\r\n        terminal.setComando(cafe);\r\n        vista.mostrar(terminal.ejecutarComando());\r\n\r\n        terminal.setComando(te);\r\n        vista.mostrar(terminal.ejecutarComando());\r\n\r\n        terminal.setComando(cuenta);\r\n        vista.mostrar(terminal.ejecutarComando());\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "MenúAplicaciónDeDibujo",
        "archivos": {
          "model": {
            "BorrarLienzoCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class BorrarLienzoCommand implements Comando {\r\n    private Lienzo lienzo;\r\n\r\n    public BorrarLienzoCommand(Lienzo lienzo) {\r\n        this.lienzo = lienzo;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return lienzo.borrar();\r\n    }\r\n}\r\n",
            "BotonAccion.java": "package co.edu.udistrital.model;\r\n\r\npublic class BotonAccion {\r\n    private Comando comando;\r\n\r\n    public void setComando(Comando comando) {\r\n        this.comando = comando;\r\n    }\r\n\r\n    public String presionar() {\r\n        if (comando != null) {\r\n            return comando.ejecutar();\r\n        }\r\n        return \"No hay comando asignado.\";\r\n    }\r\n}\r\n",
            "Comando.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Comando {\r\n\tString ejecutar();\r\n}\r\n",
            "DibujarCirculoCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class DibujarCirculoCommand implements Comando {\r\n    private Lienzo lienzo;\r\n\r\n    public DibujarCirculoCommand(Lienzo lienzo) {\r\n        this.lienzo = lienzo;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return lienzo.dibujar(\"Círculo\");\r\n    }\r\n}\r\n",
            "DibujarCuadradoCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class DibujarCuadradoCommand implements Comando {\r\n    private Lienzo lienzo;\r\n\r\n    public DibujarCuadradoCommand(Lienzo lienzo) {\r\n        this.lienzo = lienzo;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return lienzo.dibujar(\"Cuadrado\");\r\n    }\r\n}\r\n",
            "Lienzo.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Lienzo {\r\n    private List<String> contenido = new ArrayList<>();\r\n\r\n    public String dibujar(String figura) {\r\n        contenido.add(figura);\r\n        return \"Se dibujó un \" + figura + \" en el lienzo.\";\r\n    }\r\n\r\n    public String borrar() {\r\n        contenido.clear();\r\n        return \"Lienzo borrado.\";\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"[Aplicación de dibujo]\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Lienzo lienzo = new Lienzo();\r\n\r\n        Comando dibujarCirculo = new DibujarCirculoCommand(lienzo);\r\n        Comando dibujarCuadrado = new DibujarCuadradoCommand(lienzo);\r\n        Comando borrar = new BorrarLienzoCommand(lienzo);\r\n\r\n        BotonAccion boton = new BotonAccion();\r\n\r\n        boton.setComando(dibujarCirculo);\r\n        vista.mostrar(boton.presionar());\r\n\r\n        boton.setComando(dibujarCuadrado);\r\n        vista.mostrar(boton.presionar());\r\n\r\n        boton.setComando(borrar);\r\n        vista.mostrar(boton.presionar());\r\n\r\n        boton.setComando(dibujarCuadrado);\r\n        vista.mostrar(boton.presionar());\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "SistemaControlDeLuces",
        "archivos": {
          "model": {
            "ApagarLuzCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class ApagarLuzCommand implements Comando {\r\n    private Luz luz;\r\n\r\n    public ApagarLuzCommand(Luz luz) {\r\n        this.luz = luz;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return luz.apagar();\r\n    }\r\n}\r\n",
            "Comando.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Comando {\r\n\tString ejecutar();\r\n}\r\n",
            "ControlRemoto.java": "package co.edu.udistrital.model;\r\n\r\npublic class ControlRemoto {\r\n    private Comando comando;\r\n\r\n    public void setComando(Comando comando) {\r\n        this.comando = comando;\r\n    }\r\n\r\n    public String presionarBoton() {\r\n        if (comando != null) {\r\n            return comando.ejecutar();\r\n        }\r\n        return \"No se ha asignado un comando.\";\r\n    }\r\n}\r\n\r\n",
            "EncenderLuzCommand.java": "package co.edu.udistrital.model;\r\n\r\npublic class EncenderLuzCommand implements Comando {\r\n    private Luz luz;\r\n\r\n    public EncenderLuzCommand(Luz luz) {\r\n        this.luz = luz;\r\n    }\r\n\r\n    @Override\r\n    public String ejecutar() {\r\n        return luz.encender();\r\n    }\r\n}\r\n",
            "Luz.java": "package co.edu.udistrital.model;\r\n\r\npublic class Luz {\r\n    private String ubicacion;\r\n    private boolean estado; // false = apagada, true = encendida\r\n\r\n    public Luz(String ubicacion) {\r\n        this.ubicacion = ubicacion;\r\n        this.estado = false;\r\n    }\r\n\r\n    public String encender() {\r\n        if (!estado) {\r\n            estado = true;\r\n            return \"Luz de \" + ubicacion + \" encendida.\";\r\n        }\r\n        return \"La luz de \" + ubicacion + \" ya estaba encendida.\";\r\n    }\r\n\r\n    public String apagar() {\r\n        if (estado) {\r\n            estado = false;\r\n            return \"Luz de \" + ubicacion + \" apagada.\";\r\n        }\r\n        return \"La luz de \" + ubicacion + \" ya estaba apagada.\";\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String texto) {\r\n        System.out.println(\"[Sistema Domótico]\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Luz luzSala = new Luz(\"sala\");\r\n        Luz luzCocina = new Luz(\"cocina\");\r\n\r\n        Comando encenderSala = new EncenderLuzCommand(luzSala);\r\n        Comando apagarSala = new ApagarLuzCommand(luzSala);\r\n        Comando encenderCocina = new EncenderLuzCommand(luzCocina);\r\n\r\n        ControlRemoto control = new ControlRemoto();\r\n\r\n        control.setComando(encenderSala);\r\n        vista.mostrar(control.presionarBoton());\r\n\r\n        control.setComando(encenderCocina);\r\n        vista.mostrar(control.presionarBoton());\r\n\r\n        control.setComando(apagarSala);\r\n        vista.mostrar(control.presionarBoton());\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Composite": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "AdministraciónRecetas",
        "archivos": {
          "model": {
            "ComponenteReceta.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class ComponenteReceta {\r\n    public abstract String getNombre();\r\n    public abstract int getCalorias();\r\n    public abstract String mostrar(String prefijo);\r\n}\r\n",
            "Ingrediente.java": "package co.edu.udistrital.model;\r\n\r\npublic class Ingrediente extends ComponenteReceta {\r\n    private String nombre;\r\n    private int calorias;\r\n\r\n    public Ingrediente(String nombre, int calorias) {\r\n        this.nombre = nombre;\r\n        this.calorias = calorias;\r\n    }\r\n\r\n    @Override\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public int getCalorias() {\r\n        return calorias;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(String prefijo) {\r\n        return prefijo + \"- \" + nombre + \" (\" + calorias + \" kcal)\";\r\n    }\r\n}\r\n",
            "PlatoCompuesto.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class PlatoCompuesto extends ComponenteReceta {\r\n    private String nombre;\r\n    private List<ComponenteReceta> componentes;\r\n\r\n    public PlatoCompuesto(String nombre) {\r\n        this.nombre = nombre;\r\n        this.componentes = new ArrayList<>();\r\n    }\r\n\r\n    public void agregar(ComponenteReceta componente) {\r\n        componentes.add(componente);\r\n    }\r\n\r\n    @Override\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public int getCalorias() {\r\n        int total = 0;\r\n        for (ComponenteReceta c : componentes) {\r\n            total += c.getCalorias();\r\n        }\r\n        return total;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(String prefijo) {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(prefijo).append(\"+ \").append(nombre)\r\n          .append(\" (\").append(getCalorias()).append(\" kcal)\\n\");\r\n        for (ComponenteReceta c : componentes) {\r\n            sb.append(c.mostrar(prefijo + \"   \")).append(\"\\n\");\r\n        }\r\n        return sb.toString().trim();\r\n    }\r\n}"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarReceta(String resultado) {\r\n        System.out.println(\"Receta generada:\");\r\n        System.out.println(resultado);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        ComponenteReceta tomate = new Ingrediente(\"Tomate\", 20);\r\n        ComponenteReceta cebolla = new Ingrediente(\"Cebolla\", 15);\r\n        ComponenteReceta ajo = new Ingrediente(\"Ajo\", 5);\r\n        ComponenteReceta carne = new Ingrediente(\"Carne molida\", 200);\r\n        ComponenteReceta pasta = new Ingrediente(\"Pasta\", 300);\r\n        ComponenteReceta queso = new Ingrediente(\"Queso mozzarella\", 250);\r\n\r\n        PlatoCompuesto salsa = new PlatoCompuesto(\"Salsa napolitana\");\r\n        salsa.agregar(tomate);\r\n        salsa.agregar(cebolla);\r\n        salsa.agregar(ajo);\r\n\r\n        PlatoCompuesto lasagna = new PlatoCompuesto(\"Lasaña\");\r\n        lasagna.agregar(pasta);\r\n        lasagna.agregar(carne);\r\n        lasagna.agregar(salsa);\r\n        lasagna.agregar(queso);\r\n\r\n        String resultado = lasagna.mostrar(\"\");\r\n        vista.mostrarReceta(resultado);\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "OrganizaciónDeTareas",
        "archivos": {
          "model": {
            "Tarea.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class Tarea {\r\n    public abstract String getNombre();\r\n    public abstract int getDuracion();\r\n    public abstract String mostrar(String prefijo);\r\n}\r\n",
            "TareaCompuesta.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class TareaCompuesta extends Tarea {\r\n    private String nombre;\r\n    private List<Tarea> subtareas;\r\n\r\n    public TareaCompuesta(String nombre) {\r\n        this.nombre = nombre;\r\n        this.subtareas = new ArrayList<>();\r\n    }\r\n\r\n    public void agregar(Tarea tarea) {\r\n        subtareas.add(tarea);\r\n    }\r\n\r\n    @Override\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public int getDuracion() {\r\n        int total = 0;\r\n        for (Tarea t : subtareas) {\r\n            total += t.getDuracion();\r\n        }\r\n        return total;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(String prefijo) {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(prefijo).append(\"+ \").append(nombre)\r\n          .append(\" (\").append(getDuracion()).append(\" h)\\n\");\r\n        for (Tarea t : subtareas) {\r\n            sb.append(t.mostrar(prefijo + \"   \")).append(\"\\n\");\r\n        }\r\n        return sb.toString().trim();\r\n    }\r\n}",
            "TareaSimple.java": "package co.edu.udistrital.model;\r\n\r\npublic class TareaSimple extends Tarea {\r\n    private String nombre;\r\n    private int duracionHoras;\r\n\r\n    public TareaSimple(String nombre, int duracionHoras) {\r\n        this.nombre = nombre;\r\n        this.duracionHoras = duracionHoras;\r\n    }\r\n\r\n    @Override\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public int getDuracion() {\r\n        return duracionHoras;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(String prefijo) {\r\n        return prefijo + \"- \" + nombre + \" (\" + duracionHoras + \" h)\";\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarPlan(String resultado) {\r\n        System.out.println(\"----Plan de trabajo: ----\");\r\n        System.out.println(resultado);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.generarPlan();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void generarPlan() {\r\n        Tarea cortar = new TareaSimple(\"Cortar materiales\", 2);\r\n        Tarea soldar = new TareaSimple(\"Soldar componentes\", 3);\r\n        Tarea probar = new TareaSimple(\"Prueba eléctrica\", 1);\r\n        Tarea pintar = new TareaSimple(\"Pintar estructura\", 2);\r\n\r\n        TareaCompuesta ensamblar = new TareaCompuesta(\"Ensamblaje mecánico\");\r\n        ensamblar.agregar(cortar);\r\n        ensamblar.agregar(soldar);\r\n\r\n        TareaCompuesta verificacion = new TareaCompuesta(\"Verificación general\");\r\n        verificacion.agregar(probar);\r\n        verificacion.agregar(pintar);\r\n\r\n        TareaCompuesta proyecto = new TareaCompuesta(\"Proyecto de estructura\");\r\n        proyecto.agregar(ensamblar);\r\n        proyecto.agregar(verificacion);\r\n\r\n        String resultado = proyecto.mostrar(\"\");\r\n        vista.mostrarPlan(resultado);\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "SistemaDeNavegación",
        "archivos": {
          "model": {
            "ElementoNavegacion.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class ElementoNavegacion {\r\n    public abstract String getNombre();\r\n    public abstract String mostrar(String prefijo);\r\n}",
            "Enlace.java": "package co.edu.udistrital.model;\r\n\r\npublic class Enlace extends ElementoNavegacion {\r\n    private String nombre;\r\n    private String url;\r\n\r\n    public Enlace(String nombre, String url) {\r\n        this.nombre = nombre;\r\n        this.url = url;\r\n    }\r\n\r\n    @Override\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(String prefijo) {\r\n        return prefijo + \"- \" + nombre + \" [\" + url + \"]\";\r\n    }\r\n}\r\n\r\n",
            "Submenu.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Submenu extends ElementoNavegacion {\r\n    private String nombre;\r\n    private List<ElementoNavegacion> elementos;\r\n\r\n    public Submenu(String nombre) {\r\n        this.nombre = nombre;\r\n        this.elementos = new ArrayList<>();\r\n    }\r\n\r\n    public void agregar(ElementoNavegacion elemento) {\r\n        elementos.add(elemento);\r\n    }\r\n\r\n    @Override\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(String prefijo) {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(prefijo).append(\"+ \").append(nombre).append(\"\\n\");\r\n        for (ElementoNavegacion e : elementos) {\r\n            sb.append(e.mostrar(prefijo + \"   \")).append(\"\\n\");\r\n        }\r\n        return sb.toString().trim();\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarMenu(String menu) {\r\n        System.out.println(\"-----Menú del sitio web: -----\");\r\n        System.out.println(menu);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.construirMenu();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void construirMenu() {\r\n        ElementoNavegacion inicio = new Enlace(\"Inicio\", \"/inicio\");\r\n        ElementoNavegacion contacto = new Enlace(\"Contacto\", \"/contacto\");\r\n\r\n        Submenu productos = new Submenu(\"Productos\");\r\n        productos.agregar(new Enlace(\"Electrónica\", \"/productos/electronica\"));\r\n        productos.agregar(new Enlace(\"Ropa\", \"/productos/ropa\"));\r\n        productos.agregar(new Enlace(\"Hogar\", \"/productos/hogar\"));\r\n\r\n        Submenu usuario = new Submenu(\"Mi cuenta\");\r\n        usuario.agregar(new Enlace(\"Perfil\", \"/usuario/perfil\"));\r\n        usuario.agregar(new Enlace(\"Historial\", \"/usuario/historial\"));\r\n\r\n        Submenu menuPrincipal = new Submenu(\"Menú Principal\");\r\n        menuPrincipal.agregar(inicio);\r\n        menuPrincipal.agregar(productos);\r\n        menuPrincipal.agregar(usuario);\r\n        menuPrincipal.agregar(contacto);\r\n\r\n        String menuTexto = menuPrincipal.mostrar(\"\");\r\n        vista.mostrarMenu(menuTexto);\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Decorator": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "MejorasVehículos",
        "archivos": {
          "model": {
            "Auto.java": "package co.edu.udistrital.model;\r\n\r\npublic class Auto implements Vehiculo {\r\n    @Override\r\n    public String getDescripcion() {\r\n        return \"Auto estándar\";\r\n    }\r\n\r\n    @Override\r\n    public int getVelocidadMax() {\r\n        return 180;\r\n    }\r\n}\r\n\r\n",
            "Blindaje.java": "package co.edu.udistrital.model;\r\n\r\npublic class Blindaje extends DecoradorVehiculo {\r\n    public Blindaje(Vehiculo base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String getDescripcion() {\r\n        return base.getDescripcion() + \" + Blindaje\";\r\n    }\r\n\r\n    @Override\r\n    public int getVelocidadMax() {\r\n        return base.getVelocidadMax() - 20; // por peso extra\r\n    }\r\n}\r\n",
            "DecoradorVehiculo.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class DecoradorVehiculo implements Vehiculo {\r\n    protected Vehiculo base;\r\n\r\n    public DecoradorVehiculo(Vehiculo base) {\r\n        this.base = base;\r\n    }\r\n\r\n    @Override\r\n    public String getDescripcion() {\r\n        return base.getDescripcion();\r\n    }\r\n\r\n    @Override\r\n    public int getVelocidadMax() {\r\n        return base.getVelocidadMax();\r\n    }\r\n}\r\n",
            "Moto.java": "package co.edu.udistrital.model;\r\n\r\npublic class Moto implements Vehiculo {\r\n    @Override\r\n    public String getDescripcion() {\r\n        return \"Moto deportiva\";\r\n    }\r\n\r\n    @Override\r\n    public int getVelocidadMax() {\r\n        return 200;\r\n    }\r\n}\r\n",
            "Navegacion.java": "package co.edu.udistrital.model;\r\n\r\npublic class Navegacion extends DecoradorVehiculo {\r\n    public Navegacion(Vehiculo base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String getDescripcion() {\r\n        return base.getDescripcion() + \" + Sistema de Navegación\";\r\n    }\r\n}\r\n",
            "Turbo.java": "package co.edu.udistrital.model;\r\n\r\npublic class Turbo extends DecoradorVehiculo {\r\n    public Turbo(Vehiculo base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String getDescripcion() {\r\n        return base.getDescripcion() + \" + Turbo\";\r\n    }\r\n\r\n    @Override\r\n    public int getVelocidadMax() {\r\n        return base.getVelocidadMax() + 50;\r\n    }\r\n}\r\n",
            "Vehiculo.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Vehiculo {\r\n\tString getDescripcion();\r\n    int getVelocidadMax();\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarVehiculo(String desc, int velocidad) {\r\n        System.out.println(\"-----Simulación de Vehículo-----\");\r\n        System.out.println(\"Descripción: \" + desc);\r\n        System.out.println(\"Velocidad Máx: \" + velocidad + \" km/h\");\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Vehiculo vehiculo = new Auto();\r\n\r\n        vehiculo = new Turbo(vehiculo);\r\n        vehiculo = new Navegacion(vehiculo);\r\n        vehiculo = new Blindaje(vehiculo);\r\n\r\n        vista.mostrarVehiculo(vehiculo.getDescripcion(), vehiculo.getVelocidadMax());\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "PersonalizaciónMensajes",
        "archivos": {
          "model": {
            "ConFecha.java": "package co.edu.udistrital.model;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\n\r\npublic class ConFecha extends DecoradorMensaje {\r\n\r\n    public ConFecha(Mensaje base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String getContenido() {\r\n        String fecha = LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));\r\n        return base.getContenido() + \" [\" + fecha + \"]\";\r\n    }\r\n}\r\n",
            "ConFirma.java": "package co.edu.udistrital.model;\r\n\r\npublic class ConFirma extends DecoradorMensaje {\r\n\r\n    public ConFirma(Mensaje base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String getContenido() {\r\n        return base.getContenido() + \"\\n-- Equipo de Atención al Cliente\";\r\n    }\r\n}\r\n\r\n",
            "DecoradorMensaje.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class DecoradorMensaje implements Mensaje {\r\n    protected Mensaje base;\r\n\r\n    public DecoradorMensaje(Mensaje base) {\r\n        this.base = base;\r\n    }\r\n\r\n    @Override\r\n    public String getContenido() {\r\n        return base.getContenido(); // Por defecto no altera\r\n    }\r\n}\r\n",
            "EnMayusculas.java": "package co.edu.udistrital.model;\r\n\r\npublic class EnMayusculas extends DecoradorMensaje {\r\n\r\n    public EnMayusculas(Mensaje base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String getContenido() {\r\n        return base.getContenido().toUpperCase();\r\n    }\r\n}\r\n",
            "Mensaje.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Mensaje {\r\n\tString getContenido();\r\n}\r\n",
            "MensajeSimple.java": "package co.edu.udistrital.model;\r\n\r\npublic class MensajeSimple implements Mensaje {\r\n    private String contenido;\r\n\r\n    public MensajeSimple(String contenido) {\r\n        this.contenido = contenido;\r\n    }\r\n\r\n    @Override\r\n    public String getContenido() {\r\n        return contenido;\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tpublic void mostrarMensaje(String mensaje) {\r\n        System.out.println(\"[Notificación]\");\r\n        System.out.println(mensaje);\r\n    }\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n\r\n        Mensaje mensaje = new MensajeSimple(\"Tu pedido ha sido entregado exitosamente\");\r\n\r\n        mensaje = new ConFecha(mensaje);\r\n        mensaje = new ConFirma(mensaje);\r\n        mensaje = new EnMayusculas(mensaje);\r\n\r\n        vista.mostrarMensaje(mensaje.getContenido());\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "PersonalizaciónReportesAcademicos",
        "archivos": {
          "model": {
            "DecoradorReporte.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class DecoradorReporte implements Reporte {\r\n    protected Reporte base;\r\n\r\n    public DecoradorReporte(Reporte base) {\r\n        this.base = base;\r\n    }\r\n\r\n    @Override\r\n    public String generar() {\r\n        return base.generar();\r\n    }\r\n}\r\n",
            "EncabezadoInstitucional.java": "package co.edu.udistrital.model;\r\n\r\npublic class EncabezadoInstitucional extends DecoradorReporte {\r\n\r\n    public EncabezadoInstitucional(Reporte base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String generar() {\r\n        return \"UNIVERSIDAD DISTRITAL FRANCISCO JOSÉ DE CALDAS\\nFacultad de Ingeniería\\n\\n\" + base.generar();\r\n    }\r\n}\r\n\r\n",
            "EnHTML.java": "package co.edu.udistrital.model;\r\n\r\npublic class EnHTML extends DecoradorReporte {\r\n\r\n    public EnHTML(Reporte base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String generar() {\r\n        return \"<html><body><pre>\" + base.generar() + \"</pre></body></html>\";\r\n    }\r\n}\r\n",
            "PieLegal.java": "package co.edu.udistrital.model;\r\n\r\npublic class PieLegal extends DecoradorReporte {\r\n\r\n    public PieLegal(Reporte base) {\r\n        super(base);\r\n    }\r\n\r\n    @Override\r\n    public String generar() {\r\n        return base.generar() + \"\\n\\nEste reporte es confidencial. No divulgar sin autorización.\";\r\n    }\r\n}\r\n",
            "Reporte.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Reporte {\r\n\tString generar();\r\n}\r\n",
            "ReporteBasico.java": "package co.edu.udistrital.model;\r\n\r\npublic class ReporteBasico implements Reporte {\r\n    private String estudiante;\r\n    private double promedio;\r\n\r\n    public ReporteBasico(String estudiante, double promedio) {\r\n        this.estudiante = estudiante;\r\n        this.promedio = promedio;\r\n    }\r\n\r\n    @Override\r\n    public String generar() {\r\n        return \"Estudiante: \" + estudiante + \"\\nPromedio: \" + promedio;\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarReporte(String texto) {\r\n        System.out.println(\"-----Reporte Académico-----\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Reporte reporte = new ReporteBasico(\"Geraldine Vargas\", 4.5);\r\n\r\n        reporte = new EncabezadoInstitucional(reporte);\r\n        reporte = new PieLegal(reporte);\r\n        reporte = new EnHTML(reporte);\r\n\r\n        vista.mostrarReporte(reporte.generar());\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Facade": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "SistemaDeControlClima",
        "archivos": {
          "model": {
            "AireAcondicionado.java": "package co.edu.udistrital.model;\r\n\r\npublic class AireAcondicionado {\r\n    public String encender() {\r\n        return \"Aire acondicionado encendido\";\r\n    }\r\n\r\n    public String apagar() {\r\n        return \"Aire acondicionado apagado\";\r\n    }\r\n}\r\n",
            "ControlClima.java": "package co.edu.udistrital.model;\r\n\r\npublic class ControlClima {\r\n    private SensorTemperatura sensor;\r\n    private AireAcondicionado aire;\r\n    private Ventilacion ventilacion;\r\n    private Humidificador humidificador;\r\n\r\n    public ControlClima() {\r\n        sensor = new SensorTemperatura();\r\n        aire = new AireAcondicionado();\r\n        ventilacion = new Ventilacion();\r\n        humidificador = new Humidificador();\r\n    }\r\n\r\n    public String regularClima() {\r\n        double temp = sensor.obtenerTemperatura();\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(\"Temperatura actual: \").append(String.format(\"%.2f\", temp)).append(\"°C\\n\");\r\n\r\n        if (temp > 35) {\r\n            sb.append(aire.encender()).append(\"\\n\");\r\n            sb.append(ventilacion.activar()).append(\"\\n\");\r\n            sb.append(humidificador.iniciar());\r\n        } else {\r\n            sb.append(aire.apagar()).append(\"\\n\");\r\n            sb.append(ventilacion.desactivar()).append(\"\\n\");\r\n            sb.append(humidificador.detener());\r\n        }\r\n\r\n        return sb.toString();\r\n    }\r\n}\r\n",
            "Humidificador.java": "package co.edu.udistrital.model;\r\n\r\npublic class Humidificador {\r\n    public String iniciar() {\r\n        return \"Humidificador iniciado\";\r\n    }\r\n\r\n    public String detener() {\r\n        return \"Humidificador detenido\";\r\n    }\r\n}\r\n",
            "SensorTemperatura.java": "package co.edu.udistrital.model;\r\n\r\npublic class SensorTemperatura {\r\n\tpublic double obtenerTemperatura() {\r\n        return 30 + Math.random() * 10;\r\n    }\r\n}\r\n",
            "Ventilacion.java": "package co.edu.udistrital.model;\r\n\r\npublic class Ventilacion {\r\n    public String activar() {\r\n        return \"Ventilación activada\";\r\n    }\r\n\r\n    public String desactivar() {\r\n        return \"Ventilación desactivada\";\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarEstado(String estado) {\r\n        System.out.println(\"-----Sistema de Clima Inteligente-----\");\r\n        System.out.println(estado);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        ControlClima clima = new ControlClima();\r\n        String estado = clima.regularClima();\r\n        vista.mostrarEstado(estado);\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "SistemaInicializaciónComputadora",
        "archivos": {
          "model": {
            "EstudioFacade.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstudioFacade {\r\n    private ProcesadorTexto word;\r\n    private NavegadorWeb chrome;\r\n    private MusicaEstudio musica;\r\n    private Mensajeria chat;\r\n\r\n    public EstudioFacade() {\r\n        word = new ProcesadorTexto();\r\n        chrome = new NavegadorWeb();\r\n        musica = new MusicaEstudio();\r\n        chat = new Mensajeria();\r\n    }\r\n\r\n    public String iniciarSesionEstudio() {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(word.abrir()).append(\"\\n\");\r\n        sb.append(chrome.abrirPaginas()).append(\"\\n\");\r\n        sb.append(musica.reproducirPlaylist()).append(\"\\n\");\r\n        sb.append(chat.iniciarSesion());\r\n        return sb.toString();\r\n    }\r\n}\r\n",
            "Mensajeria.java": "package co.edu.udistrital.model;\r\n\r\npublic class Mensajeria {\r\n\tpublic String iniciarSesion() {\r\n        return \"Mensajería académica iniciada (Teams)\";\r\n    }\r\n}\r\n",
            "MusicaEstudio.java": "package co.edu.udistrital.model;\r\n\r\npublic class MusicaEstudio {\r\n\tpublic String reproducirPlaylist() {\r\n        return \"Playlist de concentración reproducida en Spotify\";\r\n    }\r\n}\r\n",
            "NavegadorWeb.java": "package co.edu.udistrital.model;\r\n\r\npublic class NavegadorWeb {\r\n\tpublic String abrirPaginas() {\r\n        return \"Páginas académicas abiertas: Moodle, Google Scholar, ChatGPT\";\r\n    }\r\n}\r\n",
            "ProcesadorTexto.java": "package co.edu.udistrital.model;\r\n\r\npublic class ProcesadorTexto {\r\n\tpublic String abrir() {\r\n        return \"Procesador de texto abierto (Word)\";\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarEstado(String estado) {\r\n        System.out.println(\"[Sesión de Estudio Iniciada]\");\r\n        System.out.println(estado);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        EstudioFacade estudio = new EstudioFacade();\r\n        String estado = estudio.iniciarSesionEstudio();\r\n        vista.mostrarEstado(estado);\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "SubsistemaGestiónDeViajes",
        "archivos": {
          "model": {
            "AlquiladorVehiculo.java": "package co.edu.udistrital.model;\r\n\r\npublic class AlquiladorVehiculo {\r\n    public String alquilarAuto(String destino) {\r\n        return \"Vehículo alquilado en \" + destino;\r\n    }\r\n}\r\n\r\n",
            "GestorViaje.java": "package co.edu.udistrital.model;\r\n\r\n\r\npublic class GestorViaje {\r\n    private ReservadorVuelos vuelos;\r\n    private ReservadorHotel hotel;\r\n    private AlquiladorVehiculo vehiculo;\r\n    private SeguroViaje seguro;\r\n\r\n    public GestorViaje() {\r\n        vuelos = new ReservadorVuelos();\r\n        hotel = new ReservadorHotel();\r\n        vehiculo = new AlquiladorVehiculo();\r\n        seguro = new SeguroViaje();\r\n    }\r\n\r\n    public String planearViaje(String destino) {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(vuelos.reservarVuelo(destino)).append(\"\\n\");\r\n        sb.append(hotel.reservarHotel(destino)).append(\"\\n\");\r\n        sb.append(vehiculo.alquilarAuto(destino)).append(\"\\n\");\r\n        sb.append(seguro.contratarSeguro());\r\n        return sb.toString();\r\n    }\r\n}\r\n",
            "ReservadorHotel.java": "package co.edu.udistrital.model;\r\n\r\npublic class ReservadorHotel {\r\n    public String reservarHotel(String destino) {\r\n        return \"Hotel reservado en \" + destino;\r\n    }\r\n}\r\n\r\n",
            "ReservadorVuelos.java": "package co.edu.udistrital.model;\r\n\r\npublic class ReservadorVuelos {\r\n\tpublic String reservarVuelo(String destino) {\r\n        return \"Vuelo reservado a \" + destino;\r\n    }\r\n}\r\n",
            "SeguroViaje.java": "package co.edu.udistrital.model;\r\n\r\npublic class SeguroViaje {\r\n\tpublic String contratarSeguro() {\r\n        return \"Seguro de viaje contratado\";\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarViaje(String datos) {\r\n        System.out.println(\"[Agencia de Viajes]\");\r\n        System.out.println(datos);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        GestorViaje gestor = new GestorViaje();\r\n        String datosViaje = gestor.planearViaje(\"San Andrés\");\r\n        vista.mostrarViaje(datosViaje);\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Factorymethod": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "CalculadoraDeImpuestos",
        "archivos": {
          "model": {
            "Camion.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.abstracto.Vehiculo;\r\n\r\npublic class Camion extends Vehiculo {\r\n\t\r\n\tpublic Camion (String ti, double p) {\r\n\t\tsuper(ti, p);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularImpuesto() {\r\n\t\tdouble x;\r\n\t\tString total;\r\n\t\tx= Precio * 0.25;\r\n\t\ttotal = Double.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularPrecioFinal() {\r\n\t\tdouble x;\r\n\t\tdouble impuesto = Double.parseDouble(calcularImpuesto());\r\n\t\tString total;\r\n\t\tx= Precio + impuesto;\r\n\t\ttotal = Double.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n}\r\n",
            "Carro.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.abstracto.Vehiculo;\r\n\r\npublic class Carro extends Vehiculo {\r\n\t\r\n\tpublic Carro (String ti, double p) {\r\n\t\tsuper(ti, p);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularImpuesto() {\r\n\t\tdouble x;\r\n\t\tString total;\r\n\t\tx= Precio * 0.15;\r\n\t\ttotal = Double.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularPrecioFinal() {\r\n\t\tdouble x;\r\n\t\tdouble impuesto = Double.parseDouble(calcularImpuesto());\r\n\t\tString total;\r\n\t\tx= Precio + impuesto;\r\n\t\ttotal = Double.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n}\r\n",
            "Moto.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.abstracto.Vehiculo;\r\n\r\npublic class Moto extends Vehiculo {\r\n\t\r\n\tpublic Moto (String ti, double p) {\r\n\t\tsuper(ti, p);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularImpuesto() {\r\n\t\tdouble x;\r\n\t\tString total;\r\n\t\tx= Precio * 0.10;\r\n\t\ttotal = Double.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularPrecioFinal() {\r\n\t\tdouble x;\r\n\t\tdouble impuesto = Double.parseDouble(calcularImpuesto());\r\n\t\tString total;\r\n\t\tx= Precio + impuesto;\r\n\t\ttotal = Double.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic double leerDatoDecimal(String mensaje) {\r\n\t\tdouble dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextDouble();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ClasificacionDeEstudiantes",
        "archivos": {
          "model": {
            "EstudianteAprobado.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.abstracto.Estudiante;\r\n\r\npublic class EstudianteAprobado extends Estudiante {\r\n\r\n\tpublic EstudianteAprobado(double a, double b, double c, double p) {\r\n\t\t\r\n\t\tsuper(a, b, c, p);\r\n\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String describir() {\r\n\t\treturn \"Aprobaste pero debes seguir esforzandote\" ;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularPromedio() {\r\n\t\tdouble x;\r\n\t\tString pro;\r\n\t\tx=(nota_1 + nota_2 + nota_3 )/3;\r\n\t\tpro = Double.toString(x);\r\n\t\t\r\n\t\treturn pro;\r\n\t}\r\n\t\r\n\t\r\n\r\n}\r\n",
            "EstudianteExcelente.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.abstracto.Estudiante;\r\n\r\npublic class EstudianteExcelente extends Estudiante{\r\n\t\r\n\tpublic EstudianteExcelente(double a, double b, double c, double p) {\r\n\t\t\r\n\t\tsuper(a, b, c, p);\r\n\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String describir() {\r\n\t\treturn \"!Felicitaciones¡ eres un excelente estudiante\" ;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularPromedio() {\r\n\t\tdouble x;\r\n\t\tString pro;\r\n\t\tx=(nota_1 + nota_2 + nota_3 )/3;\r\n\t\tpro = Double.toString(x);\r\n\t\t\r\n\t\treturn pro;\r\n\t}\r\n\r\n}\r\n",
            "EstudianteReprobado.java": "package co.edu.udistrital.model;\r\n\r\nimport co.edu.udistrital.model.abstracto.Estudiante;\r\n\r\npublic class EstudianteReprobado extends Estudiante{\r\n\t\r\n\t\r\n\t\r\n\tpublic EstudianteReprobado(double a, double b, double c, double p) {\r\n\t\t\r\n\t\tsuper(a, b, c, p);\r\n\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String describir() {\r\n\t\treturn \"No alcanzaste el promedio necesario, por lo tanto reprobaste, pero no te rindas\" ;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularPromedio() {\r\n\t\tdouble x;\r\n\t\tString pro;\r\n\t\tx=(nota_1 + nota_2 + nota_3 )/3;\r\n\t\tpro = Double.toString(x);\r\n\t\t\r\n\t\treturn pro;\r\n\t}\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic double leerDatoDecimal(String mensaje) {\r\n\t\tdouble dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextDouble();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n}\r\n"
          },
          "controller": {
            "AplClasificadorDeEstudiantes.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplClasificadorDeEstudiantes {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.abstracto.*;\r\nimport co.edu.udistrital.model.concretoCreador.*;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\t\r\n\tprivate VistaConsola vista;\r\n\t\r\n\tpublic Controller() {\r\n\t\tvista = new VistaConsola();\r\n\t}\r\n\t\r\n\tpublic void run() {\r\n\t\tdouble a = 0;\r\n\t\tdouble b = 0;\r\n\t\tdouble c = 0;\r\n\t\tdouble p = 0;\r\n\t\r\n\t\tvista.mostrarInformacion(\"Ingrese las notas del estudiante\");\r\n \r\n\t\ta = vista.leerDatoDecimal(\"\\t\" + \"Digite la nota 1: \");\r\n\t\tb = vista.leerDatoDecimal(\"\\t\" + \"Digite la nota 2: \");\r\n\t\tc = vista.leerDatoDecimal(\"\\t\" + \"Digite la nota 3: \");\r\n\t\t\r\n\t\tp = (a + b + c) / 3;\r\n    \r\n\t\tEstudianteFactory fabrica= new EstudianteCreador();\r\n    \r\n\t\tEstudiante estudiante = fabrica.crearEstudiante(a,b,c,p);\r\n\t\t\r\n\t\tvista.mostrarInformacion(\"Tu promedio es: \" + estudiante.calcularPromedio());\r\n\t\tvista.mostrarInformacion(estudiante.describir() );    \r\n\t}\r\n\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "TiendaDeMaquillaje",
        "archivos": {
          "model": {
            "Labial.java": "package co.edu.udistrital.model;\r\nimport co.edu.udistrital.model.abstracto.Producto;\r\n\r\npublic class Labial extends Producto{\r\n\tpublic Labial (String ti, String to, int p, int c) {\r\n\t\t\r\n\t\tsuper(ti,to,p,c);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String describir() {\r\n\t\treturn \"rojo\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularValorTotal() {\r\n\t\tint x;\r\n\t\tString total;\r\n\t\tPrecio = 9000;\r\n\t\tx= Cantidad * Precio;\r\n\t\ttotal = Integer.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\t\r\n\r\n}\r\n",
            "Pestañina.java": "package co.edu.udistrital.model;\r\nimport co.edu.udistrital.model.abstracto.Producto;\r\n\r\npublic class Pestañina extends Producto{\r\n\t\r\n\tpublic Pestañina (String ti, String to, int p, int c) {\r\n\t\tsuper(ti,to,p,c);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String describir() {\r\n\t\treturn \"negro\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularValorTotal() {\r\n\t\tint x;\r\n\t\tString total;\r\n\t\tPrecio = 18000;\r\n\t\tx= Cantidad * Precio;\r\n\t\ttotal = Integer.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n}\r\n",
            "Rubor.java": "package co.edu.udistrital.model;\r\nimport co.edu.udistrital.model.abstracto.Producto;\r\n\r\npublic class Rubor extends Producto{\r\n\t\r\n\tpublic Rubor (String ti, String to, int p, int c) {\r\n\t\tsuper(ti,to,p,c);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String describir() {\r\n\t\treturn \"rosado\";\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String calcularValorTotal() {\r\n\t\tint x;\r\n\t\tString total;\r\n\t\tPrecio = 12000;\r\n\t\tx= Cantidad * Precio;\r\n\t\ttotal = Integer.toString(x);\r\n\t\treturn total;\r\n\t}\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\r\n}"
          },
          "controller": {
            "AplTiendaDeMaquillaje.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplTiendaDeMaquillaje {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.VistaConsola;\r\nimport co.edu.udistrital.model.abstracto.*;\r\nimport co.edu.udistrital.model.concretoCreador.*;\r\n\r\npublic class Controller {\r\n\t\r\nprivate VistaConsola vista;\r\n\t\r\n    public Controller() {\r\n    \tvista = new VistaConsola();\r\n\t}\r\n    \r\n    public void run() {\r\n    \tString ti = \"\";\r\n    \tString to = \"\";\r\n    \tint p = 0;\r\n    \tint c = 0;\r\n    \t\r\n    \tvista.mostrarInformacion(\"Ingrese los datos del producto que desea comprar\");\r\n        \r\n        ti = vista.leerTexto(\"\\t\" + \"Digite el tipo de produto (labial, pestañina, rubor): \");\r\n        c = vista.leerDatoEntero(\"\\t\" + \"Digite la cantidad de productos : \");\r\n        \r\n        ProductoFactory fabrica= new ProductosCreador();\r\n        \r\n        Producto producto = fabrica.crearProducto(ti, to, p, c);\r\n\r\n        vista.mostrarInformacion(\"El tono de su producto es: \" + producto.describir() );\r\n        vista.mostrarInformacion(\"El valor total de su compra es: \" + producto.calcularValorTotal());\r\n    \t\r\n    }\r\n\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Flyweight": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "EmojisReutilizablesEnChat",
        "archivos": {
          "model": {
            "EmojiConcreto.java": "package co.edu.udistrital.model;\r\n\r\npublic class EmojiConcreto implements EmojiFlyweight {\r\n\t\r\n\tprivate String simbolo;\r\n\r\n    public EmojiConcreto(String simbolo) {\r\n        this.simbolo = simbolo;\r\n    }\r\n\r\n\t@Override\r\n\tpublic String mostrar(String usuario, String hora) {\r\n\t\treturn usuario + \" envió '\" + simbolo + \"' a las \" + hora;\r\n\t}\r\n\r\n}\r\n",
            "EmojiContexto.java": "package co.edu.udistrital.model;\r\n\r\npublic class EmojiContexto {\r\n\tprivate String usuario;\r\n    private String hora;\r\n    private EmojiFlyweight emoticon;\r\n\r\n    public EmojiContexto(String usuario, String hora, EmojiFlyweight emoticon) {\r\n        this.usuario = usuario;\r\n        this.hora = hora;\r\n        this.emoticon = emoticon;\r\n    }\r\n\r\n    public String mostrar() {\r\n        return emoticon.mostrar(usuario, hora);\r\n    }\r\n}\r\n",
            "EmojiFactory.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class EmojiFactory {\r\n\tprivate Map<String, EmojiFlyweight> mapa = new HashMap<>();\r\n\r\n    public EmojiFlyweight obtenerEmoticon(String simbolo) {\r\n        if (!mapa.containsKey(simbolo)) {\r\n            mapa.put(simbolo, new EmojiConcreto(simbolo));\r\n        }\r\n        return mapa.get(simbolo);\r\n    }\r\n}\r\n",
            "EmojiFlyweight.java": "package co.edu.udistrital.model;\r\n\r\npublic interface EmojiFlyweight {\r\n\tString mostrar(String usuario, String hora);\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarMensaje(String texto) {\r\n        System.out.println(\"[Chat]\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        EmojiFactory factory = new EmojiFactory();\r\n\r\n        EmojiFlyweight sonrisa = factory.obtenerEmoticon(\"😊\");\r\n        EmojiFlyweight corazon = factory.obtenerEmoticon(\"❤️\");\r\n        EmojiFlyweight lagrima = factory.obtenerEmoticon(\"😢\");\r\n\r\n        EmojiContexto e1 = new EmojiContexto(\"Laura\", \"10:00 AM\", sonrisa);\r\n        EmojiContexto e2 = new EmojiContexto(\"Pedro\", \"10:01 AM\", corazon);\r\n        EmojiContexto e3 = new EmojiContexto(\"Laura\", \"10:02 AM\", sonrisa);\r\n        EmojiContexto e4 = new EmojiContexto(\"María\", \"10:03 AM\", lagrima);\r\n\r\n        vista.mostrarMensaje(e1.mostrar());\r\n        vista.mostrarMensaje(e2.mostrar());\r\n        vista.mostrarMensaje(e3.mostrar());\r\n        vista.mostrarMensaje(e4.mostrar());\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "LetrasEnProcesadorDeTexto",
        "archivos": {
          "model": {
            "LetraConcreta.java": "package co.edu.udistrital.model;\r\n\r\npublic class LetraConcreta implements LetraFlyweight {\r\n    private char caracter;\r\n\r\n    public LetraConcreta(char caracter) {\r\n        this.caracter = caracter;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(int x, int y, int tamano, String color) {\r\n        return \"Letra '\" + caracter + \"' en (\" + x + \",\" + y + \") Tamaño: \" + tamano + \" Color: \" + color;\r\n    }\r\n}\r\n",
            "LetraConEstilo.java": "package co.edu.udistrital.model;\r\n\r\npublic class LetraConEstilo {\r\n    private int x, y;\r\n    private int tamano;\r\n    private String color;\r\n    private LetraFlyweight letra;\r\n\r\n    public LetraConEstilo(int x, int y, int tamano, String color, LetraFlyweight letra) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tamano = tamano;\r\n        this.color = color;\r\n        this.letra = letra;\r\n    }\r\n\r\n    public String mostrar() {\r\n        return letra.mostrar(x, y, tamano, color);\r\n    }\r\n}\r\n",
            "LetraFactory.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class LetraFactory {\r\n    private Map<Character, LetraFlyweight> letras = new HashMap<>();\r\n\r\n    public LetraFlyweight obtenerLetra(char c) {\r\n        if (!letras.containsKey(c)) {\r\n            letras.put(c, new LetraConcreta(c));\r\n        }\r\n        return letras.get(c);\r\n    }\r\n}\r\n",
            "LetraFlyweight.java": "package co.edu.udistrital.model;\r\n\r\npublic interface LetraFlyweight {\r\n\tString mostrar(int x, int y, int tamano, String color);\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarTexto(String texto) {\r\n        System.out.println(\"[Visualización del texto]\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        LetraFactory factory = new LetraFactory();\r\n\r\n        LetraFlyweight l1 = factory.obtenerLetra('H');\r\n        LetraFlyweight l2 = factory.obtenerLetra('o');\r\n        LetraFlyweight l3 = factory.obtenerLetra('l');\r\n        LetraFlyweight l4 = factory.obtenerLetra('a');\r\n\r\n        LetraConEstilo c1 = new LetraConEstilo(0, 0, 12, \"negro\", l1);\r\n        LetraConEstilo c2 = new LetraConEstilo(10, 0, 12, \"negro\", l2);\r\n        LetraConEstilo c3 = new LetraConEstilo(20, 0, 12, \"negro\", l3);\r\n        LetraConEstilo c4 = new LetraConEstilo(30, 0, 12, \"rojo\", l4); // mismo flyweight, distinto color\r\n\r\n        vista.mostrarTexto(c1.mostrar());\r\n        vista.mostrarTexto(c2.mostrar());\r\n        vista.mostrarTexto(c3.mostrar());\r\n        vista.mostrarTexto(c4.mostrar());\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "MapaDeÁrboles",
        "archivos": {
          "model": {
            "ArbolFlyweight.java": "package co.edu.udistrital.model;\r\n\r\npublic interface ArbolFlyweight {\r\n\tString mostrar(int x, int y);\r\n}\r\n",
            "ArbolIndividual.java": "package co.edu.udistrital.model;\r\n\r\npublic class ArbolIndividual {\r\n    private int x;\r\n    private int y;\r\n    private ArbolFlyweight arbol;\r\n\r\n    public ArbolIndividual(int x, int y, ArbolFlyweight arbol) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.arbol = arbol;\r\n    }\r\n\r\n    public String mostrar() {\r\n        return arbol.mostrar(x, y);\r\n    }\r\n}\r\n",
            "ArbolTipo.java": "package co.edu.udistrital.model;\r\n\r\npublic class ArbolTipo implements ArbolFlyweight {\r\n    private String tipo;\r\n    private String color;\r\n\r\n    public ArbolTipo(String tipo, String color) {\r\n        this.tipo = tipo;\r\n        this.color = color;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar(int x, int y) {\r\n        return \"Árbol de tipo '\" + tipo + \"' y color '\" + color + \"' plantado en (\" + x + \", \" + y + \")\";\r\n    }\r\n}\r\n\r\n",
            "FabricaArboles.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class FabricaArboles {\r\n    private Map<String, ArbolFlyweight> arboles = new HashMap<>();\r\n\r\n    public ArbolFlyweight obtenerArbol(String tipo, String color) {\r\n        String clave = tipo + \"-\" + color;\r\n        if (!arboles.containsKey(clave)) {\r\n            arboles.put(clave, new ArbolTipo(tipo, color));\r\n        }\r\n        return arboles.get(clave);\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarMensaje(String mensaje) {\r\n        System.out.println(\"[Mapa de Ciudad]\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        FabricaArboles fabrica = new FabricaArboles();\r\n\r\n        ArbolFlyweight robleVerde = fabrica.obtenerArbol(\"Roble\", \"Verde\");\r\n        ArbolFlyweight pinoVerde = fabrica.obtenerArbol(\"Pino\", \"Verde\");\r\n        ArbolFlyweight robleRojo = fabrica.obtenerArbol(\"Roble\", \"Rojo\");\r\n\r\n        ArbolIndividual a1 = new ArbolIndividual(10, 20, robleVerde);\r\n        ArbolIndividual a2 = new ArbolIndividual(30, 40, robleVerde);\r\n        ArbolIndividual a3 = new ArbolIndividual(50, 60, pinoVerde);\r\n        ArbolIndividual a4 = new ArbolIndividual(70, 80, robleRojo);\r\n\r\n        vista.mostrarMensaje(a1.mostrar());\r\n        vista.mostrarMensaje(a2.mostrar());\r\n        vista.mostrarMensaje(a3.mostrar());\r\n        vista.mostrarMensaje(a4.mostrar());\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Interpreter": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "InterpretaciónComandosDeDibujoACII",
        "archivos": {
          "model": {
            "Contexto.java": "package co.edu.udistrital.model;\r\n\r\npublic class Contexto {\r\n    private String comando;\r\n\r\n    public Contexto(String comando) {\r\n        this.comando = comando;\r\n    }\r\n\r\n    public String getComando() {\r\n        return comando;\r\n    }\r\n}\r\n\r\n",
            "Expresion.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Expresion {\r\n\tString interpretar(Contexto contexto);\r\n}\r\n",
            "ExpresionCirculo.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionCirculo implements Expresion {\r\n\r\n    @Override\r\n    public String interpretar(Contexto contexto) {\r\n        if (contexto.getComando().equalsIgnoreCase(\"DIBUJAR CIRCULO\")) {\r\n            return \" ⭕ \";\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n\r\n",
            "ExpresionCuadrado.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionCuadrado implements Expresion {\r\n\r\n    @Override\r\n    public String interpretar(Contexto contexto) {\r\n        if (contexto.getComando().equalsIgnoreCase(\"DIBUJAR CUADRADO\")) {\r\n            return \"⬜\\n⬜\\n⬜\";\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n",
            "ExpresionTriangulo.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionTriangulo implements Expresion {\r\n\r\n    @Override\r\n    public String interpretar(Contexto contexto) {\r\n        if (contexto.getComando().equalsIgnoreCase(\"DIBUJAR TRIANGULO\")) {\r\n            return \"🔺\\n🔺🔺\\n🔺🔺🔺\";\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n    public void mostrar(String mensaje) {\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        List<Expresion> interpretes = new ArrayList<>();\r\n        interpretes.add(new ExpresionCuadrado());\r\n        interpretes.add(new ExpresionTriangulo());\r\n        interpretes.add(new ExpresionCirculo());\r\n\r\n        String[] comandos = {\r\n            \"DIBUJAR CIRCULO\",\r\n            \"DIBUJAR CUADRADO\",\r\n            \"DIBUJAR TRIANGULO\",\r\n            \"DIBUJAR HEXAGONO\" // comando no interpretado\r\n        };\r\n\r\n        for (String comando : comandos) {\r\n            Contexto contexto = new Contexto(comando);\r\n            boolean interpretado = false;\r\n\r\n            for (Expresion expresion : interpretes) {\r\n                String resultado = expresion.interpretar(contexto);\r\n                if (!resultado.isEmpty()) {\r\n                    vista.mostrar(\"▶ \" + comando + \":\\n\" + resultado + \"\\n\");\r\n                    interpretado = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!interpretado) {\r\n                vista.mostrar(\"⚠ Comando no reconocido: \" + comando + \"\\n\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "IntérpreteExpresionesMatematicas",
        "archivos": {
          "model": {
            "Expresion.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Expresion {\r\n\tint interpretar();\r\n}\r\n",
            "ExpresionConstante.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionConstante implements Expresion {\r\n    private int valor;\r\n\r\n    public ExpresionConstante(int valor) {\r\n        this.valor = valor;\r\n    }\r\n\r\n    @Override\r\n    public int interpretar() {\r\n        return valor;\r\n    }\r\n}\r\n",
            "ExpresionDivision.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionDivision implements Expresion {\r\n    private Expresion izquierda, derecha;\r\n\r\n    public ExpresionDivision(Expresion izquierda, Expresion derecha) {\r\n        this.izquierda = izquierda;\r\n        this.derecha = derecha;\r\n    }\r\n\r\n    @Override\r\n    public int interpretar() {\r\n        int divisor = derecha.interpretar();\r\n        if (divisor == 0) {\r\n            throw new ArithmeticException(\"División por cero\");\r\n        }\r\n        return izquierda.interpretar() / divisor;\r\n    }\r\n}\r\n",
            "ExpresionMultiplicacion.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionMultiplicacion implements Expresion {\r\n    private Expresion izquierda, derecha;\r\n\r\n    public ExpresionMultiplicacion(Expresion izquierda, Expresion derecha) {\r\n        this.izquierda = izquierda;\r\n        this.derecha = derecha;\r\n    }\r\n\r\n    @Override\r\n    public int interpretar() {\r\n        return izquierda.interpretar() * derecha.interpretar();\r\n    }\r\n}\r\n",
            "ExpresionResta.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionResta implements Expresion {\r\n    private Expresion izquierda, derecha;\r\n\r\n    public ExpresionResta(Expresion izquierda, Expresion derecha) {\r\n        this.izquierda = izquierda;\r\n        this.derecha = derecha;\r\n    }\r\n\r\n    @Override\r\n    public int interpretar() {\r\n        return izquierda.interpretar() - derecha.interpretar();\r\n    }\r\n}\r\n\r\n",
            "ExpresionSuma.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionSuma implements Expresion {\r\n    private Expresion izquierda, derecha;\r\n\r\n    public ExpresionSuma(Expresion izquierda, Expresion derecha) {\r\n        this.izquierda = izquierda;\r\n        this.derecha = derecha;\r\n    }\r\n\r\n    @Override\r\n    public int interpretar() {\r\n        return izquierda.interpretar() + derecha.interpretar();\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n    public void mostrar(String mensaje) {\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        try {\r\n            Expresion suma = new ExpresionSuma(new ExpresionConstante(5), new ExpresionConstante(3));\r\n            Expresion resta = new ExpresionResta(new ExpresionConstante(10), new ExpresionConstante(2));\r\n            Expresion mult = new ExpresionMultiplicacion(new ExpresionConstante(4), new ExpresionConstante(2));\r\n            Expresion div = new ExpresionDivision(new ExpresionConstante(20), new ExpresionConstante(4));\r\n\r\n            vista.mostrar(\"Resultado de 5 + 3 = \" + suma.interpretar());\r\n            vista.mostrar(\"Resultado de 10 - 2 = \" + resta.interpretar());\r\n            vista.mostrar(\"Resultado de 4 * 2 = \" + mult.interpretar());\r\n            vista.mostrar(\"Resultado de 20 / 4 = \" + div.interpretar());\r\n\r\n        } catch (ArithmeticException e) {\r\n            vista.mostrar(\"Error: \" + e.getMessage());\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "IntérpreteFiltrosDeBusqueda",
        "archivos": {
          "model": {
            "Expresion.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Expresion {\r\n    boolean interpretar(Producto p);\r\n}\r\n",
            "ExpresionCategoriaIgual.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionCategoriaIgual implements Expresion {\r\n    private String categoriaBuscada;\r\n\r\n    public ExpresionCategoriaIgual(String categoriaBuscada) {\r\n        this.categoriaBuscada = categoriaBuscada;\r\n    }\r\n\r\n    @Override\r\n    public boolean interpretar(Producto p) {\r\n        return p.getCategoria().equalsIgnoreCase(categoriaBuscada);\r\n    }\r\n}\r\n",
            "ExpresionPrecioMayor.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionPrecioMayor implements Expresion {\r\n    private double valor;\r\n\r\n    public ExpresionPrecioMayor(double valor) {\r\n        this.valor = valor;\r\n    }\r\n\r\n    @Override\r\n    public boolean interpretar(Producto p) {\r\n        return p.getPrecio() > valor;\r\n    }\r\n}\r\n",
            "ExpresionStockMenor.java": "package co.edu.udistrital.model;\r\n\r\npublic class ExpresionStockMenor implements Expresion {\r\n    private int cantidad;\r\n\r\n    public ExpresionStockMenor(int cantidad) {\r\n        this.cantidad = cantidad;\r\n    }\r\n\r\n    @Override\r\n    public boolean interpretar(Producto p) {\r\n        return p.getStock() < cantidad;\r\n    }\r\n}\r\n",
            "Producto.java": "package co.edu.udistrital.model;\r\n\r\npublic class Producto {\r\n    private String nombre;\r\n    private double precio;\r\n    private String categoria;\r\n    private int stock;\r\n\r\n    public Producto(String nombre, double precio, String categoria, int stock) {\r\n        this.nombre = nombre;\r\n        this.precio = precio;\r\n        this.categoria = categoria;\r\n        this.stock = stock;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    public double getPrecio() {\r\n        return precio;\r\n    }\r\n\r\n    public String getCategoria() {\r\n        return categoria;\r\n    }\r\n\r\n    public int getStock() {\r\n        return stock;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n    public void mostrar(String mensaje) {\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        List<Producto> productos = new ArrayList<>();\r\n        productos.add(new Producto(\"Laptop Lenovo\", 2500, \"Electrónica\", 15));\r\n        productos.add(new Producto(\"Silla ergonómica\", 450, \"Oficina\", 5));\r\n        productos.add(new Producto(\"Smartphone\", 900, \"Electrónica\", 30));\r\n        productos.add(new Producto(\"Cuaderno\", 10, \"Papelería\", 80));\r\n\r\n        Expresion filtro1 = new ExpresionPrecioMayor(500);\r\n        Expresion filtro2 = new ExpresionCategoriaIgual(\"Electrónica\");\r\n        Expresion filtro3 = new ExpresionStockMenor(20);\r\n\r\n        vista.mostrar(\"🔎 Productos con precio > 500:\");\r\n        for (Producto p : productos) {\r\n            if (filtro1.interpretar(p)) {\r\n                vista.mostrar(\"- \" + p.getNombre());\r\n            }\r\n        }\r\n\r\n        vista.mostrar(\"\\n🔎 Productos en categoría 'Electrónica':\");\r\n        for (Producto p : productos) {\r\n            if (filtro2.interpretar(p)) {\r\n                vista.mostrar(\"- \" + p.getNombre());\r\n            }\r\n        }\r\n\r\n        vista.mostrar(\"\\n🔎 Productos con stock < 20:\");\r\n        for (Producto p : productos) {\r\n            if (filtro3.interpretar(p)) {\r\n                vista.mostrar(\"- \" + p.getNombre());\r\n            }\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Iterator": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "RecorridoBibliotecaDigital",
        "archivos": {
          "model": {
            "Biblioteca.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Biblioteca {\r\n    private List<Libro> libros;\r\n\r\n    public Biblioteca() {\r\n        libros = new ArrayList<>();\r\n    }\r\n\r\n    public void agregarLibro(Libro libro) {\r\n        libros.add(libro);\r\n    }\r\n\r\n    public Iterador crearIterador() {\r\n        return new IteradorBiblioteca(libros);\r\n    }\r\n}\r\n",
            "Iterador.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Iterador {\r\n\tboolean tieneSiguiente();\r\n    Libro siguiente();\r\n}\r\n",
            "IteradorBiblioteca.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic class IteradorBiblioteca implements Iterador {\r\n    private List<Libro> libros;\r\n    private int posicion = 0;\r\n\r\n    public IteradorBiblioteca(List<Libro> libros) {\r\n        this.libros = libros;\r\n    }\r\n\r\n    @Override\r\n    public boolean tieneSiguiente() {\r\n        return posicion < libros.size();\r\n    }\r\n\r\n    @Override\r\n    public Libro siguiente() {\r\n        if (tieneSiguiente()) {\r\n            return libros.get(posicion++);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n",
            "Libro.java": "package co.edu.udistrital.model;\r\n\r\npublic class Libro {\r\n    private String titulo;\r\n    private String autor;\r\n\r\n    public Libro(String titulo, String autor) {\r\n        this.titulo = titulo;\r\n        this.autor = autor;\r\n    }\r\n\r\n    public String getTitulo() {\r\n        return titulo;\r\n    }\r\n\r\n    public String getAutor() {\r\n        return autor;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarLibro(String texto) {\r\n        System.out.println(\"[Libro]\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Biblioteca biblioteca = new Biblioteca();\r\n\r\n        biblioteca.agregarLibro(new Libro(\"1984\", \"George Orwell\"));\r\n        biblioteca.agregarLibro(new Libro(\"Crónica de una muerte anunciada\", \"Gabriel García Márquez\"));\r\n        biblioteca.agregarLibro(new Libro(\"Fahrenheit 451\", \"Ray Bradbury\"));\r\n\r\n        Iterador iterador = biblioteca.crearIterador();\r\n\r\n        while (iterador.tieneSiguiente()) {\r\n            Libro libro = iterador.siguiente();\r\n            vista.mostrarLibro(\"Título: \" + libro.getTitulo() + \" | Autor: \" + libro.getAutor());\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "RecorridoPlaylistPodcast",
        "archivos": {
          "model": {
            "Episodio.java": "package co.edu.udistrital.model;\r\n\r\npublic class Episodio {\r\n    private String titulo;\r\n    private int duracionMin;\r\n\r\n    public Episodio(String titulo, int duracionMin) {\r\n        this.titulo = titulo;\r\n        this.duracionMin = duracionMin;\r\n    }\r\n\r\n    public String getTitulo() {\r\n        return titulo;\r\n    }\r\n\r\n    public int getDuracionMin() {\r\n        return duracionMin;\r\n    }\r\n}\r\n\r\n",
            "Iterador.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Iterador {\r\n\tboolean tieneSiguiente();\r\n    Episodio siguiente();\r\n}\r\n",
            "IteradorPlaylist.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic class IteradorPlaylist implements Iterador {\r\n    private List<Episodio> episodios;\r\n    private int posicion = 0;\r\n\r\n    public IteradorPlaylist(List<Episodio> episodios) {\r\n        this.episodios = episodios;\r\n    }\r\n\r\n    @Override\r\n    public boolean tieneSiguiente() {\r\n        return posicion < episodios.size();\r\n    }\r\n\r\n    @Override\r\n    public Episodio siguiente() {\r\n        if (tieneSiguiente()) {\r\n            return episodios.get(posicion++);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n",
            "Playlist.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Playlist {\r\n    private List<Episodio> episodios;\r\n\r\n    public Playlist() {\r\n        episodios = new ArrayList<>();\r\n    }\r\n\r\n    public void agregarEpisodio(Episodio ep) {\r\n        episodios.add(ep);\r\n    }\r\n\r\n    public Iterador crearIterador() {\r\n        return new IteradorPlaylist(episodios);\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarEpisodio(String texto) {\r\n        System.out.println(\"-----Reproduciendo Podcast-----\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Playlist playlist = new Playlist();\r\n\r\n        playlist.agregarEpisodio(new Episodio(\"Intro al desarrollo\", 12));\r\n        playlist.agregarEpisodio(new Episodio(\"Patrones de diseño\", 18));\r\n        playlist.agregarEpisodio(new Episodio(\"Entrevista con un ingeniero\", 24));\r\n\r\n        Iterador iterador = playlist.crearIterador();\r\n\r\n        while (iterador.tieneSiguiente()) {\r\n            Episodio ep = iterador.siguiente();\r\n            String info = \"Título: \" + ep.getTitulo() + \" | Duración: \" + ep.getDuracionMin() + \" min\";\r\n            vista.mostrarEpisodio(info);\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "RecorridoTareasPendientes",
        "archivos": {
          "model": {
            "Agenda.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Agenda {\r\n    private List<Tarea> tareas;\r\n\r\n    public Agenda() {\r\n        tareas = new ArrayList<>();\r\n    }\r\n\r\n    public void agregarTarea(Tarea tarea) {\r\n        tareas.add(tarea);\r\n    }\r\n\r\n    public Iterador crearIterador() {\r\n        return new IteradorAgenda(tareas);\r\n    }\r\n}\r\n",
            "Iterador.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Iterador {\r\n\tboolean tieneSiguiente();\r\n    Tarea siguiente();\r\n}\r\n",
            "IteradorAgenda.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic class IteradorAgenda implements Iterador {\r\n    private List<Tarea> tareas;\r\n    private int posicion = 0;\r\n\r\n    public IteradorAgenda(List<Tarea> tareas) {\r\n        this.tareas = tareas;\r\n    }\r\n\r\n    @Override\r\n    public boolean tieneSiguiente() {\r\n        return posicion < tareas.size();\r\n    }\r\n\r\n    @Override\r\n    public Tarea siguiente() {\r\n        if (tieneSiguiente()) {\r\n            return tareas.get(posicion++);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n",
            "Tarea.java": "package co.edu.udistrital.model;\r\n\r\npublic class Tarea {\r\n    private String nombre;\r\n    private int prioridad;\r\n\r\n    public Tarea(String nombre, int prioridad) {\r\n        this.nombre = nombre;\r\n        this.prioridad = prioridad;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    public int getPrioridad() {\r\n        return prioridad;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarTarea(String texto) {\r\n        System.out.println(\"[Tarea]\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Agenda agenda = new Agenda();\r\n\r\n        agenda.agregarTarea(new Tarea(\"Enviar informe\", 1));\r\n        agenda.agregarTarea(new Tarea(\"Revisar correos\", 2));\r\n        agenda.agregarTarea(new Tarea(\"Llamar a proveedor\", 1));\r\n        agenda.agregarTarea(new Tarea(\"Leer capítulo del libro\", 3));\r\n\r\n        Iterador iterador = agenda.crearIterador();\r\n\r\n        while (iterador.tieneSiguiente()) {\r\n            Tarea tarea = iterador.siguiente();\r\n            String info = \"Tarea: \" + tarea.getNombre() + \" | Prioridad: \" + tarea.getPrioridad();\r\n            vista.mostrarTarea(info);\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Mediator": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "ChatMediator",
        "archivos": {
          "model": {
            "ChatMediator.java": "package model;\n\npublic interface ChatMediator {\n    String sendMessage(User sender, String message);\n}",
            "ChatRoom.java": "package model;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ChatRoom implements ChatMediator {\n    private List<User> users;\n\n    public ChatRoom() {\n        this.users = new ArrayList<>();\n    }\n\n    public void addUser(User user) {\n        users.add(user);\n    }\n\n    public void removeUser(User user) {\n        users.remove(user);\n    }\n\n    @Override\n    public String sendMessage(User sender, String message) {\n    \tString output = \"\";\n        for (User user : users) {\n            if (user != sender) {\n                output += user.receiveMessage(sender.getName() + \": \" + message)+\"\\n\";\n            }\n        }\n\t\treturn output;\n    }\n\n    public List<User> getUsers() {\n        return users;\n    }\n\n    public void setUsers(List<User> users) {\n        this.users = users;\n    }\n}",
            "User.java": "package model;\n\npublic class User {\n    private String name;\n    private ChatMediator mediator;\n\n    public User(String name, ChatMediator mediator) {\n        this.name = name;\n        this.mediator = mediator;\n    }\n\n    public String send(String message) {\n        return mediator.sendMessage(this, message);\n    }\n\n    public String receiveMessage(String message) {\n        return name + \" received: \" + message;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public ChatMediator getMediator() {\n        return mediator;\n    }\n\n    public void setMediator(ChatMediator mediator) {\n        this.mediator = mediator;\n    }\n}"
          },
          "view": {
            "ConsoleView.java": "package view;\n\nimport java.util.Scanner;\n\npublic class ConsoleView {\n    private Scanner scanner;\n\n    public ConsoleView() {\n        this.scanner = new Scanner(System.in);\n    }\n\n    public void print(String message) {\n        System.out.println(message);\n    }\n\n    public int readInt(String message){\n        print(message);\n        while (true) {\n            try {\n                return Integer.parseInt(scanner.nextLine());\n            } catch (NumberFormatException e) {\n                print(\"Invalid input. Please enter a valid integer.\");\n            }\n        }\n    }\n\n    public String readString(String message){\n        print(message);\n        String input = scanner.nextLine();\n        if (input.isEmpty()) {\n            print(\"Input cannot be empty. Please try again.\");\n            return readString(message);\n        }\n        return input;\n    }\n}\n"
          },
          "controller": {
            "AplMain.java": "package controller;\n\npublic class AplMain {\n    public static void main(String[] args) {\n        ChatController chatController = new ChatController();\n        chatController.run();\n    }\n}",
            "ChatController.java": "package controller;\n\nimport model.ChatRoom;\nimport model.User;\nimport view.ConsoleView;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ChatController {\n    private ChatRoom chatRoom;\n    private ConsoleView view;\n\n    public ChatController() {\n        this.chatRoom = new ChatRoom();\n        this.view = new ConsoleView();\n    }\n\n    public void run() {\n        view.print(\"Welcome to the Chat Room!\");\n        \n        int numUsers = view.readInt(\"Enter number of users: \");\n        \n        for (int i = 0; i < numUsers; i++) {\n            String userName = view.readString(\"Enter name for user \" + (i + 1) + \": \");\n            User user = new User(userName, chatRoom);\n            chatRoom.addUser(user);\n        }\n        \n        view.print(\"Chat room initialized with \" + numUsers + \" users.\");\n        \n        while (true) {\n            displayUsers();\n            int senderIndex = view.readInt(\"Select sender (0 to exit): \");\n            \n            if (senderIndex == 0) {\n                view.print(\"Goodbye!\");\n                break;\n            }\n            \n            if (senderIndex < 1 || senderIndex > chatRoom.getUsers().size()) {\n                view.print(\"Invalid user selection.\");\n                continue;\n            }\n            \n            String message = view.readString(\"Enter message: \");\n            User sender = chatRoom.getUsers().get(senderIndex - 1);\n            view.print(sender.send(message));\n            view.print(\"\");\n        }\n    }\n    \n    private void displayUsers() {\n        view.print(\"Available users:\");\n        for (int i = 0; i < chatRoom.getUsers().size(); i++) {\n            view.print((i + 1) + \". \" + chatRoom.getUsers().get(i).getName());\n        }\n    }\n\n    public ChatRoom getChatRoom() {\n        return chatRoom;\n    }\n\n    public void setChatRoom(ChatRoom chatRoom) {\n        this.chatRoom = chatRoom;\n    }\n\n    public ConsoleView getView() {\n        return view;\n    }\n\n    public void setView(ConsoleView view) {\n        this.view = view;\n    }\n}"
          }
        }
      },
      {
        "nombre": "CoordinadorDeRobotsEnAlmacén",
        "archivos": {
          "model": {
            "CoordinadorAlmacen.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class CoordinadorAlmacen implements Mediador {\r\n    private List<Robot> robots;\r\n\r\n    public CoordinadorAlmacen() {\r\n        robots = new ArrayList<>();\r\n    }\r\n\r\n    @Override\r\n    public void registrar(Robot r) {\r\n        robots.add(r);\r\n    }\r\n\r\n    @Override\r\n    public List<String> enviar(String mensaje, Robot emisor) {\r\n        List<String> respuestas = new ArrayList<>();\r\n        for (Robot r : robots) {\r\n            if (!r.equals(emisor)) {\r\n                respuestas.add(r.recibir(\"De \" + emisor.getNombre() + \": \" + mensaje));\r\n            }\r\n        }\r\n        return respuestas;\r\n    }\r\n}\r\n",
            "Mediador.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic interface Mediador {\r\n    void registrar(Robot r);\r\n    List<String> enviar(String mensaje, Robot emisor);\r\n}\r\n",
            "Robot.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic abstract class Robot {\r\n    protected String nombre;\r\n    protected Mediador mediador;\r\n\r\n    public Robot(String nombre, Mediador mediador) {\r\n        this.nombre = nombre;\r\n        this.mediador = mediador;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    public List<String> enviar(String mensaje) {\r\n        return mediador.enviar(mensaje, this);\r\n    }\r\n\r\n    public abstract String recibir(String mensaje);\r\n}\r\n\r\n",
            "RobotCarga.java": "package co.edu.udistrital.model;\r\n\r\npublic class RobotCarga extends Robot {\r\n    public RobotCarga(Mediador mediador) {\r\n        super(\"Robot Carga\", mediador);\r\n    }\r\n\r\n    @Override\r\n    public String recibir(String mensaje) {\r\n        return \"📦 Robot Carga recibió: \" + mensaje;\r\n    }\r\n}\r\n\r\n",
            "RobotEmbalaje.java": "package co.edu.udistrital.model;\r\n\r\npublic class RobotEmbalaje extends Robot {\r\n    public RobotEmbalaje(Mediador mediador) {\r\n        super(\"Robot Embalaje\", mediador);\r\n    }\r\n\r\n    @Override\r\n    public String recibir(String mensaje) {\r\n        return \"📦🛠️ Robot Embalaje recibió: \" + mensaje;\r\n    }\r\n}\r\n\r\n",
            "RobotInspeccion.java": "package co.edu.udistrital.model;\r\n\r\npublic class RobotInspeccion extends Robot {\r\n    public RobotInspeccion(Mediador mediador) {\r\n        super(\"Robot Inspección\", mediador);\r\n    }\r\n\r\n    @Override\r\n    public String recibir(String mensaje) {\r\n        return \"🔍 Robot Inspección recibió: \" + mensaje;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"-----Almacén Inteligente-----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Mediador coordinador = new CoordinadorAlmacen();\r\n\r\n        Robot carga = new RobotCarga(coordinador);\r\n        Robot inspeccion = new RobotInspeccion(coordinador);\r\n        Robot embalaje = new RobotEmbalaje(coordinador);\r\n\r\n        coordinador.registrar(carga);\r\n        coordinador.registrar(inspeccion);\r\n        coordinador.registrar(embalaje);\r\n\r\n        vista.mostrar(\"🔄 Robot Inspección informa:\");\r\n        List<String> mensajes = inspeccion.enviar(\"Producto aprobado, enviar a embalaje.\");\r\n        for (String m : mensajes) {\r\n            vista.mostrar(m);\r\n        }\r\n\r\n        vista.mostrar(\"🔄 Robot Carga informa:\");\r\n        mensajes = carga.enviar(\"Producto listo, esperando inspección.\");\r\n        for (String m : mensajes) {\r\n            vista.mostrar(m);\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "SalaReunionesVirtualesDeEmpresa",
        "archivos": {
          "model": {
            "Departamento.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic abstract class Departamento {\r\n    protected String nombre;\r\n    protected Mediador mediador;\r\n\r\n    public Departamento(String nombre, Mediador mediador) {\r\n        this.nombre = nombre;\r\n        this.mediador = mediador;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    public List<String> enviar(String mensaje) {\r\n        return mediador.enviarMensaje(mensaje, this);\r\n    }\r\n\r\n    public abstract String recibir(String mensaje);\r\n}\r\n",
            "Marketing.java": "package co.edu.udistrital.model;\r\n\r\npublic class Marketing extends Departamento {\r\n    public Marketing(Mediador mediador) {\r\n        super(\"Marketing\", mediador);\r\n    }\r\n\r\n    @Override\r\n    public String recibir(String mensaje) {\r\n        return \"📣 Marketing recibió: \" + mensaje;\r\n    }\r\n}\r\n",
            "Mediador.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic interface Mediador {\r\n    List<String> enviarMensaje(String mensaje, Departamento emisor);\r\n    void registrar(Departamento depto);\r\n}\r\n\r\n",
            "RecursosHumanos.java": "package co.edu.udistrital.model;\r\n\r\npublic class RecursosHumanos extends Departamento {\r\n    public RecursosHumanos(Mediador mediador) {\r\n        super(\"Recursos Humanos\", mediador);\r\n    }\r\n\r\n    @Override\r\n    public String recibir(String mensaje) {\r\n        return \"👥 Recursos Humanos recibió: \" + mensaje;\r\n    }\r\n}\r\n\r\n",
            "SalaReuniones.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SalaReuniones implements Mediador {\r\n    private List<Departamento> departamentos;\r\n\r\n    public SalaReuniones() {\r\n        departamentos = new ArrayList<>();\r\n    }\r\n\r\n    @Override\r\n    public void registrar(Departamento depto) {\r\n        departamentos.add(depto);\r\n    }\r\n\r\n    @Override\r\n    public List<String> enviarMensaje(String mensaje, Departamento emisor) {\r\n        List<String> respuestas = new ArrayList<>();\r\n        for (Departamento d : departamentos) {\r\n            if (!d.equals(emisor)) {\r\n                respuestas.add(d.recibir(\"Mensaje de \" + emisor.getNombre() + \": \" + mensaje));\r\n            }\r\n        }\r\n        return respuestas;\r\n    }\r\n}\r\n",
            "Tecnologia.java": "package co.edu.udistrital.model;\r\n\r\npublic class Tecnologia extends Departamento {\r\n    public Tecnologia(Mediador mediador) {\r\n        super(\"Tecnología\", mediador);\r\n    }\r\n\r\n    @Override\r\n    public String recibir(String mensaje) {\r\n        return \"💻 Tecnología recibió: \" + mensaje;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"[Sala de Reuniones]\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Mediador sala = new SalaReuniones();\r\n\r\n        Departamento tecnologia = new Tecnologia(sala);\r\n        Departamento rh = new RecursosHumanos(sala);\r\n        Departamento marketing = new Marketing(sala);\r\n\r\n        sala.registrar(tecnologia);\r\n        sala.registrar(rh);\r\n        sala.registrar(marketing);\r\n\r\n        vista.mostrar(\"🗨️ Tecnología envía un mensaje a todos:\");\r\n        List<String> respuestas = tecnologia.enviar(\"Hemos actualizado el servidor.\");\r\n        for (String r : respuestas) {\r\n            vista.mostrar(r);\r\n        }\r\n\r\n        vista.mostrar(\"🗨️ Marketing responde:\");\r\n        respuestas = marketing.enviar(\"Gracias, lanzaremos la campaña.\");\r\n        for (String r : respuestas) {\r\n            vista.mostrar(r);\r\n        }\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Memento": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "EditorTexto",
        "archivos": {
          "model": {
            "EditorMemento.java": "package co.edu.udistrital.model;\r\n\r\npublic class EditorMemento {\r\n    private final String estadoGuardado;\r\n\r\n    public EditorMemento(String estado) {\r\n        this.estadoGuardado = estado;\r\n    }\r\n\r\n    public String getEstado() {\r\n        return estadoGuardado;\r\n    }\r\n}\r\n",
            "EditorTexto.java": "package co.edu.udistrital.model;\r\n\r\npublic class EditorTexto {\r\n    private String contenido = \"\";\r\n\r\n    public void escribir(String texto) {\r\n        contenido += texto;\r\n    }\r\n\r\n    public String obtenerContenido() {\r\n        return contenido;\r\n    }\r\n\r\n    public EditorMemento guardar() {\r\n        return new EditorMemento(contenido);\r\n    }\r\n\r\n    public void restaurar(EditorMemento memento) {\r\n        this.contenido = memento.getEstado();\r\n    }\r\n}\r\n",
            "Historial.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.Stack;\r\n\r\npublic class Historial {\r\n    private Stack<EditorMemento> versiones = new Stack<>();\r\n\r\n    public void guardar(EditorMemento m) {\r\n        versiones.push(m);\r\n    }\r\n\r\n    public EditorMemento deshacer() {\r\n        if (!versiones.isEmpty()) {\r\n            return versiones.pop();\r\n        } else {\r\n            return new EditorMemento(\"\"); // estado vacío si no hay versiones\r\n        }\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"----Editor de Texto----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        EditorTexto editor = new EditorTexto();\r\n        Historial historial = new Historial();\r\n\r\n        // Primer texto\r\n        editor.escribir(\"Hola, mundo.\\n\");\r\n        historial.guardar(editor.guardar());\r\n        vista.mostrar(\"Contenido actual:\\n\" + editor.obtenerContenido());\r\n\r\n        // Segundo texto\r\n        editor.escribir(\"Estoy aprendiendo el patrón Memento.\\n\");\r\n        historial.guardar(editor.guardar());\r\n        vista.mostrar(\"Contenido actual:\\n\" + editor.obtenerContenido());\r\n\r\n        // Tercer texto (error del usuario)\r\n        editor.escribir(\"Ups! No debía escribir eso.\\n\");\r\n        vista.mostrar(\"Contenido antes de deshacer:\\n\" + editor.obtenerContenido());\r\n\r\n        // Deshacer\r\n        editor.restaurar(historial.deshacer());\r\n        vista.mostrar(\"Contenido tras deshacer:\\n\" + editor.obtenerContenido());\r\n\r\n        // Otro deshacer\r\n        editor.restaurar(historial.deshacer());\r\n        vista.mostrar(\"Contenido tras segundo deshacer:\\n\" + editor.obtenerContenido());\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "PersonalizaciónPersonajeDeVideojuegos",
        "archivos": {
          "model": {
            "GestorPersonalizacion.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.Stack;\r\n\r\npublic class GestorPersonalizacion {\r\n    private Stack<PersonajeMemento> historial = new Stack<>();\r\n\r\n    public void guardar(PersonajeMemento m) {\r\n        historial.push(m);\r\n    }\r\n\r\n    public PersonajeMemento deshacer() {\r\n        if (!historial.isEmpty()) {\r\n            return historial.pop();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n",
            "Personaje.java": "package co.edu.udistrital.model;\r\n\r\npublic class Personaje {\r\n    private String nombre;\r\n    private String clase;\r\n    private int nivel;\r\n\r\n    public Personaje(String nombre, String clase, int nivel) {\r\n        this.nombre = nombre;\r\n        this.clase = clase;\r\n        this.nivel = nivel;\r\n    }\r\n\r\n    public void personalizar(String nombre, String clase, int nivel) {\r\n        this.nombre = nombre;\r\n        this.clase = clase;\r\n        this.nivel = nivel;\r\n    }\r\n\r\n    public String mostrar() {\r\n        return \"🎮 Personaje:\\nNombre: \" + nombre + \"\\nClase: \" + clase + \"\\nNivel: \" + nivel;\r\n    }\r\n\r\n    public PersonajeMemento guardar() {\r\n        return new PersonajeMemento(nombre, clase, nivel);\r\n    }\r\n\r\n    public void restaurar(PersonajeMemento m) {\r\n        this.nombre = m.getNombre();\r\n        this.clase = m.getClase();\r\n        this.nivel = m.getNivel();\r\n    }\r\n}\r\n\r\n",
            "PersonajeMemento.java": "package co.edu.udistrital.model;\r\n\r\npublic class PersonajeMemento {\r\n    private final String estadoNombre;\r\n    private final String estadoClase;\r\n    private final int estadoNivel;\r\n\r\n    public PersonajeMemento(String nombre, String clase, int nivel) {\r\n        this.estadoNombre = nombre;\r\n        this.estadoClase = clase;\r\n        this.estadoNivel = nivel;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return estadoNombre;\r\n    }\r\n\r\n    public String getClase() {\r\n        return estadoClase;\r\n    }\r\n\r\n    public int getNivel() {\r\n        return estadoNivel;\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"----Editor de Personajes----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Personaje personaje = new Personaje(\"Axel\", \"Guerrero\", 1);\r\n        GestorPersonalizacion gestor = new GestorPersonalizacion();\r\n\r\n        vista.mostrar(personaje.mostrar());\r\n        gestor.guardar(personaje.guardar());\r\n\r\n        // Cambio 1\r\n        personaje.personalizar(\"Axel\", \"Mago\", 2);\r\n        gestor.guardar(personaje.guardar());\r\n        vista.mostrar(\"🧙‍ Cambio de clase:\\n\" + personaje.mostrar());\r\n\r\n        // Cambio 2\r\n        personaje.personalizar(\"Zara\", \"Arquera\", 3);\r\n        vista.mostrar(\"🏹 Segundo cambio:\\n\" + personaje.mostrar());\r\n\r\n        // Deshacer 1\r\n        PersonajeMemento previo = gestor.deshacer();\r\n        if (previo != null) {\r\n            personaje.restaurar(previo);\r\n            vista.mostrar(\"↩️ Deshacer:\\n\" + personaje.mostrar());\r\n        }\r\n\r\n        // Deshacer 2\r\n        previo = gestor.deshacer();\r\n        if (previo != null) {\r\n            personaje.restaurar(previo);\r\n            vista.mostrar(\"↩️ Segundo deshacer:\\n\" + personaje.mostrar());\r\n        }\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "ReservasDeVuelos",
        "archivos": {
          "model": {
            "HistorialCambios.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.Stack;\r\n\r\npublic class HistorialCambios {\r\n    private Stack<ReservaMemento> historial = new Stack<>();\r\n\r\n    public void guardar(ReservaMemento m) {\r\n        historial.push(m);\r\n    }\r\n\r\n    public ReservaMemento deshacer() {\r\n        if (!historial.isEmpty()) {\r\n            return historial.pop();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\n",
            "Reserva.java": "package co.edu.udistrital.model;\r\n\r\npublic class Reserva {\r\n    private String origen;\r\n    private String destino;\r\n    private String fecha;\r\n\r\n    public Reserva(String origen, String destino, String fecha) {\r\n        this.origen = origen;\r\n        this.destino = destino;\r\n        this.fecha = fecha;\r\n    }\r\n\r\n    public void modificar(String origen, String destino, String fecha) {\r\n        this.origen = origen;\r\n        this.destino = destino;\r\n        this.fecha = fecha;\r\n    }\r\n\r\n    public String mostrar() {\r\n        return \"🛫 Reserva:\\nOrigen: \" + origen + \"\\nDestino: \" + destino + \"\\nFecha: \" + fecha;\r\n    }\r\n\r\n    public ReservaMemento guardar() {\r\n        return new ReservaMemento(origen, destino, fecha);\r\n    }\r\n\r\n    public void restaurar(ReservaMemento m) {\r\n        this.origen = m.getOrigen();\r\n        this.destino = m.getDestino();\r\n        this.fecha = m.getFecha();\r\n    }\r\n}\r\n\r\n",
            "ReservaMemento.java": "package co.edu.udistrital.model;\r\n\r\npublic class ReservaMemento {\r\n    private final String estadoOrigen;\r\n    private final String estadoDestino;\r\n    private final String estadoFecha;\r\n\r\n    public ReservaMemento(String origen, String destino, String fecha) {\r\n        this.estadoOrigen = origen;\r\n        this.estadoDestino = destino;\r\n        this.estadoFecha = fecha;\r\n    }\r\n\r\n    public String getOrigen() {\r\n        return estadoOrigen;\r\n    }\r\n\r\n    public String getDestino() {\r\n        return estadoDestino;\r\n    }\r\n\r\n    public String getFecha() {\r\n        return estadoFecha;\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"-----Sistema de Reservas----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Reserva reserva = new Reserva(\"Bogotá\", \"Cartagena\", \"2025-08-01\");\r\n        HistorialCambios historial = new HistorialCambios();\r\n\r\n        vista.mostrar(reserva.mostrar());\r\n        historial.guardar(reserva.guardar());\r\n\r\n        // Modificación 1\r\n        reserva.modificar(\"Bogotá\", \"Medellín\", \"2025-08-03\");\r\n        historial.guardar(reserva.guardar());\r\n        vista.mostrar(\"✏️ Reserva modificada:\\n\" + reserva.mostrar());\r\n\r\n        // Modificación 2\r\n        reserva.modificar(\"Bogotá\", \"Cali\", \"2025-08-05\");\r\n        vista.mostrar(\"✏️ Segunda modificación:\\n\" + reserva.mostrar());\r\n\r\n        // Deshacer cambio\r\n        ReservaMemento versionAnterior = historial.deshacer();\r\n        if (versionAnterior != null) {\r\n            reserva.restaurar(versionAnterior);\r\n            vista.mostrar(\"↩️ Deshacer:\\n\" + reserva.mostrar());\r\n        }\r\n\r\n        // Otro deshacer\r\n        versionAnterior = historial.deshacer();\r\n        if (versionAnterior != null) {\r\n            reserva.restaurar(versionAnterior);\r\n            vista.mostrar(\"↩️ Segundo deshacer:\\n\" + reserva.mostrar());\r\n        }\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Observer": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "MonitorDeTemperatura",
        "archivos": {
          "model": {
            "ModuloAlarma.java": "package co.edu.udistrital.model;\r\n\r\npublic class ModuloAlarma implements Observador {\r\n    @Override\r\n    public String actualizar(int nuevaTemperatura) {\r\n        if (nuevaTemperatura > 35) {\r\n            return \"🚨 Alarma activada: temperatura excesiva.\";\r\n        }\r\n        return \"✅ Temperatura bajo control.\";\r\n    }\r\n}\r\n",
            "ModuloRiego.java": "package co.edu.udistrital.model;\r\n\r\npublic class ModuloRiego implements Observador {\r\n    @Override\r\n    public String actualizar(int nuevaTemperatura) {\r\n        if (nuevaTemperatura < 20) {\r\n            return \"☁️ El módulo de riego permanece apagado.\";\r\n        } else {\r\n            return \"💧 El módulo de riego se ha activado.\";\r\n        }\r\n    }\r\n}\r\n",
            "Observador.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Observador {\r\n\tString actualizar(int nuevaTemperatura);\r\n}\r\n",
            "SensorTemperatura.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SensorTemperatura implements Sujeto {\r\n    private List<Observador> observadores;\r\n    private int temperatura;\r\n\r\n    public SensorTemperatura() {\r\n        observadores = new ArrayList<>();\r\n    }\r\n\r\n    public List<String> setTemperatura(int t) {\r\n        this.temperatura = t;\r\n        return notificarObservadores();\r\n    }\r\n\r\n    @Override\r\n    public void agregarObservador(Observador o) {\r\n        observadores.add(o);\r\n    }\r\n\r\n    @Override\r\n    public void eliminarObservador(Observador o) {\r\n        observadores.remove(o);\r\n    }\r\n\r\n    @Override\r\n    public List<String> notificarObservadores() {\r\n        List<String> respuestas = new ArrayList<>();\r\n        for (Observador o : observadores) {\r\n            respuestas.add(o.actualizar(temperatura));\r\n        }\r\n        return respuestas;\r\n    }\r\n}\r\n",
            "Sujeto.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic interface Sujeto {\r\n    void agregarObservador(Observador o);\r\n    void eliminarObservador(Observador o);\r\n    List<String> notificarObservadores();\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarMensaje(String m) {\r\n        System.out.println(\"-----Granja automatizada------\");\r\n        System.out.println(m);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        SensorTemperatura sensor = new SensorTemperatura();\r\n        Observador riego = new ModuloRiego();\r\n        Observador alarma = new ModuloAlarma();\r\n\r\n        sensor.agregarObservador(riego);\r\n        sensor.agregarObservador(alarma);\r\n\r\n        List<String> mensajes = sensor.setTemperatura(22);\r\n        for (String msg : mensajes) {\r\n            vista.mostrarMensaje(msg);\r\n        }\r\n\r\n        mensajes = sensor.setTemperatura(38);\r\n        for (String msg : mensajes) {\r\n            vista.mostrarMensaje(msg);\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "NotificacionBolsaDeValores",
        "archivos": {
          "model": {
            "Accion.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Accion implements Sujeto {\r\n    private List<Observador> observadores;\r\n    private String nombre;\r\n    private double valor;\r\n\r\n    public Accion(String nombre, double valorInicial) {\r\n        this.nombre = nombre;\r\n        this.valor = valorInicial;\r\n        this.observadores = new ArrayList<>();\r\n    }\r\n\r\n    public List<String> setValor(double nuevoValor) {\r\n        this.valor = nuevoValor;\r\n        return notificarObservadores();\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public void agregarObservador(Observador o) {\r\n        observadores.add(o);\r\n    }\r\n\r\n    @Override\r\n    public void eliminarObservador(Observador o) {\r\n        observadores.remove(o);\r\n    }\r\n\r\n    @Override\r\n    public List<String> notificarObservadores() {\r\n        List<String> mensajes = new ArrayList<>();\r\n        for (Observador o : observadores) {\r\n            mensajes.add(o.actualizar(valor));\r\n        }\r\n        return mensajes;\r\n    }\r\n}\r\n",
            "AlertaPrecioMinimo.java": "package co.edu.udistrital.model;\r\n\r\npublic class AlertaPrecioMinimo implements Observador {\r\n    private double umbral;\r\n\r\n    public AlertaPrecioMinimo(double umbral) {\r\n        this.umbral = umbral;\r\n    }\r\n\r\n    @Override\r\n    public String actualizar(double nuevoValor) {\r\n        if (nuevoValor < umbral) {\r\n            return \"⚠️ ¡Alerta! El valor bajó del umbral mínimo (\" + umbral + \")\";\r\n        } else {\r\n            return \"✅ Valor actual por encima del umbral mínimo.\";\r\n        }\r\n    }\r\n}\r\n\r\n",
            "Observador.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Observador {\r\n\tString actualizar(double nuevoValor);\r\n}\r\n",
            "RecomendacionVenta.java": "package co.edu.udistrital.model;\r\n\r\npublic class RecomendacionVenta implements Observador {\r\n\r\n    @Override\r\n    public String actualizar(double nuevoValor) {\r\n        if (nuevoValor > 150.0) {\r\n            return \"📢 Recomendación: ¡Vende tus acciones ahora!\";\r\n        } else {\r\n            return \"📊 Sugerencia: Espera un poco más.\";\r\n        }\r\n    }\r\n}\r\n\r\n",
            "Sujeto.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic interface Sujeto {\r\n    void agregarObservador(Observador o);\r\n    void eliminarObservador(Observador o);\r\n    List<String> notificarObservadores();\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"$$ Sistema Bolsa $$\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Accion apple = new Accion(\"AAPL\", 120.0);\r\n        Observador alerta = new AlertaPrecioMinimo(100.0);\r\n        Observador recomendacion = new RecomendacionVenta();\r\n\r\n        apple.agregarObservador(alerta);\r\n        apple.agregarObservador(recomendacion);\r\n\r\n        vista.mostrar(\"🧾 Cambio de valor: $95.0\");\r\n        List<String> mensajes = apple.setValor(95.0);\r\n        for (String msg : mensajes) {\r\n            vista.mostrar(msg);\r\n        }\r\n\r\n        vista.mostrar(\"🧾 Cambio de valor: $160.0\");\r\n        mensajes = apple.setValor(160.0);\r\n        for (String msg : mensajes) {\r\n            vista.mostrar(msg);\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "SeguimientoProgresoEstudiantes",
        "archivos": {
          "model": {
            "Estudiante.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Estudiante implements Sujeto {\r\n    private String nombre;\r\n    private int progreso;\r\n    private List<Observador> observadores;\r\n\r\n    public Estudiante(String nombre) {\r\n        this.nombre = nombre;\r\n        this.progreso = 0;\r\n        this.observadores = new ArrayList<>();\r\n    }\r\n\r\n    public List<String> setProgreso(int nuevoProgreso) {\r\n        this.progreso = nuevoProgreso;\r\n        return notificarObservadores();\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    @Override\r\n    public void agregarObservador(Observador o) {\r\n        observadores.add(o);\r\n    }\r\n\r\n    @Override\r\n    public void eliminarObservador(Observador o) {\r\n        observadores.remove(o);\r\n    }\r\n\r\n    @Override\r\n    public List<String> notificarObservadores() {\r\n        List<String> mensajes = new ArrayList<>();\r\n        for (Observador o : observadores) {\r\n            mensajes.add(o.actualizar(progreso));\r\n        }\r\n        return mensajes;\r\n    }\r\n}\r\n",
            "ModuloCertificacion.java": "package co.edu.udistrital.model;\r\n\r\npublic class ModuloCertificacion implements Observador {\r\n\r\n    @Override\r\n    public String actualizar(int nuevoProgreso) {\r\n        if (nuevoProgreso >= 100) {\r\n            return \"🎓 ¡Estudiante elegible para certificación!\";\r\n        } else {\r\n            return \"📘 Progreso actual: \" + nuevoProgreso + \"% (certificación aún no disponible)\";\r\n        }\r\n    }\r\n}\r\n",
            "ModuloNotificacionPadres.java": "package co.edu.udistrital.model;\r\n\r\npublic class ModuloNotificacionPadres implements Observador {\r\n    private String nombrePadre;\r\n\r\n    public ModuloNotificacionPadres(String nombrePadre) {\r\n        this.nombrePadre = nombrePadre;\r\n    }\r\n\r\n    @Override\r\n    public String actualizar(int nuevoProgreso) {\r\n        return \"📩 Notificación a \" + nombrePadre + \": el estudiante tiene un progreso del \" + nuevoProgreso + \"%.\";\r\n    }\r\n}\r\n",
            "Observador.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Observador {\r\n\tString actualizar(int nuevoProgreso);\r\n}\r\n",
            "Sujeto.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic interface Sujeto {\r\n    void agregarObservador(Observador o);\r\n    void eliminarObservador(Observador o);\r\n    List<String> notificarObservadores();\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"[Sistema Educativo]\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Estudiante estudiante = new Estudiante(\"Laura Gómez\");\r\n        Observador certificacion = new ModuloCertificacion();\r\n        Observador notificacionPadres = new ModuloNotificacionPadres(\"Sr. Gómez\");\r\n\r\n        estudiante.agregarObservador(certificacion);\r\n        estudiante.agregarObservador(notificacionPadres);\r\n\r\n        vista.mostrar(\"📊 Progreso actualizado al 40%\");\r\n        List<String> mensajes = estudiante.setProgreso(40);\r\n        for (String msg : mensajes) {\r\n            vista.mostrar(msg);\r\n        }\r\n\r\n        vista.mostrar(\"📊 Progreso actualizado al 100%\");\r\n        mensajes = estudiante.setProgreso(100);\r\n        for (String msg : mensajes) {\r\n            vista.mostrar(msg);\r\n        }\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Prototype": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "ClonaciónPersonajes",
        "archivos": {
          "model": {
            "Personaje.java": "package co.edu.udistrital.model;\r\n\r\npublic class Personaje implements Cloneable {\r\n\r\n\tprivate String nombre;\r\n\tprivate String tipo;\r\n\tprivate int nivel;\r\n\tprivate int salud;\r\n\r\n\tpublic Personaje(String nombre, String tipo, int nivel, int salud) {\r\n\t\tthis.nombre = nombre;\r\n\t\tthis.tipo = tipo;\r\n\t\tthis.nivel = nivel;\r\n\t\tthis.salud = salud;\r\n\t}\r\n\r\n\tpublic String getNombre() {\r\n\t\treturn nombre;\r\n\t}\r\n\r\n\tpublic void setNombre(String nombre) {\r\n\t\tthis.nombre = nombre;\r\n\t}\r\n\r\n\tpublic String getTipo() {\r\n\t\treturn tipo;\r\n\t}\r\n\r\n\tpublic void setTipo(String tipo) {\r\n\t\tthis.tipo = tipo;\r\n\t}\r\n\r\n\tpublic int getNivel() {\r\n\t\treturn nivel;\r\n\t}\r\n\r\n\tpublic void setNivel(int nivel) {\r\n\t\tthis.nivel = nivel;\r\n\t}\r\n\r\n\tpublic int getSalud() {\r\n\t\treturn salud;\r\n\t}\r\n\r\n\tpublic void setSalud(int salud) {\r\n\t\tthis.salud = salud;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Personaje clone() {\r\n\t\ttry {\r\n\t\t\treturn (Personaje) super.clone();\r\n\t\t} catch (CloneNotSupportedException e) {\r\n\t\t\tthrow new AssertionError(\"No se pudo clonar el personaje.\");\r\n\t\t}\r\n\t}\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.Personaje;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\r\n\tprivate VistaConsola vista;\r\n\r\n\tpublic Controller() {\r\n\t\tvista = new VistaConsola();\r\n\t}\r\n\r\n\tpublic void run() {\r\n\t\tPersonaje base = new Personaje(\"Guerrero Base\", \"Guerrero\", 1, 100);\r\n\t\tvista.mostrarInformacion(\"Personaje Base:\");\r\n\t\tmostrarPersonaje(base);\r\n\r\n\t\tPersonaje mago = base.clone();\r\n\t\tmago.setNombre(\"Mago del Fuego\");\r\n\t\tmago.setTipo(\"Mago\");\r\n\t\tmago.setNivel(3);\r\n\t\tmago.setSalud(80);\r\n\r\n\t\tPersonaje arquero = base.clone();\r\n\t\tarquero.setNombre(\"Arquero Silencioso\");\r\n\t\tarquero.setTipo(\"Arquero\");\r\n\t\tarquero.setNivel(2);\r\n\t\tarquero.setSalud(90);\r\n\r\n\t\tvista.mostrarInformacion(\"\\nPersonaje Clonado 1:\");\r\n\t\tmostrarPersonaje(mago);\r\n\r\n\t\tvista.mostrarInformacion(\"\\nPersonaje Clonado 2:\");\r\n\t\tmostrarPersonaje(arquero);\r\n\t}\r\n\r\n\tprivate void mostrarPersonaje(Personaje p) {\r\n\t\tvista.mostrarInformacion(\"Nombre: \" + p.getNombre());\r\n\t\tvista.mostrarInformacion(\"Tipo: \" + p.getTipo());\r\n\t\tvista.mostrarInformacion(\"Nivel: \" + p.getNivel());\r\n\t\tvista.mostrarInformacion(\"Salud: \" + p.getSalud());\r\n\t}\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ConfiguracionAplicacion",
        "archivos": {
          "model": {
            "Configuracion.java": "package co.edu.udistrital.model;\r\n\r\npublic class Configuracion implements Cloneable {\r\n\r\n\tprivate String tema;\r\n\tprivate String fuente;\r\n\tprivate boolean notificacionesActivadas;\r\n\r\n\tpublic Configuracion(String tema, String fuente, boolean notificacionesActivadas) {\r\n\t\tthis.tema = tema;\r\n\t\tthis.fuente = fuente;\r\n\t\tthis.notificacionesActivadas = notificacionesActivadas;\r\n\t}\r\n\r\n\tpublic String getTema() {\r\n\t\treturn tema;\r\n\t}\r\n\r\n\tpublic void setTema(String tema) {\r\n\t\tthis.tema = tema;\r\n\t}\r\n\r\n\tpublic String getFuente() {\r\n\t\treturn fuente;\r\n\t}\r\n\r\n\tpublic void setFuente(String fuente) {\r\n\t\tthis.fuente = fuente;\r\n\t}\r\n\r\n\tpublic boolean isNotificacionesActivadas() {\r\n\t\treturn notificacionesActivadas;\r\n\t}\r\n\r\n\tpublic void setNotificacionesActivadas(boolean notificacionesActivadas) {\r\n\t\tthis.notificacionesActivadas = notificacionesActivadas;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Configuracion clone() {\r\n\t\ttry {\r\n\t\t\treturn (Configuracion) super.clone();\r\n\t\t} catch (CloneNotSupportedException e) {\r\n\t\t\tthrow new AssertionError(\"No se pudo clonar Configuracion\");\r\n\t\t}\r\n\t}\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.Configuracion;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\r\n\tprivate VistaConsola vista;\r\n\r\n\tpublic Controller() {\r\n\t\tvista = new VistaConsola();\r\n\t}\r\n\r\n\tpublic void run() {\r\n\t\tConfiguracion configBase = new Configuracion(\"Oscuro\", \"Arial\", true);\r\n\t\tvista.mostrarInformacion(\"Configuración Base:\");\r\n\t\tvista.mostrarInformacion(\"Tema: \" + configBase.getTema());\r\n\t\tvista.mostrarInformacion(\"Fuente: \" + configBase.getFuente());\r\n\t\tvista.mostrarInformacion(\"Notificaciones: \" + (configBase.isNotificacionesActivadas() ? \"Activadas\" : \"Desactivadas\"));\r\n\r\n\t\tConfiguracion configUsuario1 = configBase.clone();\r\n\t\tconfigUsuario1.setTema(\"Claro\");\r\n\t\tconfigUsuario1.setFuente(\"Calibri\");\r\n\r\n\t\tvista.mostrarInformacion(\"\\nConfiguración Usuario 1 (Clon):\");\r\n\t\tvista.mostrarInformacion(\"Tema: \" + configUsuario1.getTema());\r\n\t\tvista.mostrarInformacion(\"Fuente: \" + configUsuario1.getFuente());\r\n\t\tvista.mostrarInformacion(\"Notificaciones: \" + (configUsuario1.isNotificacionesActivadas() ? \"Activadas\" : \"Desactivadas\"));\r\n\r\n\t\tConfiguracion configUsuario2 = configBase.clone();\r\n\t\tconfigUsuario2.setTema(\"Alto Contraste\");\r\n\t\tconfigUsuario2.setFuente(\"Verdana\");\r\n\t\tconfigUsuario2.setNotificacionesActivadas(false);\r\n\r\n\t\tvista.mostrarInformacion(\"\\nConfiguración Usuario 2 (Clon):\");\r\n\t\tvista.mostrarInformacion(\"Tema: \" + configUsuario2.getTema());\r\n\t\tvista.mostrarInformacion(\"Fuente: \" + configUsuario2.getFuente());\r\n\t\tvista.mostrarInformacion(\"Notificaciones: \" + (configUsuario2.isNotificacionesActivadas() ? \"Activadas\" : \"Desactivadas\"));\r\n\t}\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "RegistroDeEmpleados",
        "archivos": {
          "model": {
            "Empleado.java": "package co.edu.udistrital.model;\r\n\r\npublic class Empleado implements Cloneable {\r\n\r\n\tprivate String nombre;\r\n\tprivate String cargo;\r\n\tprivate String tipoContrato;\r\n\tprivate double salario;\r\n\r\n\tpublic Empleado(String nombre, String cargo, String tipoContrato, double salario) {\r\n\t\tthis.nombre = nombre;\r\n\t\tthis.cargo = cargo;\r\n\t\tthis.tipoContrato = tipoContrato;\r\n\t\tthis.salario = salario;\r\n\t}\r\n\r\n\tpublic String getNombre() {\r\n\t\treturn nombre;\r\n\t}\r\n\r\n\tpublic void setNombre(String nombre) {\r\n\t\tthis.nombre = nombre;\r\n\t}\r\n\r\n\tpublic String getCargo() {\r\n\t\treturn cargo;\r\n\t}\r\n\r\n\tpublic void setCargo(String cargo) {\r\n\t\tthis.cargo = cargo;\r\n\t}\r\n\r\n\tpublic String getTipoContrato() {\r\n\t\treturn tipoContrato;\r\n\t}\r\n\r\n\tpublic void setTipoContrato(String tipoContrato) {\r\n\t\tthis.tipoContrato = tipoContrato;\r\n\t}\r\n\r\n\tpublic double getSalario() {\r\n\t\treturn salario;\r\n\t}\r\n\r\n\tpublic void setSalario(double salario) {\r\n\t\tthis.salario = salario;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic Empleado clone() {\r\n\t\ttry {\r\n\t\t\treturn (Empleado) super.clone();\r\n\t\t} catch (CloneNotSupportedException e) {\r\n\t\t\tthrow new AssertionError(\"No se pudo clonar el empleado.\");\r\n\t\t}\r\n\t}\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic double leerDatoDecimal(String mensaje) {\r\n\t\tdouble dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextDouble();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t    System.out.print(mensaje);\r\n\t    if (sc.hasNextLine()) {\r\n\t        sc.nextLine();\r\n\t    }\r\n\t    dato = sc.nextLine();\r\n\t    return dato;\r\n\t}\r\n\r\n\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.Empleado;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\r\n\tprivate VistaConsola vista;\r\n\r\n\tpublic Controller() {\r\n\t\tvista = new VistaConsola();\r\n\t}\r\n\r\n\tpublic void run() {\r\n\t\tvista.mostrarInformacion(\"=== Registro de Empleados (Prototype) ===\");\r\n\r\n\t\tEmpleado empleadoBase = new Empleado(\"GENÉRICO\", \"Auxiliar\", \"Indefinido\", 1800000);\r\n\r\n\t\tint cantidad = 3;\r\n\t\tfor (int i = 1; i <= cantidad; i++) {\r\n\t\t\tvista.mostrarInformacion(\"\\n--- Registro del empleado #\" + i + \" ---\");\r\n\t\t\tString nombre = vista.leerTexto(\"Nombre del empleado: \");\r\n\t\t\tdouble salario = vista.leerDatoDecimal(\"Salario del empleado: \");\r\n\r\n\t\t\tEmpleado nuevo = empleadoBase.clone();\r\n\t\t\tnuevo.setNombre(nombre);\r\n\t\t\tnuevo.setSalario(salario);\r\n\r\n\t\t\tvista.mostrarInformacion(\"\\nEmpleado registrado:\");\r\n\t\t\tmostrarEmpleado(nuevo);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate void mostrarEmpleado(Empleado e) {\r\n\t\tvista.mostrarInformacion(\"Nombre: \" + e.getNombre());\r\n\t\tvista.mostrarInformacion(\"Cargo: \" + e.getCargo());\r\n\t\tvista.mostrarInformacion(\"Tipo de contrato: \" + e.getTipoContrato());\r\n\t\tvista.mostrarInformacion(\"Salario: $\" + e.getSalario());\r\n\t}\r\n}"
          }
        }
      }
    ]
  },
  "Proxy": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "AccesoADocumentoConfidencial",
        "archivos": {
          "model": {
            "Documento.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Documento {\r\n\tString mostrarContenido();\r\n}\r\n",
            "DocumentoProxy.java": "package co.edu.udistrital.model;\r\n\r\npublic class DocumentoProxy implements Documento {\r\n    private DocumentoReal documentoReal;\r\n    private String usuario;\r\n\r\n    public DocumentoProxy(String usuario) {\r\n        this.usuario = usuario;\r\n    }\r\n\r\n    @Override\r\n    public String mostrarContenido() {\r\n    \tif (usuario.equalsIgnoreCase(\"admin\") || usuario.equalsIgnoreCase(\"gerente\")) {\r\n            documentoReal = new DocumentoReal();\r\n            return documentoReal.mostrarContenido();\r\n        } else {\r\n            return \"❌ Acceso denegado: el usuario '\" + usuario + \"' no tiene permiso para ver el documento.\";\r\n        }\r\n    }\r\n}\r\n",
            "DocumentoReal.java": "package co.edu.udistrital.model;\r\n\r\npublic class DocumentoReal implements Documento {\r\n    private String contenido;\r\n\r\n    public DocumentoReal() {\r\n        this.contenido = \"Contenido confidencial: Proyecto secreto de inteligencia artificial.\";\r\n    }\r\n\r\n    @Override\r\n    public String mostrarContenido() {\r\n        return contenido;\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\r\n    private Scanner sc;\r\n\r\n    public VistaConsola() {\r\n        sc = new Scanner(System.in);\r\n    }\r\n\r\n    public void mostrarInformacion(String mensaje) {\r\n        System.out.println(mensaje);\r\n    }\r\n\r\n    public int leerDatoEntero(String mensaje) {\r\n        System.out.print(mensaje);\r\n        return sc.nextInt();\r\n    }\r\n\r\n    public double leerDatoDecimal(String mensaje) {\r\n        System.out.print(mensaje);\r\n        return sc.nextDouble();\r\n    }\r\n\r\n    public String leerTexto(String mensaje) {\r\n        System.out.print(mensaje);\r\n        if (sc.hasNextLine()) {\r\n            sc.nextLine();\r\n        }\r\n        return sc.nextLine();\r\n    }\r\n}"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\npublic class Controller {\r\n\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        vista.mostrarInformacion(\"=== SISTEMA DE ACCESO A DOCUMENTOS ===\");\r\n        vista.mostrarInformacion(\"1. Admin\");\r\n        vista.mostrarInformacion(\"2. Gerente\");\r\n        vista.mostrarInformacion(\"3. Estudiante\");\r\n\r\n        int opcion = vista.leerDatoEntero(\"Ingrese una opción (1-3): \");\r\n        String usuario;\r\n\r\n        switch (opcion) {\r\n            case 1:\r\n                usuario = \"admin\";\r\n                break;\r\n            case 2:\r\n                usuario = \"gerente\";\r\n                break;\r\n            case 3:\r\n                usuario = \"estudiante\";\r\n                break;\r\n            default:\r\n                vista.mostrarInformacion(\"❌ Opción inválida. Finalizando.\");\r\n                return;\r\n        }\r\n\r\n        Documento doc = new DocumentoProxy(usuario);\r\n        String resultado = doc.mostrarContenido();\r\n\r\n        vista.mostrarInformacion(\"\\nResultado para el usuario '\" + usuario + \"':\");\r\n        vista.mostrarInformacion(resultado);\r\n    }\r\n}"
          }
        }
      },
      {
        "nombre": "CargaImagenesPesadas",
        "archivos": {
          "model": {
            "Imagen.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Imagen {\r\n\tString mostrar();\r\n}\r\n",
            "ImagenProxy.java": "package co.edu.udistrital.model;\r\n\r\npublic class ImagenProxy implements Imagen {\r\n    private String nombre;\r\n    private ImagenReal imagenReal;\r\n\r\n    public ImagenProxy(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        if (imagenReal == null) {\r\n            imagenReal = new ImagenReal(nombre); // carga real\r\n        }\r\n        return imagenReal.mostrar();\r\n    }\r\n}\r\n\r\n",
            "ImagenReal.java": "package co.edu.udistrital.model;\r\n\r\npublic class ImagenReal implements Imagen {\r\n    private String nombre;\r\n\r\n    public ImagenReal(String nombre) {\r\n        this.nombre = nombre;\r\n        cargarDesdeDisco(nombre);\r\n    }\r\n\r\n    private void cargarDesdeDisco(String nombre) {\r\n        System.out.println(\"Cargando imagen real '\" + nombre + \"' desde el disco...\");\r\n        try {\r\n            Thread.sleep(1000);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"Imagen mostrada: \" + nombre + \" [alta resolución]\";\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarMensaje(String texto) {\r\n        System.out.println(\"[Galería de imágenes]\");\r\n        System.out.println(texto);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        // Creamos la imagen en proxy (no se carga aún)\r\n        Imagen imagen = new ImagenProxy(\"playa_hd.jpg\");\r\n\r\n        // Simula navegación sin abrir la imagen\r\n        vista.mostrarMensaje(\"Miniatura de 'playa_hd.jpg' visible (imagen aún no cargada)\");\r\n\r\n        // Ahora el usuario decide abrirla\r\n        String resultado = imagen.mostrar();\r\n        vista.mostrarMensaje(resultado);\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "TipoCambioDivisa",
        "archivos": {
          "model": {
            "ServicioCambio.java": "package co.edu.udistrital.model;\r\n\r\npublic interface ServicioCambio {\r\n\tdouble obtenerTasa(String monedaOrigen, String monedaDestino);\r\n}\r\n",
            "ServicioCambioProxy.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class ServicioCambioProxy implements ServicioCambio {\r\n    private ServicioCambioReal servicioReal;\r\n    private Map<String, Double> cache;\r\n\r\n    public ServicioCambioProxy() {\r\n        servicioReal = new ServicioCambioReal();\r\n        cache = new HashMap<>();\r\n    }\r\n\r\n    @Override\r\n    public double obtenerTasa(String monedaOrigen, String monedaDestino) {\r\n        String clave = monedaOrigen + \"-\" + monedaDestino;\r\n        if (cache.containsKey(clave)) {\r\n            System.out.println(\"Usando tasa en caché...\");\r\n            return cache.get(clave);\r\n        } else {\r\n            double tasa = servicioReal.obtenerTasa(monedaOrigen, monedaDestino);\r\n            cache.put(clave, tasa);\r\n            return tasa;\r\n        }\r\n    }\r\n}\r\n",
            "ServicioCambioReal.java": "package co.edu.udistrital.model;\r\n\r\npublic class ServicioCambioReal implements ServicioCambio{\r\n\t\r\n\t@Override\r\n    public double obtenerTasa(String monedaOrigen, String monedaDestino) {\r\n        // Simula acceso a un servicio externo lento\r\n        System.out.println(\"Consultando servidor externo para tasa...\");\r\n        try {\r\n            Thread.sleep(1500); // Simula latencia\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        // Se simulan tasas fijas\r\n        if (monedaOrigen.equals(\"USD\") && monedaDestino.equals(\"COP\")) {\r\n            return 4000.0;\r\n        } else if (monedaOrigen.equals(\"EUR\") && monedaDestino.equals(\"COP\")) {\r\n            return 4300.0;\r\n        }\r\n        return 1.0;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrarResultado(String resultado) {\r\n        System.out.println(\"[Consulta de Cambio de Divisas]\");\r\n        System.out.println(resultado);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        ServicioCambio servicio = new ServicioCambioProxy();\r\n\r\n        double tasa1 = servicio.obtenerTasa(\"USD\", \"COP\");\r\n        vista.mostrarResultado(\"1 USD = \" + tasa1 + \" COP\");\r\n\r\n        double tasa2 = servicio.obtenerTasa(\"EUR\", \"COP\");\r\n        vista.mostrarResultado(\"1 EUR = \" + tasa2 + \" COP\");\r\n\r\n        double tasa3 = servicio.obtenerTasa(\"USD\", \"COP\"); // Se usará caché\r\n        vista.mostrarResultado(\"1 USD (caché) = \" + tasa3 + \" COP\");\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Singleton": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "ControlDeAcceso",
        "archivos": {
          "model": {
            "AdministradorDeRecursos.java": "package co.edu.udistrital.model;\r\n\r\npublic class AdministradorDeRecursos {\r\n\t\r\n\tprivate static AdministradorDeRecursos instancia = null;\r\n\r\n    private boolean recursoEnUso;\r\n\r\n    private AdministradorDeRecursos() {\r\n        this.recursoEnUso = false;\r\n        System.out.println(\"🧩 ResourceManager inicializado.\");\r\n    }\r\n\r\n    public static AdministradorDeRecursos getInstancia() {\r\n        if (instancia == null) {\r\n            instancia = new AdministradorDeRecursos();\r\n        }\r\n        return instancia;\r\n    }\r\n\r\n    public boolean solicitarRecurso() {\r\n        if (recursoEnUso) {\r\n            System.out.println(\"❌ Recurso actualmente en uso. Espere a que se libere.\");\r\n            return false;\r\n        } else {\r\n            recursoEnUso = true;\r\n            System.out.println(\"✅ Acceso concedido al recurso.\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public void liberarRecurso() {\r\n        if (recursoEnUso) {\r\n            recursoEnUso = false;\r\n            System.out.println(\"🔓 Recurso liberado.\");\r\n        } else {\r\n            System.out.println(\"⚠️ El recurso ya está libre.\");\r\n        }\r\n    }\r\n\r\n    public void mostrarEstado() {\r\n        System.out.println(\"📄 Estado del recurso: \" + (recursoEnUso ? \"EN USO\" : \"LIBRE\"));\r\n    }\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\r\n}\r\n"
          },
          "controller": {
            "AplControlAcceso.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplControlAcceso {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.AdministradorDeRecursos;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\t\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void run() {\r\n    \tAdministradorDeRecursos gestor = AdministradorDeRecursos.getInstancia();\r\n        boolean continuar = true;\r\n\r\n        while (continuar) {\r\n            vista.mostrarInformacion(\"\\n=== GESTOR DE RECURSOS ===\");\r\n            gestor.mostrarEstado();\r\n\r\n            int opcion = vista.leerDatoEntero(\"\"\"\r\n                Opciones:\r\n                1. Solicitar recurso\r\n                2. Liberar recurso\r\n                0. Salir\r\n                -> Seleccione una opción: \"\"\");\r\n\r\n            switch (opcion) {\r\n                case 1:\r\n                    gestor.solicitarRecurso();\r\n                    break;\r\n                case 2:\r\n                    gestor.liberarRecurso();\r\n                    break;\r\n                case 0:\r\n                    continuar = false;\r\n                    break;\r\n                default:\r\n                    vista.mostrarInformacion(\"❌ Opción inválida.\");\r\n            }\r\n        }\r\n\r\n        vista.mostrarInformacion(\"Aplicación finalizada.\");\r\n    }\r\n\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "GestorBaseDeDatos",
        "archivos": {
          "model": {
            "ConexionBaseDeDatos.java": "package co.edu.udistrital.model;\r\n\r\npublic class ConexionBaseDeDatos {\r\n\t\r\n\tprivate static ConexionBaseDeDatos instancia = null;\r\n\r\n    private String connection;\r\n    private String usuario;\r\n    private String contrasena;\r\n    \r\n    private ConexionBaseDeDatos(String usuario, String contrasena) {\r\n        this.usuario = usuario;\r\n        this.contrasena = contrasena;\r\n        this.connection = \"Conexión simulada establecida para el usuario: \" + usuario;\r\n        System.out.println(\"🟢 \" + connection);\r\n    }\r\n\r\n\r\n    public static ConexionBaseDeDatos getInstancia(String usuario, String contrasena) {\r\n        if (instancia == null) {\r\n            instancia = new ConexionBaseDeDatos(usuario, contrasena);\r\n        } else if (instancia.usuario.equals(usuario)) {\r\n            System.out.println(\"❌ Error: El usuario '\" + usuario + \"' ya tiene una sesión activa.\");\r\n            return null;\r\n        } else {\r\n            System.out.println(\"⚠️ Ya existe una conexión activa con el usuario: \" + instancia.usuario+\"\\n\");\r\n        }\r\n        return instancia;\r\n    }\r\n    \r\n   \r\n\r\n    public String getConnectionInfo() {\r\n        return connection;\r\n    }\r\n\r\n    public String getUsuario() {\r\n        return usuario;\r\n    }\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\n\tprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\r\n\r\n}\r\n"
          },
          "controller": {
            "AplGestorBases.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplGestorBases {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.ConexionBaseDeDatos;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void run() {\r\n    \tboolean continuar = true;\r\n\r\n        while (continuar) {\r\n            vista.mostrarInformacion(\"=== Inicio de sesión ===\\n\");\r\n\r\n            String usuario = vista.leerTexto(\"Ingrese el usuario: \\n\");\r\n            String contrasena = vista.leerTexto(\"Ingrese la contraseña: \\n\");\r\n\r\n            ConexionBaseDeDatos conexion = ConexionBaseDeDatos.getInstancia(usuario, contrasena);\r\n\r\n            vista.mostrarInformacion(\"Usuario conectado: \" + conexion.getUsuario());\r\n            vista.mostrarInformacion(\"Estado: \" + conexion.getConnectionInfo()+\"\\n\");\r\n\r\n\r\n            int opcion = vista.leerDatoEntero(\"¿Desea iniciar sesión con otro usuario? (1 = Sí, 0 = No): \");\r\n            continuar = (opcion == 1);\r\n        }\r\n    }\r\n}"
          }
        }
      },
      {
        "nombre": "GestorConfiguracion",
        "archivos": {
          "model": {
            "ConfiguracionAplicacion.java": "package co.edu.udistrital.model;\r\n\r\npublic class ConfiguracionAplicacion {\r\n\t\r\n\tprivate static ConfiguracionAplicacion instancia = null;\r\n\r\n    private String idioma;\r\n    private String rutaBase;\r\n    private boolean modoDebug;\r\n\r\n\r\n    private ConfiguracionAplicacion() {\r\n        this.idioma = \"es\";\r\n        this.rutaBase = \"/default/path/\";\r\n        this.modoDebug = false;\r\n        System.out.println(\"AppConfig inicializado con valores por defecto.\");\r\n    }\r\n\r\n    public static ConfiguracionAplicacion getInstancia() {\r\n        if (instancia == null) {\r\n            instancia = new ConfiguracionAplicacion();\r\n        }\r\n        return instancia;\r\n    }\r\n    \r\n    public boolean configEsIgual(String idioma, String ruta, boolean debug) {\r\n        return this.idioma.equals(idioma) &&\r\n               this.rutaBase.equals(ruta) &&\r\n               this.modoDebug == debug;\r\n    }\r\n    \r\n    public boolean aplicarConfiguracion(String nuevoIdioma, String nuevaRuta, boolean nuevoDebug) {\r\n        if (configEsIgual(nuevoIdioma, nuevaRuta, nuevoDebug)) {\r\n            System.out.println(\"❌ Error: La configuración ingresada es idéntica a la actual. No se realizaron cambios.\");\r\n            return false;\r\n        }\r\n\r\n        this.idioma = nuevoIdioma;\r\n        this.rutaBase = nuevaRuta;\r\n        this.modoDebug = nuevoDebug;\r\n        System.out.println(\"✅ Configuración actualizada correctamente.\");\r\n        return true;\r\n    }\r\n\r\n    public String getIdioma() {\r\n        return idioma;\r\n    }\r\n\r\n    public void setIdioma(String idioma) {\r\n        this.idioma = idioma;\r\n    }\r\n\r\n    public String getRutaBase() {\r\n        return rutaBase;\r\n    }\r\n\r\n    public void setRutaBase(String rutaBase) {\r\n        this.rutaBase = rutaBase;\r\n    }\r\n\r\n    public boolean isModoDebug() {\r\n        return modoDebug;\r\n    }\r\n\r\n    public void setModoDebug(boolean modoDebug) {\r\n        this.modoDebug = modoDebug;\r\n    }\r\n\r\n    public void mostrarConfiguracion() {\r\n        System.out.println(\" Configuración actual:\");\r\n        System.out.println(\"Idioma: \" + idioma);\r\n        System.out.println(\"Ruta base: \" + rutaBase);\r\n        System.out.println(\"Modo Debug: \" + (modoDebug ? \"Activado\" : \"Desactivado\"));\r\n    }\r\n\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class VistaConsola {\r\n\t\r\nprivate Scanner sc;\r\n\t\r\n\tpublic VistaConsola() {\r\n\t\tsc = new Scanner(System.in);\r\n\t}\r\n\t\r\n\tpublic void mostrarInformacion(String mensaje) {\r\n\t\tSystem.out.println(mensaje);\r\n\t}\r\n\t\r\n\tpublic int leerDatoEntero(String mensaje) {\r\n\t\tint dato = 0;\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextInt();\r\n\t\treturn dato;\r\n\t}\r\n\t\r\n\tpublic String leerTexto(String mensaje) {\r\n\t\tString dato = \"\";\r\n\t\tSystem.out.print(mensaje);\r\n\t\tdato = sc.nextLine();\r\n\t\treturn dato;\r\n\t}\r\n\r\n\r\n}\r\n"
          },
          "controller": {
            "AplGestorConfiguracion.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplGestorConfiguracion {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tController control;\r\n\t\tcontrol = new Controller();\r\n\t\tcontrol.run();\r\n\r\n\t}\r\n\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.ConfiguracionAplicacion;\r\nimport co.edu.udistrital.view.VistaConsola;\r\n\r\npublic class Controller {\r\n\tprivate VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void run() {\r\n    \tConfiguracionAplicacion config = ConfiguracionAplicacion.getInstancia();\r\n        config.mostrarConfiguracion();\r\n\r\n        int opcion = vista.leerDatoEntero(\"¿Desea modificar la configuración? (1 = Sí, 0 = No): \");\r\n\r\n        if (opcion == 1) {\r\n            vista.leerTexto(\"\");\r\n            String nuevoIdioma = vista.leerTexto(\"Nuevo idioma (ej: es, en): \");\r\n            String nuevaRuta = vista.leerTexto(\"Nueva ruta base: \");\r\n            int debug = vista.leerDatoEntero(\"¿Activar modo debug? (1 = Sí, 0 = No): \");\r\n\r\n            boolean nuevoDebug = (debug == 1);\r\n\r\n            config.aplicarConfiguracion(nuevoIdioma, nuevaRuta, nuevoDebug);\r\n        }\r\n\r\n        config.mostrarConfiguracion();\r\n    }\r\n\r\n}\r\n"
          }
        }
      }
    ]
  },
  "State": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "MáquinaExpededora",
        "archivos": {
          "model": {
            "EstadoEntrega.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoEntrega implements EstadoMaquina {\r\n\r\n    @Override\r\n    public void seleccionarProducto(MaquinaExpendedora m) {\r\n        // ya se entregará el producto\r\n    }\r\n\r\n    @Override\r\n    public void pagar(MaquinaExpendedora m) {\r\n        // ya se pagó\r\n    }\r\n\r\n    @Override\r\n    public void entregar(MaquinaExpendedora m) {\r\n        m.setEstado(new EstadoSeleccion()); // vuelve al inicio\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"📦 Estado: Entregando producto...\";\r\n    }\r\n}\r\n\r\n",
            "EstadoMaquina.java": "package co.edu.udistrital.model;\r\n\r\npublic interface EstadoMaquina {\r\n    void seleccionarProducto(MaquinaExpendedora m);\r\n    void pagar(MaquinaExpendedora m);\r\n    void entregar(MaquinaExpendedora m);\r\n    String mostrar();\r\n}\r\n",
            "EstadoPago.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoPago implements EstadoMaquina {\r\n\r\n    @Override\r\n    public void seleccionarProducto(MaquinaExpendedora m) {\r\n        // ya se seleccionó\r\n    }\r\n\r\n    @Override\r\n    public void pagar(MaquinaExpendedora m) {\r\n        m.setEstado(new EstadoEntrega());\r\n    }\r\n\r\n    @Override\r\n    public void entregar(MaquinaExpendedora m) {\r\n        // no se puede entregar sin pagar\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"💳 Estado: Esperando pago\";\r\n    }\r\n}\r\n",
            "EstadoSeleccion.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoSeleccion implements EstadoMaquina {\r\n\r\n    @Override\r\n    public void seleccionarProducto(MaquinaExpendedora m) {\r\n        m.setEstado(new EstadoPago());\r\n    }\r\n\r\n    @Override\r\n    public void pagar(MaquinaExpendedora m) {\r\n        // no se puede pagar aún\r\n    }\r\n\r\n    @Override\r\n    public void entregar(MaquinaExpendedora m) {\r\n        // no se puede entregar aún\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"🔘 Estado: Selección de producto\";\r\n    }\r\n}\r\n",
            "MaquinaExpendedora.java": "package co.edu.udistrital.model;\r\n\r\npublic class MaquinaExpendedora {\r\n    private EstadoMaquina estado;\r\n\r\n    public MaquinaExpendedora() {\r\n        this.estado = new EstadoSeleccion();\r\n    }\r\n\r\n    public void seleccionar() {\r\n        estado.seleccionarProducto(this);\r\n    }\r\n\r\n    public void pagar() {\r\n        estado.pagar(this);\r\n    }\r\n\r\n    public void entregar() {\r\n        estado.entregar(this);\r\n    }\r\n\r\n    public void setEstado(EstadoMaquina nuevoEstado) {\r\n        this.estado = nuevoEstado;\r\n    }\r\n\r\n    public String mostrarEstado() {\r\n        return estado.mostrar();\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"----- Máquina Expendedora -----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        MaquinaExpendedora maquina = new MaquinaExpendedora();\r\n\r\n        vista.mostrar(maquina.mostrarEstado());\r\n\r\n        maquina.seleccionar();\r\n        vista.mostrar(maquina.mostrarEstado());\r\n\r\n        maquina.pagar();\r\n        vista.mostrar(maquina.mostrarEstado());\r\n\r\n        maquina.entregar();\r\n        vista.mostrar(maquina.mostrarEstado());\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "SemáforoInteligente",
        "archivos": {
          "model": {
            "EstadoAmarillo.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoAmarillo implements EstadoSemaforo {\r\n\r\n    @Override\r\n    public void siguiente(Semaforo s) {\r\n        s.setEstado(new EstadoRojo());\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"🟡 Semáforo en AMARILLO - Precaución.\";\r\n    }\r\n}\r\n",
            "EstadoRojo.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoRojo implements EstadoSemaforo {\r\n\r\n    @Override\r\n    public void siguiente(Semaforo s) {\r\n        s.setEstado(new EstadoVerde());\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"🔴 Semáforo en ROJO - Detenerse.\";\r\n    }\r\n}\r\n",
            "EstadoSemaforo.java": "package co.edu.udistrital.model;\r\n\r\npublic interface EstadoSemaforo {\r\n    void siguiente(Semaforo s);\r\n    String mostrar();\r\n}\r\n",
            "EstadoVerde.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoVerde implements EstadoSemaforo {\r\n\r\n    @Override\r\n    public void siguiente(Semaforo s) {\r\n        s.setEstado(new EstadoAmarillo());\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"🟢 Semáforo en VERDE - Avanzar.\";\r\n    }\r\n}\r\n",
            "Semaforo.java": "package co.edu.udistrital.model;\r\n\r\npublic class Semaforo {\r\n    private EstadoSemaforo estado;\r\n\r\n    public Semaforo() {\r\n        estado = new EstadoRojo();\r\n    }\r\n\r\n    public void cambiar() {\r\n        estado.siguiente(this);\r\n    }\r\n\r\n    public String mostrarEstado() {\r\n        return estado.mostrar();\r\n    }\r\n\r\n    public void setEstado(EstadoSemaforo nuevoEstado) {\r\n        this.estado = nuevoEstado;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"---- Semáforo Inteligente ----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        Semaforo semaforo = new Semaforo();\r\n\r\n        for (int i = 0; i < 6; i++) {\r\n            vista.mostrar(semaforo.mostrarEstado());\r\n            semaforo.cambiar();\r\n\r\n            try {\r\n                Thread.sleep(1000); // simulación del tiempo entre cambios\r\n            } catch (InterruptedException e) {\r\n                Thread.currentThread().interrupt();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "SolicitudPréstamo",
        "archivos": {
          "model": {
            "EstadoAprobado.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoAprobado implements EstadoSolicitud {\r\n\r\n    @Override\r\n    public void avanzar(SolicitudPrestamo s) {\r\n        // No hay avance desde aquí\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"✅ Estado: Aprobado - Su préstamo ha sido aprobado.\";\r\n    }\r\n}\r\n",
            "EstadoEvaluacion.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoEvaluacion implements EstadoSolicitud {\r\n\r\n    @Override\r\n    public void avanzar(SolicitudPrestamo s) {\r\n        // Simulación simple: si nombre contiene \"a\", se aprueba; si no, se rechaza\r\n        boolean aprobacion = Math.random() < 0.5;\r\n        if (aprobacion) {\r\n            s.setEstado(new EstadoAprobado());\r\n        } else {\r\n            s.setEstado(new EstadoRechazado());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"🔍 Estado: En evaluación - Analizando condiciones del préstamo.\";\r\n    }\r\n}\r\n",
            "EstadoRechazado.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoRechazado implements EstadoSolicitud {\r\n\r\n    @Override\r\n    public void avanzar(SolicitudPrestamo s) {\r\n        // No hay avance desde aquí\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"❌ Estado: Rechazado - Su préstamo ha sido denegado.\";\r\n    }\r\n}\r\n",
            "EstadoRegistrado.java": "package co.edu.udistrital.model;\r\n\r\npublic class EstadoRegistrado implements EstadoSolicitud {\r\n\r\n    @Override\r\n    public void avanzar(SolicitudPrestamo s) {\r\n        s.setEstado(new EstadoEvaluacion());\r\n    }\r\n\r\n    @Override\r\n    public String mostrar() {\r\n        return \"📄 Estado: Registrado - Solicitud recibida.\";\r\n    }\r\n}\r\n\r\n",
            "EstadoSolicitud.java": "package co.edu.udistrital.model;\r\n\r\npublic interface EstadoSolicitud {\r\n    void avanzar(SolicitudPrestamo s);\r\n    String mostrar();\r\n}\r\n\r\n",
            "SolicitudPrestamo.java": "package co.edu.udistrital.model;\r\n\r\npublic class SolicitudPrestamo {\r\n    private EstadoSolicitud estado;\r\n\r\n    public SolicitudPrestamo() {\r\n        this.estado = new EstadoRegistrado(); // estado inicial\r\n    }\r\n\r\n    public void avanzar() {\r\n        estado.avanzar(this);\r\n    }\r\n\r\n    public String mostrarEstado() {\r\n        return estado.mostrar();\r\n    }\r\n\r\n    public void setEstado(EstadoSolicitud nuevoEstado) {\r\n        this.estado = nuevoEstado;\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"----- Sistema de Solicitudes -----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        SolicitudPrestamo solicitud = new SolicitudPrestamo();\r\n\r\n        vista.mostrar(solicitud.mostrarEstado());\r\n\r\n        solicitud.avanzar();\r\n        vista.mostrar(solicitud.mostrarEstado());\r\n\r\n        solicitud.avanzar(); // Aprobado o Rechazado\r\n        vista.mostrar(solicitud.mostrarEstado());\r\n\r\n        // Intento de avanzar desde estado final (no hace nada)\r\n        solicitud.avanzar();\r\n        vista.mostrar(solicitud.mostrarEstado());\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  },
  "Strategy": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "CalculadorImpuestosConEstrategiasTributarias",
        "archivos": {
          "model": {
            "CalculadoraImpuestos.java": "package co.edu.udistrital.model;\r\n\r\npublic class CalculadoraImpuestos {\r\n    private EstrategiaImpuesto estrategia;\r\n\r\n    public void setEstrategia(EstrategiaImpuesto estrategia) {\r\n        this.estrategia = estrategia;\r\n    }\r\n\r\n    public double calcularImpuesto(double ingreso) {\r\n        if (estrategia == null) {\r\n            throw new IllegalStateException(\"No se ha asignado una estrategia.\");\r\n        }\r\n        return estrategia.calcular(ingreso);\r\n    }\r\n}\r\n",
            "Emprendedor.java": "package co.edu.udistrital.model;\r\n\r\npublic class Emprendedor implements EstrategiaImpuesto {\r\n    @Override\r\n    public double calcular(double ingreso) {\r\n        if (ingreso < 20000) {\r\n            return ingreso * 0.10;\r\n        } else {\r\n            return ingreso * 0.20;\r\n        }\r\n    }\r\n}\r\n\r\n",
            "EstrategiaImpuesto.java": "package co.edu.udistrital.model;\r\n\r\npublic interface EstrategiaImpuesto {\r\n\tdouble calcular(double ingreso);\r\n}\r\n",
            "PersonaJuridica.java": "package co.edu.udistrital.model;\r\n\r\npublic class PersonaJuridica implements EstrategiaImpuesto {\r\n    @Override\r\n    public double calcular(double ingreso) {\r\n        return ingreso * 0.30 + 1000; // impuesto base\r\n    }\r\n}\r\n\r\n",
            "PersonaNatural.java": "package co.edu.udistrital.model;\r\n\r\npublic class PersonaNatural implements EstrategiaImpuesto {\r\n    @Override\r\n    public double calcular(double ingreso) {\r\n        return ingreso * 0.15;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"---- Calculadora Tributaria -----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        CalculadoraImpuestos calculadora = new CalculadoraImpuestos();\r\n        double ingreso = 25000;\r\n\r\n        calculadora.setEstrategia(new PersonaNatural());\r\n        vista.mostrar(\"Persona Natural (ingreso \" + ingreso + \"): $\" + calculadora.calcularImpuesto(ingreso));\r\n\r\n        calculadora.setEstrategia(new PersonaJuridica());\r\n        vista.mostrar(\"Persona Jurídica (ingreso \" + ingreso + \"): $\" + calculadora.calcularImpuesto(ingreso));\r\n\r\n        calculadora.setEstrategia(new Emprendedor());\r\n        vista.mostrar(\"Emprendedor (ingreso \" + ingreso + \"): $\" + calculadora.calcularImpuesto(ingreso));\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "EncriptaciónDeMensajes",
        "archivos": {
          "model": {
            "Cesar.java": "package co.edu.udistrital.model;\r\n\r\npublic class Cesar implements EstrategiaEncriptacion {\r\n    private int desplazamiento;\r\n\r\n    public Cesar(int desplazamiento) {\r\n        this.desplazamiento = desplazamiento;\r\n    }\r\n\r\n    @Override\r\n    public String encriptar(String mensaje) {\r\n        StringBuilder resultado = new StringBuilder();\r\n\r\n        for (char c : mensaje.toCharArray()) {\r\n            if (Character.isLetter(c)) {\r\n                char base = Character.isUpperCase(c) ? 'A' : 'a';\r\n                char cifrado = (char) ((c - base + desplazamiento) % 26 + base);\r\n                resultado.append(cifrado);\r\n            } else {\r\n                resultado.append(c);\r\n            }\r\n        }\r\n\r\n        return resultado.toString();\r\n    }\r\n}\r\n\r\n",
            "Encriptador.java": "package co.edu.udistrital.model;\r\n\r\npublic class Encriptador {\r\n    private EstrategiaEncriptacion estrategia;\r\n\r\n    public void setEstrategia(EstrategiaEncriptacion estrategia) {\r\n        this.estrategia = estrategia;\r\n    }\r\n\r\n    public String encriptarMensaje(String mensaje) {\r\n        if (estrategia == null) {\r\n            throw new IllegalStateException(\"No se ha definido estrategia.\");\r\n        }\r\n        return estrategia.encriptar(mensaje);\r\n    }\r\n}\r\n",
            "EstrategiaEncriptacion.java": "package co.edu.udistrital.model;\r\n\r\npublic interface EstrategiaEncriptacion {\r\n    String encriptar(String mensaje);\r\n}\r\n",
            "Reversa.java": "package co.edu.udistrital.model;\r\n\r\npublic class Reversa implements EstrategiaEncriptacion {\r\n\r\n    @Override\r\n    public String encriptar(String mensaje) {\r\n        return new StringBuilder(mensaje).reverse().toString();\r\n    }\r\n}\r\n",
            "SustitucionVocales.java": "package co.edu.udistrital.model;\r\n\r\npublic class SustitucionVocales implements EstrategiaEncriptacion {\r\n\r\n    @Override\r\n    public String encriptar(String mensaje) {\r\n        return mensaje.replaceAll(\"[aeiouAEIOU]\", \"*\");\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"---- Encriptador de Mensajes ----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        String mensaje = \"Hola Mundo\";\r\n        Encriptador encriptador = new Encriptador();\r\n\r\n        encriptador.setEstrategia(new Reversa());\r\n        vista.mostrar(\"🔁 Reversa: \" + encriptador.encriptarMensaje(mensaje));\r\n\r\n        encriptador.setEstrategia(new Cesar(3));\r\n        vista.mostrar(\"🔐 César (3): \" + encriptador.encriptarMensaje(mensaje));\r\n\r\n        encriptador.setEstrategia(new SustitucionVocales());\r\n        vista.mostrar(\"🅰️ Sustitución de vocales: \" + encriptador.encriptarMensaje(mensaje));\r\n    }\r\n}\r\n\r\n"
          }
        }
      },
      {
        "nombre": "RecomendaciónDePeliculas",
        "archivos": {
          "model": {
            "EstrategiaRecomendacion.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic interface EstrategiaRecomendacion {\r\n    List<Pelicula> recomendar(List<Pelicula> catalogo);\r\n}\r\n",
            "Pelicula.java": "package co.edu.udistrital.model;\r\n\r\npublic class Pelicula {\r\n    private String titulo;\r\n    private String genero;\r\n    private double calificacion;\r\n    private int popularidad;\r\n\r\n    public Pelicula(String titulo, String genero, double calificacion, int popularidad) {\r\n        this.titulo = titulo;\r\n        this.genero = genero;\r\n        this.calificacion = calificacion;\r\n        this.popularidad = popularidad;\r\n    }\r\n\r\n    public String getTitulo() {\r\n        return titulo;\r\n    }\r\n\r\n    public String getGenero() {\r\n        return genero;\r\n    }\r\n\r\n    public double getCalificacion() {\r\n        return calificacion;\r\n    }\r\n\r\n    public int getPopularidad() {\r\n        return popularidad;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return titulo + \" (\" + genero + \", ⭐ \" + calificacion + \", 🔥 \" + popularidad + \")\";\r\n    }\r\n}\r\n\r\n",
            "PorCalificacion.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class PorCalificacion implements EstrategiaRecomendacion {\r\n\r\n    @Override\r\n    public List<Pelicula> recomendar(List<Pelicula> catalogo) {\r\n        return catalogo.stream()\r\n                .sorted(Comparator.comparingDouble(Pelicula::getCalificacion).reversed())\r\n                .limit(3)\r\n                .collect(Collectors.toList());\r\n    }\r\n}\r\n",
            "PorGenero.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class PorGenero implements EstrategiaRecomendacion {\r\n    private String generoDeseado;\r\n\r\n    public PorGenero(String generoDeseado) {\r\n        this.generoDeseado = generoDeseado;\r\n    }\r\n\r\n    @Override\r\n    public List<Pelicula> recomendar(List<Pelicula> catalogo) {\r\n        return catalogo.stream()\r\n                .filter(p -> p.getGenero().equalsIgnoreCase(generoDeseado))\r\n                .collect(Collectors.toList());\r\n    }\r\n}\r\n\r\n",
            "PorPopularidad.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.Comparator;\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class PorPopularidad implements EstrategiaRecomendacion {\r\n\r\n    @Override\r\n    public List<Pelicula> recomendar(List<Pelicula> catalogo) {\r\n        return catalogo.stream()\r\n                .sorted(Comparator.comparingInt(Pelicula::getPopularidad).reversed())\r\n                .limit(3)\r\n                .collect(Collectors.toList());\r\n    }\r\n}\r\n",
            "Recomendador.java": "package co.edu.udistrital.model;\r\n\r\nimport java.util.List;\r\n\r\npublic class Recomendador {\r\n    private EstrategiaRecomendacion estrategia;\r\n\r\n    public void setEstrategia(EstrategiaRecomendacion estrategia) {\r\n        this.estrategia = estrategia;\r\n    }\r\n\r\n    public List<Pelicula> recomendar(List<Pelicula> catalogo) {\r\n        if (estrategia == null) {\r\n            throw new IllegalStateException(\"No se ha asignado una estrategia.\");\r\n        }\r\n        return estrategia.recomendar(catalogo);\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport java.util.List;\r\n\r\npublic class VistaConsola {\r\n    public void mostrar(String mensaje) {\r\n        System.out.println(\"\\n[Recomendador de Películas]\");\r\n        System.out.println(mensaje);\r\n    }\r\n\r\n    public void mostrarPeliculas(List<Pelicula> peliculas) {\r\n        for (Pelicula p : peliculas) {\r\n            System.out.println(\"- \" + p);\r\n        }\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        List<Pelicula> catalogo = new ArrayList<>();\r\n        catalogo.add(new Pelicula(\"Inception\", \"Ciencia Ficción\", 9.0, 95));\r\n        catalogo.add(new Pelicula(\"Titanic\", \"Romance\", 8.5, 80));\r\n        catalogo.add(new Pelicula(\"Avengers\", \"Acción\", 8.8, 100));\r\n        catalogo.add(new Pelicula(\"Interstellar\", \"Ciencia Ficción\", 9.3, 88));\r\n        catalogo.add(new Pelicula(\"Amélie\", \"Comedia\", 8.4, 75));\r\n\r\n        Recomendador recomendador = new Recomendador();\r\n\r\n        recomendador.setEstrategia(new PorGenero(\"Ciencia Ficción\"));\r\n        vista.mostrar(\"🎬 Recomendación por género: Ciencia Ficción\");\r\n        vista.mostrarPeliculas(recomendador.recomendar(catalogo));\r\n\r\n        recomendador.setEstrategia(new PorCalificacion());\r\n        vista.mostrar(\"⭐ Recomendación por calificación:\");\r\n        vista.mostrarPeliculas(recomendador.recomendar(catalogo));\r\n\r\n        recomendador.setEstrategia(new PorPopularidad());\r\n        vista.mostrar(\"🔥 Recomendación por popularidad:\");\r\n        vista.mostrarPeliculas(recomendador.recomendar(catalogo));\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "TemplateMethod": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "PreparaciónBebidasCafeteria",
        "archivos": {
          "model": {
            "Cafe.java": "package co.edu.udistrital.model;\r\n\r\npublic class Cafe extends PreparadorBebida {\r\n\r\n    @Override\r\n    protected String prepararIngrediente() {\r\n        return \"☕ Preparar café molido\";\r\n    }\r\n\r\n    @Override\r\n    protected String agregarComplementos() {\r\n        return \"🧂 Agregar azúcar y leche\";\r\n    }\r\n}\r\n",
            "Chocolate.java": "package co.edu.udistrital.model;\r\n\r\npublic class Chocolate extends PreparadorBebida {\r\n\r\n    @Override\r\n    protected String prepararIngrediente() {\r\n        return \"🍫 Derretir el chocolate en polvo\";\r\n    }\r\n\r\n    @Override\r\n    protected String agregarComplementos() {\r\n        return \"🍬 Agregar crema batida\";\r\n    }\r\n}\r\n",
            "PreparadorBebida.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class PreparadorBebida {\r\n    public final String preparar() {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(hervirAgua()).append(\"\\n\");\r\n        sb.append(prepararIngrediente()).append(\"\\n\");\r\n        sb.append(verterEnTaza()).append(\"\\n\");\r\n        sb.append(agregarComplementos());\r\n        return sb.toString();\r\n    }\r\n\r\n    protected String hervirAgua() {\r\n        return \"💧 Hervir agua\";\r\n    }\r\n\r\n    protected String verterEnTaza() {\r\n        return \"☕ Verter en la taza\";\r\n    }\r\n\r\n    protected abstract String prepararIngrediente();\r\n    protected abstract String agregarComplementos();\r\n}\r\n",
            "Te.java": "package co.edu.udistrital.model;\r\n\r\npublic class Te extends PreparadorBebida {\r\n\r\n    @Override\r\n    protected String prepararIngrediente() {\r\n        return \"🍃 Infusionar la bolsa de té\";\r\n    }\r\n\r\n    @Override\r\n    protected String agregarComplementos() {\r\n        return \"🍯 Agregar miel y limón\";\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"----- Preparación de Bebida ----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        PreparadorBebida bebida;\r\n\r\n        bebida = new Cafe();\r\n        vista.mostrar(\"☕ Café:\\n\" + bebida.preparar());\r\n\r\n        bebida = new Te();\r\n        vista.mostrar(\"\\n🍵 Té:\\n\" + bebida.preparar());\r\n\r\n        bebida = new Chocolate();\r\n        vista.mostrar(\"\\n🍫 Chocolate:\\n\" + bebida.preparar());\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "ProcesoRegistroAEventos",
        "archivos": {
          "model": {
            "RegistroConferencia.java": "package co.edu.udistrital.model;\r\n\r\npublic class RegistroConferencia extends RegistroEvento {\r\n\r\n    @Override\r\n    protected boolean validar(String usuario) {\r\n        return usuario != null && usuario.length() > 3;\r\n    }\r\n\r\n    @Override\r\n    protected String notificar(String usuario, String codigo) {\r\n        return \"📢 Estimado \" + usuario + \", estás inscrito a la conferencia. Código: \" + codigo;\r\n    }\r\n}\r\n\r\n",
            "RegistroEvento.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class RegistroEvento {\r\n    public final String registrar(String usuario) {\r\n        if (!validar(usuario)) {\r\n            return \"❌ Registro denegado para: \" + usuario;\r\n        }\r\n        String codigo = generarCodigo();\r\n        return notificar(usuario, codigo);\r\n    }\r\n\r\n    protected abstract boolean validar(String usuario);\r\n    protected String generarCodigo() {\r\n        return \"EVT\" + (int)(Math.random() * 10000);\r\n    }\r\n    protected String notificar(String usuario, String codigo) {\r\n        return \"✅ Registro exitoso para \" + usuario + \". Código: \" + codigo;\r\n    }\r\n}\r\n",
            "RegistroTaller.java": "package co.edu.udistrital.model;\r\n\r\npublic class RegistroTaller extends RegistroEvento {\r\n\r\n    @Override\r\n    protected boolean validar(String usuario) {\r\n        return usuario != null && !usuario.isBlank();\r\n    }\r\n\r\n    @Override\r\n    protected String generarCodigo() {\r\n        return \"TLR-\" + System.currentTimeMillis();\r\n    }\r\n}\r\n",
            "RegistroWebinar.java": "package co.edu.udistrital.model;\r\n\r\npublic class RegistroWebinar extends RegistroEvento {\r\n\r\n    @Override\r\n    protected boolean validar(String usuario) {\r\n        return usuario != null && usuario.contains(\"@\");\r\n    }\r\n\r\n    @Override\r\n    protected String notificar(String usuario, String codigo) {\r\n        return \"📧 Se ha enviado un enlace de acceso al correo \" + usuario + \". Código: \" + codigo;\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"---- Sistema de Registro ----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        RegistroEvento conferencia = new RegistroConferencia();\r\n        RegistroEvento taller = new RegistroTaller();\r\n        RegistroEvento webinar = new RegistroWebinar();\r\n\r\n        vista.mostrar(conferencia.registrar(\"Carlos\"));\r\n        vista.mostrar(taller.registrar(\"Ana\"));\r\n        vista.mostrar(webinar.registrar(\"ana@email.com\"));\r\n        vista.mostrar(webinar.registrar(\"usuario_sin_correo\"));\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "PublicaciónContenidoEnRedes",
        "archivos": {
          "model": {
            "PublicadorInstagram.java": "package co.edu.udistrital.model;\r\n\r\npublic class PublicadorInstagram extends PublicadorRedSocial {\r\n\r\n    @Override\r\n    protected String crearContenido() {\r\n        return \"📸 Imagen con filtro #Naturaleza\";\r\n    }\r\n\r\n    @Override\r\n    protected String notificar(String usuario) {\r\n        return \"📱 Notificación vía app Instagram para \" + usuario;\r\n    }\r\n}\r\n",
            "PublicadorLinkedIn.java": "package co.edu.udistrital.model;\r\n\r\npublic class PublicadorLinkedIn extends PublicadorRedSocial {\r\n\r\n    @Override\r\n    protected boolean autenticar(String usuario) {\r\n        return usuario != null && usuario.endsWith(\"@empresa.com\");\r\n    }\r\n\r\n    @Override\r\n    protected String crearContenido() {\r\n        return \"💼 Publicación profesional: \\\"5 claves para mejorar tu perfil\\\"\";\r\n    }\r\n\r\n    @Override\r\n    protected String subirContenido(String contenido) {\r\n        return \"🔗 Contenido corporativo subido: \" + contenido;\r\n    }\r\n}\r\n\r\n",
            "PublicadorRedSocial.java": "package co.edu.udistrital.model;\r\n\r\npublic abstract class PublicadorRedSocial {\r\n\r\n    public final String publicar(String usuario) {\r\n        if (!autenticar(usuario)) {\r\n            return \"❌ Falló la autenticación para \" + usuario;\r\n        }\r\n        String contenido = crearContenido();\r\n        String resultado = subirContenido(contenido);\r\n        return resultado + \"\\n\" + notificar(usuario);\r\n    }\r\n\r\n    protected boolean autenticar(String usuario) {\r\n        return usuario != null && !usuario.isBlank();\r\n    }\r\n\r\n    protected abstract String crearContenido();\r\n\r\n    protected String subirContenido(String contenido) {\r\n        return \"📤 Contenido subido: \" + contenido;\r\n    }\r\n\r\n    protected String notificar(String usuario) {\r\n        return \"📩 Notificación enviada a \" + usuario;\r\n    }\r\n}\r\n",
            "PublicadorTwitter.java": "package co.edu.udistrital.model;\r\n\r\npublic class PublicadorTwitter extends PublicadorRedSocial {\r\n\r\n    @Override\r\n    protected String crearContenido() {\r\n        return \"📝 Tweet: \\\"¡Hola mundo en 280 caracteres!\\\"\";\r\n    }\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(\"---- Publicador de Contenido ----\");\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        PublicadorRedSocial publicador;\r\n\r\n        publicador = new PublicadorInstagram();\r\n        vista.mostrar(\"Instagram:\\n\" + publicador.publicar(\"luisa123\"));\r\n\r\n        publicador = new PublicadorTwitter();\r\n        vista.mostrar(\"\\nTwitter:\\n\" + publicador.publicar(\"andres_dev\"));\r\n\r\n        publicador = new PublicadorLinkedIn();\r\n        vista.mostrar(\"\\nLinkedIn válido:\\n\" + publicador.publicar(\"juan@empresa.com\"));\r\n        vista.mostrar(\"\\nLinkedIn inválido:\\n\" + publicador.publicar(\"invitado@gmail.com\"));\r\n    }\r\n}\r\n"
          }
        }
      }
    ]
  },
  "Visitor": {
    "descripcion": "",
    "ejemplos": [
      {
        "nombre": "EvaluaciónFormasGeometricas",
        "archivos": {
          "model": {
            "Circulo.java": "package co.edu.udistrital.model;\r\n\r\npublic class Circulo implements Figura {\r\n    private double radio;\r\n\r\n    public Circulo(double radio) {\r\n        this.radio = radio;\r\n    }\r\n\r\n    public double getRadio() {\r\n        return radio;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorFigura visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n",
            "Figura.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Figura {\r\n    String aceptar(VisitorFigura visitor);\r\n}\r\n",
            "Rectangulo.java": "package co.edu.udistrital.model;\r\n\r\npublic class Rectangulo implements Figura {\r\n    private double base, altura;\r\n\r\n    public Rectangulo(double base, double altura) {\r\n        this.base = base;\r\n        this.altura = altura;\r\n    }\r\n\r\n    public double getBase() {\r\n        return base;\r\n    }\r\n\r\n    public double getAltura() {\r\n        return altura;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorFigura visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n",
            "Triangulo.java": "package co.edu.udistrital.model;\r\n\r\npublic class Triangulo implements Figura {\r\n    private double base, altura;\r\n\r\n    public Triangulo(double base, double altura) {\r\n        this.base = base;\r\n        this.altura = altura;\r\n    }\r\n\r\n    public double getBase() {\r\n        return base;\r\n    }\r\n\r\n    public double getAltura() {\r\n        return altura;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorFigura visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n\r\n",
            "VisitorArea.java": "package co.edu.udistrital.model;\r\n\r\npublic class VisitorArea implements VisitorFigura {\r\n\r\n    @Override\r\n    public String visitar(Circulo c) {\r\n        double area = Math.PI * Math.pow(c.getRadio(), 2);\r\n        return \"Área del círculo: \" + String.format(\"%.2f\", area);\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Rectangulo r) {\r\n        double area = r.getBase() * r.getAltura();\r\n        return \"Área del rectángulo: \" + area;\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Triangulo t) {\r\n        double area = (t.getBase() * t.getAltura()) / 2;\r\n        return \"Área del triángulo: \" + area;\r\n    }\r\n}\r\n",
            "VisitorDescripcion.java": "package co.edu.udistrital.model;\r\n\r\npublic class VisitorDescripcion implements VisitorFigura {\r\n\r\n    @Override\r\n    public String visitar(Circulo c) {\r\n        return \"🔵 Círculo de radio \" + c.getRadio();\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Rectangulo r) {\r\n        return \"⬛ Rectángulo de \" + r.getBase() + \" x \" + r.getAltura();\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Triangulo t) {\r\n        return \"🔺 Triángulo de base \" + t.getBase() + \" y altura \" + t.getAltura();\r\n    }\r\n}\r\n",
            "VisitorFigura.java": "package co.edu.udistrital.model;\r\n\r\npublic interface VisitorFigura {\r\n    String visitar(Circulo c);\r\n    String visitar(Rectangulo r);\r\n    String visitar(Triangulo t);\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        List<Figura> figuras = new ArrayList<>();\r\n        figuras.add(new Circulo(3));\r\n        figuras.add(new Rectangulo(4, 5));\r\n        figuras.add(new Triangulo(6, 2));\r\n\r\n        VisitorFigura visitanteArea = new VisitorArea();\r\n        VisitorFigura visitanteDescripcion = new VisitorDescripcion();\r\n\r\n        vista.mostrar(\"📐 Descripciones:\");\r\n        for (Figura f : figuras) {\r\n            vista.mostrar(f.aceptar(visitanteDescripcion));\r\n        }\r\n\r\n        vista.mostrar(\"\\n📏 Áreas:\");\r\n        for (Figura f : figuras) {\r\n            vista.mostrar(f.aceptar(visitanteArea));\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "InspecciónDeVehículos",
        "archivos": {
          "model": {
            "Bus.java": "package co.edu.udistrital.model;\r\n\r\npublic class Bus implements Vehiculo {\r\n    private int capacidadPasajeros;\r\n\r\n    public Bus(int capacidadPasajeros) {\r\n        this.capacidadPasajeros = capacidadPasajeros;\r\n    }\r\n\r\n    public int getCapacidadPasajeros() {\r\n        return capacidadPasajeros;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorVehiculo visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n",
            "Camion.java": "package co.edu.udistrital.model;\r\n\r\npublic class Camion implements Vehiculo {\r\n    private double toneladas;\r\n\r\n    public Camion(double toneladas) {\r\n        this.toneladas = toneladas;\r\n    }\r\n\r\n    public double getToneladas() {\r\n        return toneladas;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorVehiculo visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n\r\n",
            "Carro.java": "package co.edu.udistrital.model;\r\n\r\npublic class Carro implements Vehiculo {\r\n    private String modelo;\r\n    private int anio;\r\n\r\n    public Carro(String modelo, int anio) {\r\n        this.modelo = modelo;\r\n        this.anio = anio;\r\n    }\r\n\r\n    public String getModelo() {\r\n        return modelo;\r\n    }\r\n\r\n    public int getAnio() {\r\n        return anio;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorVehiculo visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n",
            "Vehiculo.java": "package co.edu.udistrital.model;\r\n\r\npublic interface Vehiculo {\r\n\tString aceptar(VisitorVehiculo visitor);\r\n}\r\n",
            "VisitorImpuesto.java": "package co.edu.udistrital.model;\r\n\r\npublic class VisitorImpuesto implements VisitorVehiculo {\r\n\r\n    @Override\r\n    public String visitar(Carro c) {\r\n        double impuesto = c.getAnio() < 2015 ? 500 : 800;\r\n        return \"🚗 Impuesto para carro modelo \" + c.getModelo() + \": $\" + impuesto;\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Bus b) {\r\n        double impuesto = 20 * b.getCapacidadPasajeros();\r\n        return \"🚌 Impuesto para bus con \" + b.getCapacidadPasajeros() + \" pasajeros: $\" + impuesto;\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Camion c) {\r\n        double impuesto = c.getToneladas() * 100;\r\n        return \"🚚 Impuesto para camión de \" + c.getToneladas() + \" toneladas: $\" + impuesto;\r\n    }\r\n}\r\n\r\n",
            "VisitorInspeccion.java": "package co.edu.udistrital.model;\r\n\r\npublic class VisitorInspeccion implements VisitorVehiculo {\r\n\r\n    @Override\r\n    public String visitar(Carro c) {\r\n        return \"🔍 Inspección del carro: Revisar frenos y motor (\" + c.getModelo() + \")\";\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Bus b) {\r\n        return \"🔍 Inspección del bus: Verificar luces y extintores\";\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Camion c) {\r\n        return \"🔍 Inspección del camión: Revisar presión de neumáticos y carga\";\r\n    }\r\n}\r\n\r\n",
            "VisitorVehiculo.java": "package co.edu.udistrital.model;\r\n\r\npublic interface VisitorVehiculo {\r\n    String visitar(Carro c);\r\n    String visitar(Bus b);\r\n    String visitar(Camion c);\r\n}\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.model.*;\r\nimport co.edu.udistrital.view.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        List<Vehiculo> vehiculos = new ArrayList<>();\r\n        vehiculos.add(new Carro(\"Mazda 3\", 2012));\r\n        vehiculos.add(new Bus(45));\r\n        vehiculos.add(new Camion(8.5));\r\n\r\n        VisitorVehiculo visitanteImpuesto = new VisitorImpuesto();\r\n        VisitorVehiculo visitanteInspeccion = new VisitorInspeccion();\r\n\r\n        vista.mostrar(\"💰 Cálculo de Impuestos:\");\r\n        for (Vehiculo v : vehiculos) {\r\n            vista.mostrar(v.aceptar(visitanteImpuesto));\r\n        }\r\n\r\n        vista.mostrar(\"\\n🔎 Reporte de Inspección:\");\r\n        for (Vehiculo v : vehiculos) {\r\n            vista.mostrar(v.aceptar(visitanteInspeccion));\r\n        }\r\n    }\r\n}\r\n"
          }
        }
      },
      {
        "nombre": "InventarioElementosVideojuego",
        "archivos": {
          "model": {
            "Arma.java": "package co.edu.udistrital.model;\r\n\r\npublic class Arma implements ElementoInventario {\r\n    private String nombre;\r\n    private int danio;\r\n\r\n    public Arma(String nombre, int danio) {\r\n        this.nombre = nombre;\r\n        this.danio = danio;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n\r\n    public int getDanio() {\r\n        return danio;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorElemento visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n\r\n",
            "Armadura.java": "package co.edu.udistrital.model;\r\n\r\npublic class Armadura implements ElementoInventario {\r\n    private int defensa;\r\n\r\n    public Armadura(int defensa) {\r\n        this.defensa = defensa;\r\n    }\r\n\r\n    public int getDefensa() {\r\n        return defensa;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorElemento visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n\r\n",
            "ElementoInventario.java": "package co.edu.udistrital.model;\r\n\r\npublic interface ElementoInventario {\r\n    String aceptar(VisitorElemento visitor);\r\n}\r\n",
            "Pocion.java": "package co.edu.udistrital.model;\r\n\r\npublic class Pocion implements ElementoInventario {\r\n    private String tipo;\r\n    private int potencia;\r\n\r\n    public Pocion(String tipo, int potencia) {\r\n        this.tipo = tipo;\r\n        this.potencia = potencia;\r\n    }\r\n\r\n    public String getTipo() {\r\n        return tipo;\r\n    }\r\n\r\n    public int getPotencia() {\r\n        return potencia;\r\n    }\r\n\r\n    @Override\r\n    public String aceptar(VisitorElemento visitor) {\r\n        return visitor.visitar(this);\r\n    }\r\n}\r\n\r\n",
            "VisitorDescripcion.java": "package co.edu.udistrital.model;\r\n\r\npublic class VisitorDescripcion implements VisitorElemento {\r\n\r\n    @Override\r\n    public String visitar(Arma a) {\r\n        return \"🗡️ Arma: \" + a.getNombre() + \" (Daño: \" + a.getDanio() + \")\";\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Pocion p) {\r\n        return \"🧪 Pocion de \" + p.getTipo() + \" (Potencia: \" + p.getPotencia() + \")\";\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Armadura a) {\r\n        return \"🛡️ Armadura con defensa de \" + a.getDefensa();\r\n    }\r\n}\r\n",
            "VisitorElemento.java": "package co.edu.udistrital.model;\r\n\r\npublic interface VisitorElemento {\r\n    String visitar(Arma a);\r\n    String visitar(Pocion p);\r\n    String visitar(Armadura a);\r\n}\r\n",
            "VisitorValorComercio.java": "package co.edu.udistrital.model;\r\n\r\npublic class VisitorValorComercio implements VisitorElemento {\r\n\r\n    @Override\r\n    public String visitar(Arma a) {\r\n        return \"💰 Valor de \" + a.getNombre() + \": \" + (a.getDanio() * 10) + \" oro\";\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Pocion p) {\r\n        return \"💰 Valor de poción de \" + p.getTipo() + \": \" + (p.getPotencia() * 5) + \" oro\";\r\n    }\r\n\r\n    @Override\r\n    public String visitar(Armadura a) {\r\n        return \"💰 Valor de armadura: \" + (a.getDefensa() * 15) + \" oro\";\r\n    }\r\n}\r\n\r\n"
          },
          "view": {
            "VistaConsola.java": "package co.edu.udistrital.view;\r\n\r\npublic class VistaConsola {\r\n\tpublic void mostrar(String mensaje) {\r\n        System.out.println(mensaje);\r\n    }\r\n}\r\n"
          },
          "controller": {
            "AplMain.java": "package co.edu.udistrital.controller;\r\n\r\npublic class AplMain {\r\n\tpublic static void main(String[] args) {\r\n        Controller c = new Controller();\r\n        c.ejecutar();\r\n    }\r\n}\r\n",
            "Controller.java": "package co.edu.udistrital.controller;\r\n\r\nimport co.edu.udistrital.view.*;\r\nimport co.edu.udistrital.model.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Controller {\r\n    private VistaConsola vista;\r\n\r\n    public Controller() {\r\n        vista = new VistaConsola();\r\n    }\r\n\r\n    public void ejecutar() {\r\n        List<ElementoInventario> inventario = new ArrayList<>();\r\n        inventario.add(new Arma(\"Espada del amanecer\", 15));\r\n        inventario.add(new Pocion(\"Salud\", 20));\r\n        inventario.add(new Armadura(12));\r\n\r\n        VisitorElemento visitanteDescripcion = new VisitorDescripcion();\r\n        VisitorElemento visitanteValor = new VisitorValorComercio();\r\n\r\n        vista.mostrar(\"📋 Descripción del inventario:\");\r\n        for (ElementoInventario e : inventario) {\r\n            vista.mostrar(e.aceptar(visitanteDescripcion));\r\n        }\r\n\r\n        vista.mostrar(\"\\n🛒 Valor en oro:\");\r\n        for (ElementoInventario e : inventario) {\r\n            vista.mostrar(e.aceptar(visitanteValor));\r\n        }\r\n    }\r\n}\r\n\r\n"
          }
        }
      }
    ]
  }
}